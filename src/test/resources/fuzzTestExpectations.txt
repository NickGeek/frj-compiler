Program(classDeclarations={֏ั=Program.ClassDeclaration(isCapability=false, isInterface=false, name=֏ั, impl=[], extend=[], fields={Ⲓ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ኸ), name=Ⲓ)}, methods={})}, main=DotExpression.FieldAccessExpr(receiver=ￍ፟, fieldName=ၛ઼))
Program(classDeclarations={Q=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Q, impl=[], extend=[દֿ, ⁔, ｂ], fields={}, methods={}), ᢪᳲ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᢪᳲ, impl=[], extend=[], fields={}, methods={}), ꪼ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꪼ, impl=[], extend=[], fields={i=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=ஞ݂), name=i)}, methods={ஃ଼๖=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ખ༨︣೯), name=ஃ଼๖, expression=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=true), tail=Expression.EmptySignalExpr())), ਙૺၟ꯭᥉ꪳ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᦎ), name=ਙૺၟ꯭᥉ꪳ, expression=Expression.EmptySignalExpr())})}, main=Expression.HeadExpr(signalExpr=Expression.SignalConstructionExpr(head=this, tail=this)))
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=ⷃ))
Program(classDeclarations={ꬣ᳸=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꬣ᳸, impl=[], extend=[], fields={ￜ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ॐ᪷ஂ), name=ￜ), ᜯ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=￡ຼ), name=ᜯ)}, methods={})}, main=DotExpression.FieldAccessExpr(receiver=true, fieldName=ቝ))
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(receiver=this, fieldName=ጒ៑ꪾꠂ))
Program(classDeclarations={ꩀ⵿ꩼ꯭ࠥ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꩀ⵿ꩼ꯭ࠥ, impl=[], extend=[], fields={}, methods={}), ૹᤢ۲=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ૹᤢ۲, impl=[], extend=[ꫲ, ৎ︁, ଆെ], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=0)))
Program(classDeclarations={ꇲ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꇲ, impl=[], extend=[], fields={ૹ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꭱ), name=ૹ), ফ=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=Ⱨ꧖꯹ਃ࣠୦ௌ), name=ফ), ⰼ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ॶৌ), name=ⰼ)}, methods={}), Ⴭᤸࠥ၀॔ু්=Program.ClassDeclaration(isCapability=true, isInterface=false, name=Ⴭᤸࠥ၀॔ু්, impl=[], extend=[], fields={}, methods={}), ײ᜴ׅ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ײ᜴ׅ, impl=[ªꯥ], extend=[], fields={}, methods={ꠃে=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ღఀ), name=ꠃে, expression=2), 矓ܑ꩑=Program.Method(mdf=READ, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ꩺૣ), name=矓ܑ꩑, expression=0.4268798828125), ࠤ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᳶ), name=ࠤ, expression=Expression.InstantiationExpr(name=ꦲ, args=[Expression.InstantiationExpr(name=ⰵ, args=[Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=DotExpression.CallExpr(receiver=false, isLifted=true, methodName=ઍ, arguments=[, false, this])), Expression.LetExpr(mdf=IMM, name=শોᝒ၃, value=, boundTo=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=READ, name=ۿ, value=5, boundTo=Expression.TailExpr(signalExpr=true))))]), Expression.InstantiationExpr(name=ज़᪃ൗ, args=[]), \15, Expression.TailExpr(signalExpr=DotExpression.FieldAssignExpr(receiver=Expression.TailExpr(signalExpr=DotExpression.CallExpr(receiver=Expression.EmptySignalExpr(), isLifted=true, methodName=ℇ, arguments=[Expression.InstantiationExpr(name=ﷱ, args=[Expression.TailExpr(signalExpr=730)])])), fieldName=ၺ〭ు, value=))])), Ά=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ൎ), name=Ά, expression=false), ફັ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ゟꨴꢻ⵿۪૬), name=ફັ, expression=Expression.HeadExpr(signalExpr=this)), ಽ༩༷=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=false, name=ࢶ଼), name=ಽ༩༷, expression=ꬋ), ᱺ=Program.Method(mdf=READ, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=Ὕீ), name=ᱺ, expression=Expression.TailExpr(signalExpr=0.8)), ⶪ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ﹱꣁ), name=ⶪ, expression=Expression.InstantiationExpr(name=ℇ‿ၤ᥌ௗ, args=[])), ຍ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ￗ), name=ຍ, expression=Expression.SignalConstructionExpr(head=1.0, tail=Expression.InstantiationExpr(name=〳ંంೖ, args=[Expression.SignalConstructionExpr(head=this, tail=true), Expression.InstantiationExpr(name=Έ, args=[DotExpression.CallExpr(receiver=this, isLifted=true, methodName=ⷐ️ꩽ᜔᪸, arguments=[]), Expression.TailExpr(signalExpr=this)])])))}), L=Program.ClassDeclaration(isCapability=true, isInterface=false, name=L, impl=[], extend=[], fields={Ꚓ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=Ήꠂ़), name=Ꚓ)}, methods={}), ኽ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ኽ, impl=[ᮯ], extend=[], fields={ॼ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ఉ᳭), name=ॼ)}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(receiver=Expression.SignalConstructionExpr(head=this, tail=তꢀු᳙), fieldName=ꪫᬃ))
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=֏))
Program(classDeclarations={ꤊେꥍ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꤊେꥍ, impl=[ף], extend=[], fields={}, methods={})}, main=true)
Program(classDeclarations={}, main=1)
Program(classDeclarations={ⶠ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⶠ, impl=[], extend=[], fields={}, methods={}), ꪱ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꪱ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={ꨃ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꨃ, impl=[], extend=[ଏ߈, ꜝൊֿᝒ], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=90)
Program(classDeclarations={}, main=𑈿೉\')
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=Ͷ, args=[Expression.LetExpr(mdf=MUT, name=ᘝୖ, value=Expression.HeadExpr(signalExpr=DotExpression.CallExpr(receiver=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=ᜱ⳯, args=[DotExpression.FieldAccessExpr(receiver=Expression.HeadExpr(signalExpr=Expression.SignalConstructionExpr(head=true, tail=)), fieldName=﹩), Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ದ༙ൃܑ, value=this, boundTo=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=װ, args=[]), tail=Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=\104\uuuF47b𘠀ܐ\172\", tail=Expression.TailExpr(signalExpr=this))))))])), tail=15), isLifted=true, methodName=ࠨᤤ, arguments=[DotExpression.CallExpr(receiver=true, isLifted=false, methodName=ᜐ᳭, arguments=[DotExpression.CallExpr(receiver=, isLifted=true, methodName=ग़ు, arguments=[])]), this, Expression.InstantiationExpr(name=〲଼්᳴, args=[]), Expression.EmptySignalExpr(), Expression.LetExpr(mdf=IMM, name=ᭆ, value=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=1), tail=Expression.LetExpr(mdf=IMM, name=ኚ༙, value=º໒, boundTo=Expression.LetExpr(mdf=IMM, name=ᚒ, value=\\, boundTo=Expression.SignalConstructionExpr(head=, tail=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=this), tail=Expression.LetExpr(mdf=IMM, name=ꮠ, value=Expression.LetExpr(mdf=CAPSULE, name=મൂ­꧵, value=Expression.LetExpr(mdf=IMM, name=ඎ࿆, value=false, boundTo=Expression.EmptySignalExpr()), boundTo=\"\n\\), boundTo=Expression.InstantiationExpr(name=ῐ೭༩ꪷ߫, args=[]))))))), boundTo=ó)])), boundTo=Expression.InstantiationExpr(name=ந୧, args=[]))]), tail=6.984919309616089E-9))
Program(classDeclarations={Ω=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ω, impl=[], extend=[ৡ], fields={}, methods={})}, main=DotExpression.CallExpr(receiver=Expression.EmptySignalExpr(), isLifted=false, methodName=ゞ, arguments=[]))
Program(classDeclarations={ક=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ક, impl=[], extend=[], fields={}, methods={})}, main=\uFACe)
Program(classDeclarations={ἶⷹ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ἶⷹ, impl=[], extend=[], fields={}, methods={}), ⶴ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⶴ, impl=[], extend=[], fields={}, methods={}), ဧꦂۨ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ဧꦂۨ, impl=[], extend=[], fields={}, methods={}), ᙽ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᙽ, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.FieldAccessExpr(receiver=DotExpression.CallExpr(receiver=60, isLifted=false, methodName=ૐಁ᳒ෳꤦꯤ, arguments=[]), fieldName=Ꮑ))
Program(classDeclarations={ળ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ળ, impl=[], extend=[], fields={}, methods={}), ৳꙯=Program.ClassDeclaration(isCapability=true, isInterface=false, name=৳꙯, impl=[ᝦ], extend=[], fields={ﾴ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ଳৈૈ઼), name=ﾴ), ꧼ〯=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ቿ༘ಃᯧꦀꩽꥊ), name=ꧼ〯)}, methods={})}, main=Expression.SignalConstructionExpr(head=false, tail=DotExpression.FieldAssignExpr(receiver=Expression.SignalConstructionExpr(head=true, tail=DotExpression.CallExpr(receiver=୉ກ, isLifted=true, methodName=ধ, arguments=[])), fieldName=ﬔ꘣්්۱ௗ⃔, value=7.0)))
Program(classDeclarations={ៜ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ៜ, impl=[], extend=[], fields={}, methods={}), ؋ౣ၆ٰ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=؋ౣ၆ٰ, impl=[ꢈ, ῳ, ఆ, 〇], extend=[], fields={Ꭺ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ٮ), name=Ꭺ)}, methods={ꣽ᮵ௌ༾=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ഈ), name=ꣽ᮵ௌ༾, expression=Expression.TailExpr(signalExpr=this)), ︴᧑=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=ઽ), name=︴᧑, expression=40395)})}, main=0.0)
Program(classDeclarations={ꣷᩗၲ⳰ꧥ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꣷᩗၲ⳰ꧥ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=ৠ)
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=¢ꚞ­, args=[]))
Program(classDeclarations={}, main=DotExpression.CallExpr(receiver=15.0, isLifted=true, methodName=ߴ, arguments=[Expression.TailExpr(signalExpr=ι), ວ᮱]))
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=MUT, name=ᝬ, value=6.0, boundTo=)))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=ঽ⃐꙯ූ⃡ි)
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=﹏ꪷૈ᳸))
Program(classDeclarations={}, main=\75)
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(receiver=Expression.InstantiationExpr(name=ਮ᥍ꩼ, args=[ꧦ, DotExpression.CallExpr(receiver=DotExpression.CallExpr(receiver=this, isLifted=false, methodName=ᲇ᳡, arguments=[]), isLifted=false, methodName=ಏ១໊೯, arguments=[Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=false)), Expression.TailExpr(signalExpr=Ꮽ), this, Ꭰ𑦨, Expression.EmptySignalExpr()])]), fieldName=ਸ਼܏ၣ໌))
Program(classDeclarations={৻￻=Program.ClassDeclaration(isCapability=true, isInterface=false, name=৻￻, impl=[Ό], extend=[], fields={ﶗ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ﹲേ), name=ﶗ)}, methods={})}, main=Expression.InstantiationExpr(name=쯸࿆, args=[]))
Program(classDeclarations={ꦭऺ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꦭऺ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=ᵔ, value=Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=ῄ⳰, args=[this])), boundTo=DotExpression.CallExpr(receiver=910.25, isLifted=true, methodName=ˡి, arguments=[])))
Program(classDeclarations={ௐೖ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ௐೖ, impl=[], extend=[ꙉ, ႎꪸ, এ], fields={}, methods={})}, main=Expression.InstantiationExpr(name=ￎ, args=[DotExpression.FieldAccessExpr(receiver=522, fieldName=ⷂ), this, Expression.EmptySignalExpr()]))
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ভ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ভ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=Ʝ, value=Expression.LetExpr(mdf=IMM, name=〸, value=Expression.EmptySignalExpr(), boundTo=Expression.EmptySignalExpr()), boundTo=Expression.SignalConstructionExpr(head=ˬ, tail=Expression.SignalConstructionExpr(head=false, tail=Expression.EmptySignalExpr()))))
Program(classDeclarations={ﬔົ⃛=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ﬔົ⃛, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=true))
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=DotExpression.FieldAccessExpr(receiver=Expression.SignalConstructionExpr(head=0.0, tail=Expression.LetExpr(mdf=IMM, name=ἤ༘, value=Expression.LetExpr(mdf=IMM, name=ງ, value=ᱲ٘, boundTo=432.0), boundTo=2.0)), fieldName=ೠ4ૻූ⃑)))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=0, tail=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=ꫂ, args=[Expression.InstantiationExpr(name=ⷆ, args=[, Expression.LetExpr(mdf=IMM, name=ጲ, value=Expression.InstantiationExpr(name=ｔ, args=[0.0]), boundTo=)]), Expression.EmptySignalExpr()]), tail=0.0)), tail=Expression.InstantiationExpr(name=ଽ, args=[DotExpression.CallExpr(receiver=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=Ί), tail=DotExpression.FieldAccessExpr(receiver=this, fieldName=ꞵꚟꙶ)), isLifted=true, methodName=ㇹ꣮, arguments=[Expression.LetExpr(mdf=IMM, name=ℂ, value=this, boundTo=this)])])))
Program(classDeclarations={Ⳬ‮ొ᳙=Program.ClassDeclaration(isCapability=true, isInterface=false, name=Ⳬ‮ొ᳙, impl=[], extend=[], fields={เ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꫛׂ), name=เ), ᰔଁં=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ใ), name=ᰔଁં)}, methods={ࠀ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ເ), name=ࠀ, expression=Expression.HeadExpr(signalExpr=this)), ℙ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ꧺ), name=ℙ, expression=ꠉை), $಼॑=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=M), name=$಼॑, expression=Expression.InstantiationExpr(name=יּ, args=[Expression.InstantiationExpr(name=￠᷄­, args=[])]))}), ⵯ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⵯ, impl=[], extend=[ꧣ, எު, ῴஂ෦], fields={}, methods={})}, main=ၽઁ)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=this, tail=true))
Program(classDeclarations={}, main=଍\uF2dF)
Program(classDeclarations={ⳬஂ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ⳬஂ, impl=[], extend=[], fields={ਲ਼ꚟ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ⶼ), name=ਲ਼ꚟ)}, methods={ⅆ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ￎᝳූಂ᭙), name=ⅆ, expression=Expression.HeadExpr(signalExpr=ኲૹ🇦𞣇)), ˍ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ღ￺), name=ˍ, expression=Expression.InstantiationExpr(name=ꣳ, args=[]))}), ጔ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ጔ, impl=[], extend=[], fields={ߺ௬=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꫝ૦ੵ), name=ߺ௬), ω꯱=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ဇ), name=ω꯱)}, methods={}), ￥=Program.ClassDeclaration(isCapability=true, isInterface=false, name=￥, impl=[ᛶ], extend=[], fields={}, methods={ⶻᝳᤳ꤀=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ཀۢഀ), name=ⶻᝳᤳ꤀, expression=1168.0), ﹎=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ﬃꦂ), name=﹎, expression=DotExpression.CallExpr(receiver=শ᱄, isLifted=true, methodName=ͼۢ۝ั, arguments=[]))}), ￕ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ￕ, impl=[], extend=[ꭥ], fields={}, methods={}), 〵ꫭ꪿ഁᬹၭ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=〵ꫭ꪿ഁᬹၭ, impl=[ℕ꣦ꢀ݁ੑ, ヾ, ළঃ], extend=[], fields={ⁱ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ᮮ), name=ⁱ), ๅ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ᢪ), name=ๅ)}, methods={ﺷ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ປ), name=ﺷ, expression=\u926c\043𑴺), Ϳ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ச), name=Ϳ, expression=Expression.InstantiationExpr(name=ꫲ৪ၙ⳯, args=[]))}), ℤঁৗ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ℤঁৗ, impl=[ਆୢ, Ὓֿᢆ꫁, ட], extend=[], fields={}, methods={}), ൎ᩿፟=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ൎ᩿፟, impl=[], extend=[〩], fields={}, methods={}), ඟ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ඟ, impl=[], extend=[ϩഁ, ⶀ⃮], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=ꘫৌ, value=Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=true, tail=Expression.EmptySignalExpr())), boundTo=28))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=7, tail=6.0E29))
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=ឆ, args=[])))
Program(classDeclarations={ⳳ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⳳ, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=8.526512829121202E-13)
Program(classDeclarations={ಖංٰ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ಖංٰ, impl=[I, ポ᳹, ˡ᱙ൄ, රັৗ], extend=[], fields={}, methods={ꟿ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ഛ), name=ꟿ, expression=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=CAPSULE, name=ꬎᮁ, value=Expression.InstantiationExpr(name=ቓꠤ, args=[]), boundTo=0)))}), ۯꯩ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ۯꯩ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=Ѝႊൌ, args=[]))
Program(classDeclarations={હீ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=હீ, impl=[], extend=[], fields={ढ़਼ૣ್=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꠊꢀ), name=ढ़਼ૣ್), ﹳ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Չၠ), name=ﹳ)}, methods={})}, main=𐴨𐒰𞹐)
Program(classDeclarations={}, main=)
Program(classDeclarations={ΉჍ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ΉჍ, impl=[], extend=[ﬄ፞], fields={}, methods={}), $⃥ׄ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=$⃥ׄ, impl=[], extend=[ꚛ, Ⴧೢ, ⶮೋ, ᏹ, リ9, ࡠ, ࠨ], fields={}, methods={}), ℴ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ℴ, impl=[ゟ], extend=[], fields={ₘ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ቜ), name=ₘ)}, methods={ࢨꦂ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꡲ), name=ࢨꦂ, expression=false), ꠉ᜔=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᛵ), name=ꠉ᜔, expression=)}), ℨ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ℨ, impl=[], extend=[], fields={}, methods={}), ʖ٣ᜳ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ʖ٣ᜳ, impl=[ₐ], extend=[], fields={}, methods={〇=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꪼ᷼ॆॢ), name=〇, expression=Expression.InstantiationExpr(name=ວ, args=[]))}), ℬ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ℬ, impl=[ᥳ᠋], extend=[], fields={ℂ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ﷰ), name=ℂ)}, methods={ᮮౖ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᏹෟۧੑ౦), name=ᮮౖ, expression=true)})}, main=0)
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={떴=Program.ClassDeclaration(isCapability=false, isInterface=true, name=떴, impl=[], extend=[], fields={}, methods={})}, main=true)
Program(classDeclarations={ቝ2５᮶ఃః؜ു=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ቝ2５᮶ఃః؜ു, impl=[], extend=[ꮀ], fields={}, methods={}), ꪱ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ꪱ, impl=[ᝌꣃ], extend=[], fields={}, methods={ẏꪴꚞ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ߴꪰ۫), name=ẏꪴꚞ, expression=this), ⵢ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=Ω), name=ⵢ, expression=0.0), ᳫꦼ゙ਾၟ￹ౖ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ՙၨ૯ෙ), name=ᳫꦼ゙ਾၟ￹ౖ, expression=true), ສ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᚙᨛ), name=ສ, expression=true), خ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ٲ), name=خ, expression=Expression.InstantiationExpr(name=Ἤ〤ెຼ႗7, args=[Ὂ, Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=this)), ꩂ]))}), ᜑ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᜑ, impl=[Ᾱ], extend=[], fields={ג=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ණ), name=ג), ͷ꯬=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=ᰆ഻), name=ͷ꯬), ꫀᯭേٙ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ᪧ), name=ꫀᯭേٙ)}, methods={Ｑᢅೋ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=〳), name=Ｑᢅೋ, expression=0), Éꣁ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=READ, isLifted=false, name=எ), name=Éꣁ, expression=this), ዻ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ቔ), name=ዻ, expression=Expression.LetExpr(mdf=IMM, name=Ο, value=ߺ᥎᧑ૢ, boundTo=Expression.EmptySignalExpr()))}), ਕ௦꫁=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ਕ௦꫁, impl=[], extend=[ꪼ̽᠋], fields={}, methods={}), ￏਃ؜=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ￏਃ؜, impl=[], extend=[], fields={}, methods={Ⴇৈ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᝬ்ꙴꩃ︌), name=Ⴇৈ, expression=), ܐ⁤ၖോ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=Ἵ), name=ܐ⁤ၖോ, expression=Expression.SignalConstructionExpr(head=, tail=this)), ﺃ้=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ꝺ), name=ﺃ้, expression=ਜ਼), ೡૻ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ඬ), name=ೡૻ, expression=\"\n\1጖)}), 〦૿ⷲ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=〦૿ⷲ, impl=[ￚ߫ᜒ଼ೣ], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(head=this, tail=Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=this, tail=Expression.LetExpr(mdf=IMM, name=ਏ৬, value=true, boundTo=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=DotExpression.CallExpr(receiver=96, isLifted=false, methodName=ὐ۳8, arguments=[Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=true), tail=Expression.InstantiationExpr(name=¥, args=[]))]))), tail=Expression.SignalConstructionExpr(head=5.0, tail=ୋ)))))))))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=CAPSULE, name=ୡ༵ၟ, value=600.0, boundTo=Expression.InstantiationExpr(name=⁔ꪰ, args=[Expression.InstantiationExpr(name=ꬩᷴ, args=[])]))))
Program(classDeclarations={}, main=\uuuuuDbcD᛹ኸ\4)
Program(classDeclarations={ಆ﻿=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ಆ﻿, impl=[], extend=[], fields={}, methods={Ⳳ᠍ఀ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᳶ), name=Ⳳ᠍ఀ, expression=Expression.TailExpr(signalExpr=7.0))})}, main=ቜ໙)
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=this))
Program(classDeclarations={}, main=)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=DotExpression.CallExpr(receiver=Expression.HeadExpr(signalExpr=DotExpression.FieldAccessExpr(receiver=false, fieldName=ߵꨮꪷ)), isLifted=true, methodName=ﬥ﻿ੋ᤻ൈ⃨, arguments=[]), tail=2))
Program(classDeclarations={ꧼꢀ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꧼꢀ, impl=[], extend=[], fields={ℇ༿ൣ⃧=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ਲ਼), name=ℇ༿ൣ⃧), ﬆ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ଐ⃡), name=ﬆ), ￥ꩌ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=Ὑ), name=￥ꩌ)}, methods={︴꩘=Program.Method(mdf=READ, returnType=Program.Type(mdf=READ, isLifted=false, name=ୱ), name=︴꩘, expression=Expression.EmptySignalExpr())}), ㆣ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ㆣ, impl=[], extend=[Ⴭ, ὓꦺౖ], fields={}, methods={}), ᢁ﻿=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᢁ﻿, impl=[ᤙ], extend=[], fields={ສ܏=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ⴱੑ؜), name=ສ܏)}, methods={ༀ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=લ), name=ༀ, expression=Expression.InstantiationExpr(name=ᶕﬞ, args=[Expression.LetExpr(mdf=MUT, name=ኳ, value=87305.0, boundTo=ኍ), Expression.LetExpr(mdf=IMM, name=Ⳮ࠙ᜲ, value=this, boundTo=Expression.InstantiationExpr(name=つං꣮, args=[Expression.TailExpr(signalExpr=13.25), 0.0, ൖꚟ⁤ၖ])), ꣻ, ຂ])), ㆡ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=ῲ), name=ㆡ, expression=Expression.HeadExpr(signalExpr=)), ꘔꪴ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ଡ଼౭ꢽ), name=ꘔꪴ, expression=false), ℸ᱖=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ວ), name=ℸ᱖, expression=0.0), ℬ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=MUT, isLifted=false, name=〇ऻ3), name=ℬ, expression=Expression.SignalConstructionExpr(head=12.0, tail=Expression.EmptySignalExpr())), ৼ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᢃ), name=ৼ, expression=Expression.LetExpr(mdf=IMM, name=ꣽ༷ꚞ, value=3711, boundTo=))}), ಎ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ಎ, impl=[], extend=[], fields={}, methods={}), ᤅৢ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᤅৢ, impl=[], extend=[], fields={}, methods={ヿ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᧁ), name=ヿ, expression=1.5446368976148174E-211)})}, main=11)
Program(classDeclarations={〆〫=Program.ClassDeclaration(isCapability=true, isInterface=false, name=〆〫, impl=[], extend=[], fields={}, methods={})}, main=ቜ)
Program(classDeclarations={}, main=ᢉ߀ৈꦼ༡)
Program(classDeclarations={Ὕ⃭҄=Program.ClassDeclaration(isCapability=true, isInterface=false, name=Ὕ⃭҄, impl=[Է꫶], extend=[], fields={ꫂ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=Ϳ), name=ꫂ)}, methods={סּ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ｆܳ), name=סּ, expression=15.125), Ⴧ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ɷ), name=Ⴧ, expression=Expression.EmptySignalExpr())})}, main=DotExpression.CallExpr(receiver=42, isLifted=false, methodName=ꁇꙶࠗ, arguments=[true]))
Program(classDeclarations={}, main=this)
Program(classDeclarations={ଏੇ߀ஂܸ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ଏੇ߀ஂܸ, impl=[], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=this, tail=), tail=ⵯ়༹២ໍꫭ))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ퟎ, value=Expression.LetExpr(mdf=IMM, name=ধៀ, value=Expression.HeadExpr(signalExpr=DotExpression.CallExpr(receiver=9.7421875, isLifted=false, methodName=އ, arguments=[this])), boundTo=this), boundTo=this))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=8.12247035053579E23, tail=DotExpression.CallExpr(receiver=Expression.EmptySignalExpr(), isLifted=true, methodName=ꠅ, arguments=[])))
Program(classDeclarations={ளֿેୗୗֿිෝ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ளֿેୗୗֿිෝ, impl=[], extend=[ഏઁ], fields={}, methods={})}, main=this)
Program(classDeclarations={ቐ᱀ਃ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ቐ᱀ਃ, impl=[ˮ፝꙯4ꢷ, ዀ꧑ੈ], extend=[], fields={}, methods={}), ℳൊං១=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ℳൊං១, impl=[], extend=[], fields={}, methods={ᳰ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᾼ), name=ᳰ, expression=true), г=Program.Method(mdf=IMM, returnType=Program.Type(mdf=MUT, isLifted=false, name=ౠ), name=г, expression=Expression.EmptySignalExpr()), Ὓ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ລੂ⳰೧), name=Ὓ, expression=Expression.InstantiationExpr(name=ಸৈා, args=[0]))})}, main=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=)))
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=27))
Program(classDeclarations={ﹱ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ﹱ, impl=[], extend=[], fields={}, methods={})}, main=false)
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=૱, value=Expression.HeadExpr(signalExpr=DotExpression.CallExpr(receiver=540.0, isLifted=true, methodName=ድ, arguments=[false])), boundTo=8.0))
Program(classDeclarations={〩૯=Program.ClassDeclaration(isCapability=false, isInterface=true, name=〩૯, impl=[], extend=[], fields={}, methods={}), ᮅ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᮅ, impl=[ᝮੀၪ], extend=[], fields={ﮐ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ਚ༿), name=ﮐ)}, methods={}), ꪺ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ꪺ, impl=[], extend=[], fields={ꫡ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=৻଼), name=ꫡ), פּᮨ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꬅౕ၃੍), name=פּᮨ), ⅎ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ࡢ), name=ⅎ)}, methods={ࠤ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=ῳ꣬), name=ࠤ, expression=true), ಎ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ₒ), name=ಎ, expression=DotExpression.FieldAccessExpr(receiver=Expression.SignalConstructionExpr(head=, tail=Expression.TailExpr(signalExpr=true)), fieldName=ℭ))})}, main=DotExpression.CallExpr(receiver=this, isLifted=true, methodName=Ό࠙០ෝઁ, arguments=[DotExpression.FieldAssignExpr(receiver=this, fieldName=ༀ༘ᤩ, value=3)]))
Program(classDeclarations={}, main=this)
Program(classDeclarations={ହཷꢁ್͇=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ହཷꢁ್͇, impl=[], extend=[], fields={}, methods={}), ଏ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ଏ, impl=[ᳶෑ, Ό], extend=[], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=ꘚ, value=Γ, boundTo=this))
Program(classDeclarations={֏=Program.ClassDeclaration(isCapability=false, isInterface=true, name=֏, impl=[], extend=[Ⰵౣ], fields={}, methods={}), ၦ᭳=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ၦ᭳, impl=[ꪱ, ﹴູ], extend=[], fields={﹩=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ச᱑ᜳೖ), name=﹩), Έ᪄ꤩ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ﶽ᪱), name=Έ᪄ꤩ)}, methods={ⷆ⃡ஂൂ꩙ꠦ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ຫ), name=ⷆ⃡ஂൂ꩙ꠦ, expression=1)})}, main=ꪱ)
Program(classDeclarations={}, main=DotExpression.FieldAssignExpr(receiver=this, fieldName=ੳꠂ, value=Expression.EmptySignalExpr()))
Program(classDeclarations={ቘ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ቘ, impl=[], extend=[], fields={}, methods={})}, main=Expression.TailExpr(signalExpr=true))
Program(classDeclarations={}, main=true)
Program(classDeclarations={ഽົ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ഽົ, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ꫀ꩐=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꫀ꩐, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ಔ౨=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ಔ౨, impl=[], extend=[ྋ૩], fields={}, methods={}), գ〫=Program.ClassDeclaration(isCapability=false, isInterface=true, name=գ〫, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.CallExpr(receiver=, isLifted=true, methodName=ꟺ, arguments=[]))
Program(classDeclarations={ꫂ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꫂ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={￠=Program.ClassDeclaration(isCapability=false, isInterface=false, name=￠, impl=[], extend=[], fields={ೲ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ቯ), name=ೲ), 〼­=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=צୢ￹), name=〼­), Ὑ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ጂૈ༙ꨶ), name=Ὑ), ＿ಃ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ⱕ꯷؜), name=＿ಃ), ߙ࿆=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ᝯၣ), name=ߙ࿆), ঽ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ῗ༷), name=ঽ), ঢ়=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ⵡ഻), name=ঢ়)}, methods={})}, main=Expression.InstantiationExpr(name=ᪧ, args=[]))
Program(classDeclarations={ൎﬞۧુ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ൎﬞۧુ, impl=[], extend=[ͺ], fields={}, methods={}), ﻺ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ﻺ, impl=[ᰆᮁ], extend=[], fields={ℨၞࣵ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ࢻ᠍ᳳ࿆ྟ໊ᳳ), name=ℨၞࣵ), v‏=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Á᜴), name=v‏), ⁿ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ᡳ), name=ⁿ)}, methods={})}, main=Expression.HeadExpr(signalExpr=ౙஂૢꦃ߯))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ªၤ, value=5.633E-6, boundTo=Expression.SignalConstructionExpr(head=this, tail=14720.0)))
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=false)
Program(classDeclarations={Ⴭ҇=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ⴭ҇, impl=[], extend=[], fields={}, methods={}), ঽ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ঽ, impl=[ˌ, ኴ], extend=[], fields={Ꮗ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ႎ), name=Ꮗ), ￛၱ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Ⴡ), name=ￛၱ)}, methods={}), ゟꩃৈ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ゟꩃৈ, impl=[], extend=[], fields={}, methods={})}, main=1)
Program(classDeclarations={}, main=10)
Program(classDeclarations={؋߫=Program.ClassDeclaration(isCapability=false, isInterface=false, name=؋߫, impl=[], extend=[], fields={ᚧ﻿ஂ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ஐ᷽), name=ᚧ﻿ஂ)}, methods={ઽຶੵ႔໌︌᪂ᳲ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=ܥ), name=ઽຶੵ႔໌︌᪂ᳲ, expression=), ܐ଼=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=టୈ҇), name=ܐ଼, expression=0)}), ヿ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ヿ, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=டৢ꤬‮, value=204, boundTo=3))
Program(classDeclarations={ℒූ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ℒූ, impl=[], extend=[琉්, ⶶੵೕ], fields={}, methods={}), ኾᝳ࠭=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ኾᝳ࠭, impl=[], extend=[Ί, ൽ, ℴ], fields={}, methods={}), ൔ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ൔ, impl=[], extend=[ᠼ], fields={}, methods={}), ゕ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ゕ, impl=[ⶩဳೄׅ], extend=[], fields={ລ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=؋), name=ລ), എೊೣ਼᱆᧘=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ൟ҅ꤪۢ), name=എೊೣ਼᱆᧘)}, methods={ମﬞ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꥠોꩌ꦳ࠪ꛰ఁ꩖), name=ମﬞ, expression=Expression.SignalConstructionExpr(head=DotExpression.FieldAccessExpr(receiver=35, fieldName=ড়ၙ), tail=Expression.EmptySignalExpr()))}), ՙ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ՙ, impl=[], extend=[ᭋी, ዀැ, ℕ⃡, ꪆꦀ, ꤤ, ꚧ゚᥆, ࠤ, ꬕ़], fields={}, methods={})}, main=)
Program(classDeclarations={Ｑ്ࠪ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ｑ്ࠪ, impl=[], extend=[], fields={}, methods={}), ឯ઼්ྒྷ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ឯ઼්ྒྷ, impl=[], extend=[ਲ਼්, ﷷꧥ഻႙], fields={}, methods={}), ᢞ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᢞ, impl=[ດ௮ઃ︍, 〳, ⳳ, ͱ, ࠨ۸ೋ೨ం੍ে, יּ༹], extend=[], fields={}, methods={}), Ά꠆=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ά꠆, impl=[], extend=[ቘ], fields={}, methods={}), ဿ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ဿ, impl=[], extend=[], fields={}, methods={})}, main=0)
Program(classDeclarations={}, main=)
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ॐ, value=ￚᤠ, boundTo=ಶࠖ)))
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=0)
Program(classDeclarations={ௐ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ௐ, impl=[], extend=[ই꯸࿆ૼꩼᮀ⃡꪿], fields={}, methods={}), ࢻ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ࢻ, impl=[], extend=[ໂᜓ], fields={}, methods={}), ଢ଼ᮁᤵ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ଢ଼ᮁᤵ, impl=[ቋ, ຍ, ⳬ], extend=[], fields={}, methods={ꚹֿി꤬োો܏=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=Ὓᮬ), name=ꚹֿി꤬োો܏, expression=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=87.2))), ꪨ྇=Program.Method(mdf=IMM, returnType=Program.Type(mdf=MUT, isLifted=false, name=ᛶ￻ׇ), name=ꪨ྇, expression=217.0), ﬅ༘ಁ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=ퟲྗ), name=ﬅ༘ಁ, expression=DotExpression.CallExpr(receiver=true, isLifted=false, methodName=ៜ〫ஂ‌߆, arguments=[]))}), ꧏ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꧏ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=㫬))
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=this))
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.EmptySignalExpr())))))
Program(classDeclarations={ὑ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ὑ, impl=[ጔ, ꫀꠋ, ஹ], extend=[], fields={}, methods={ૐ︢=Program.Method(mdf=MUT, returnType=Program.Type(mdf=MUT, isLifted=false, name=ꣳ), name=ૐ︢, expression=Expression.TailExpr(signalExpr=false)), ι=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⅆ), name=ι, expression=32.0)})}, main=ͺ༵ុ)
Program(classDeclarations={ኦൄം=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ኦൄം, impl=[], extend=[], fields={}, methods={ᮇ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ῄ〪), name=ᮇ, expression=Expression.InstantiationExpr(name=ৠި, args=[Expression.TailExpr(signalExpr=), 𑄀, 51, false, DotExpression.FieldAccessExpr(receiver=Expression.EmptySignalExpr(), fieldName=ࢴ)]))}), ᮊ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᮊ, impl=[], extend=[ℇꪸۘ], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=ꧾ, value=Expression.EmptySignalExpr(), boundTo=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=🥳, tail=this), tail=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=ዄ))), tail=true)))
Program(classDeclarations={}, main=ﾤ)
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(receiver=Expression.TailExpr(signalExpr=false), fieldName=ਸ))
Program(classDeclarations={ೱ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ೱ, impl=[], extend=[ՙ꣐ຼ, ഽ᱄᠋], fields={}, methods={}), য়=Program.ClassDeclaration(isCapability=false, isInterface=true, name=য়, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=true))
Program(classDeclarations={}, main=944.0)
Program(classDeclarations={ඍ᜔꫁ꦃ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ඍ᜔꫁ꦃ, impl=[Ⳬ꣑ꦀ, ي, ⅎ, Ŝ꩓, Ⴭ], extend=[], fields={ৼ౫ॖූ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=Ͷ), name=ৼ౫ॖූ), ꬆ=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ㄣ༡ෙ࿆᮱), name=ꬆ), ྊ႓=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ᝌ), name=ྊ႓), ۿᢩᩛ᥈=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Ά), name=ۿᢩᩛ᥈), ˮ᮸=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ၸ່), name=ˮ᮸), প=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Ὑ), name=প)}, methods={}), ゟ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ゟ, impl=[], extend=[], fields={}, methods={})}, main=Infinity)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=12, tail=Expression.LetExpr(mdf=READ, name=ꬔၠ, value=Expression.EmptySignalExpr(), boundTo=5.4E-69)))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ーᝲ߇, value=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=true)), boundTo=))
Program(classDeclarations={}, main=true)
Program(classDeclarations={ቔ᭕᱈=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ቔ᭕᱈, impl=[], extend=[ਉேఃး꙯േ, ৰ, ꥮৗ, ⱅྔꥉ, ՙ], fields={}, methods={})}, main=ͺ)
Program(classDeclarations={ۥോஂׂ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ۥോஂׂ, impl=[], extend=[], fields={}, methods={}), ǣ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ǣ, impl=[$᱔᪳, ꣵ, ᥳ, ஜ༷︢], extend=[], fields={ࡓၨಁꙸ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ຊ), name=ࡓၨಁꙸ), ꜙ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ኴ), name=ꜙ)}, methods={ῲ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=ଈٰႏ), name=ῲ, expression=2270)}), ந᳡ᬄ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ந᳡ᬄ, impl=[], extend=[ଥ, ՙꫵꧥ￻, ພ], fields={}, methods={}), ᚖ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᚖ, impl=[ₒ], extend=[], fields={ｉ⁣୪=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ⵯஂઃꩻ྇), name=ｉ⁣୪), დ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ঽୌ), name=დ), ഽ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ࠨ꧴ૌ), name=ഽ), ල=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ಀ), name=ල)}, methods={ℿٰܑ໘ျ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ꞕ), name=ℿٰܑ໘ျ, expression=Expression.InstantiationExpr(name=ඞັ, args=[])), दᳳ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ՙେᤴ), name=दᳳ, expression=Expression.LetExpr(mdf=MUT, name=ᢍ, value=Expression.HeadExpr(signalExpr=true), boundTo=Expression.TailExpr(signalExpr=ꩀ))), ۻ᮸=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ಽ༵), name=ۻ᮸, expression=this)}), Ἐ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=Ἐ, impl=[த, ℐ꩓༵], extend=[], fields={ມ=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=ௐ᥎), name=ມ), ࠨ᳭=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ܩ), name=ࠨ᳭)}, methods={ᨁ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ධᤣ), name=ᨁ, expression=11), ϙ᭭=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ڨࣧ), name=ϙ᭭, expression=Expression.LetExpr(mdf=IMM, name=ப, value=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=MUT, name=ꟽໍ, value=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=ⴭෲͅ, args=[]), tail=Expression.EmptySignalExpr()), boundTo=DotExpression.FieldAccessExpr(receiver=Expression.SignalConstructionExpr(head=this, tail=Expression.TailExpr(signalExpr=26)), fieldName=ಽਂ၉))), boundTo=DotExpression.CallExpr(receiver=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=Ὓ︆, value=false, boundTo=Expression.LetExpr(mdf=IMM, name=ኳ், value=Expression.EmptySignalExpr(), boundTo=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=Expression.EmptySignalExpr()), tail=true))))), isLifted=true, methodName=ℙ፟߆, arguments=[])))}), হ꠆=Program.ClassDeclaration(isCapability=false, isInterface=true, name=হ꠆, impl=[], extend=[ꭞ], fields={}, methods={}), ⰽ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⰽ, impl=[], extend=[], fields={}, methods={}), ਫ਼=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ਫ਼, impl=[ঐ], extend=[], fields={ⷞ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ࢧꠂຸ), name=ⷞ)}, methods={})}, main=)
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=this)
Program(classDeclarations={ታ8ၱ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ታ8ၱ, impl=[], extend=[ಳ⃐, ⸯ࿆, ଢ଼ꠧ­૾៩], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=ሳ۪േ, value=true, boundTo=this))
Program(classDeclarations={}, main=0.9375)
Program(classDeclarations={დ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=დ, impl=[], extend=[], fields={}, methods={ꓑ꣐ꨬ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=ଛ), name=ꓑ꣐ꨬ, expression=true), நꧥ￺ֿ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꓰ), name=நꧥ￺ֿ, expression=DotExpression.FieldAccessExpr(receiver=Expression.TailExpr(signalExpr=DotExpression.CallExpr(receiver=Expression.InstantiationExpr(name=ຳׄ, args=[]), isLifted=true, methodName=ᨓ, arguments=[])), fieldName=ﷴૉ)), ᥖ꫶්໊­১༙=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ඐ), name=ᥖ꫶්໊­১༙, expression=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=DotExpression.FieldAccessExpr(receiver=false, fieldName=ڝ)), tail=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=ໜ્᱇, args=[Expression.EmptySignalExpr()]), tail=35.0))), ຍ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=װ), name=ຍ, expression=0.0)}), ꬖ᳒ၣ਼=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꬖ᳒ၣ਼, impl=[], extend=[], fields={}, methods={}), এ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=এ, impl=[], extend=[], fields={Թ៝ꦀ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ㄑ౬), name=Թ៝ꦀ)}, methods={}), _=Program.ClassDeclaration(isCapability=false, isInterface=false, name=_, impl=[], extend=[], fields={}, methods={})}, main=)
Program(classDeclarations={}, main=꧿\')
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=𞹗׫, tail=))
Program(classDeclarations={ㇸໟ᳸=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ㇸໟ᳸, impl=[], extend=[], fields={າᤢ︉=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ㇴ), name=າᤢ︉)}, methods={}), ল഼ొ໕=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ল഼ొ໕, impl=[], extend=[ສ, Ꙃ], fields={}, methods={}), ᦰႌ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᦰႌ, impl=[ؼꠂ᷵ྲ⵿, ﬂ], extend=[], fields={ຊꯤࣛ၃=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ᜭ), name=ຊꯤࣛ၃), ৻ຸ̽=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ኇ), name=৻ຸ̽)}, methods={ኗ୍=Program.Method(mdf=IMM, returnType=Program.Type(mdf=MUT, isLifted=false, name=ￖ୭), name=ኗ୍, expression=Expression.HeadExpr(signalExpr=DotExpression.FieldAccessExpr(receiver=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=9.0E-4), tail=Expression.HeadExpr(signalExpr=this)), fieldName=ꀑꯣ௯؁))), ﮬꪷ￻ᬻ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=〸ꚟ์ັ), name=ﮬꪷ￻ᬻ, expression=Expression.InstantiationExpr(name=ᯋꩃᰪ, args=[]))})}, main=4.5102810375396984E-17)
Program(classDeclarations={ዋ๑꙯=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ዋ๑꙯, impl=[], extend=[ߋັု, ቛ], fields={}, methods={})}, main=3108.5)
Program(classDeclarations={ಽၞၪ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ಽၞၪ, impl=[], extend=[ᳪ], fields={}, methods={})}, main=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=ⴍۚ, value=60.0, boundTo=Expression.InstantiationExpr(name=ᥳ, args=[])), tail=\"))
Program(classDeclarations={ஐ⳯꧔ັ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ஐ⳯꧔ັ, impl=[], extend=[], fields={}, methods={}), ｕꦂ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ｕꦂ, impl=[], extend=[], fields={}, methods={}), ꩿ҇=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ꩿ҇, impl=[], extend=[], fields={Ꮭົഁ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ఎꦃ), name=Ꮭົഁ)}, methods={ໆ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ਸ), name=ໆ, expression=ⶬ්)}), ⁿꢹ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ⁿꢹ, impl=[], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(head=0.0, tail=111))
Program(classDeclarations={ꬓ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ꬓ, impl=[ᾷৈ᱗᪕۫, ₲], extend=[], fields={ꬄৣ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ⅅ⵿), name=ꬄৣ)}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ℂ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ℂ, impl=[], extend=[], fields={}, methods={ￛ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=READ, isLifted=false, name=ༀ), name=ￛ, expression=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=ꠖ))), ͷࣣ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=￦), name=ͷࣣ, expression=Expression.InstantiationExpr(name=ｯ, args=[]))}), ወ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ወ, impl=[ළ, ዊ, ർັৈ, ⳮ], extend=[], fields={ⅱၳ᧗=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ಸ), name=ⅱၳ᧗), ૡᝳୖ=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ఘྲྀ), name=ૡᝳୖ)}, methods={}), 々゚༵=Program.ClassDeclaration(isCapability=false, isInterface=true, name=々゚༵, impl=[], extend=[], fields={}, methods={}), ᯟ҄ꠧ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᯟ҄ꠧ, impl=[ⶲ], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(head=0.0, tail=this))
Program(classDeclarations={ᾯ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᾯ, impl=[ꪵ᳷], extend=[], fields={}, methods={})}, main=26.0)
Program(classDeclarations={ၐ୍ຼ⃮྇=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ၐ୍ຼ⃮྇, impl=[], extend=[ꫀ႗], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=this))
Program(classDeclarations={ॐ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ॐ, impl=[ﶄ, Ⱇ୪ᢩ], extend=[], fields={ꜗෳࣔ=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=ꠄಂొ༾ؖ), name=ꜗෳࣔ)}, methods={ⵯᷯ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᱏೕࣵേ), name=ⵯᷯ, expression=Expression.LetExpr(mdf=READ, name=ⷎେ, value=true, boundTo=Expression.InstantiationExpr(name=ଐ⳱, args=[]))), ၥ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ॳ༙), name=ၥ, expression=Expression.LetExpr(mdf=IMM, name=ᬎ꯲, value=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=DotExpression.CallExpr(receiver=1, isLifted=true, methodName=ꪼ, arguments=[true])))), boundTo=false))}), 볏ే=Program.ClassDeclaration(isCapability=true, isInterface=false, name=볏ే, impl=[], extend=[], fields={ຂ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꦡ഻), name=ຂ), ଢ଼=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Òޯ્), name=ଢ଼)}, methods={})}, main=this)
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=\uuE88d)
Program(classDeclarations={ᎅ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᎅ, impl=[], extend=[], fields={ᝑ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ₜ২᪷ৢ), name=ᝑ), ʹ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Ϳ᜔ೇ), name=ʹ), শ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=фౣ༩), name=শ), ᢪ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꨓෲ), name=ᢪ), ₣᳢=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ῴ), name=₣᳢), ˮ഻=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Ꞷ), name=ˮ഻), ꫝ᪗=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=Ꙕ), name=ꫝ᪗)}, methods={৲۳ೆꧥ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᜎ), name=৲۳ೆꧥ, expression=this), ꭞၤ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ࢷ), name=ꭞၤ, expression=Expression.LetExpr(mdf=IMM, name=ᜰܰⷥ, value=𐫧\uA6f8\74, boundTo=Expression.HeadExpr(signalExpr=1000000.0))), ῆ༡=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=Ⲉ᯳ۨꩃ), name=ῆ༡, expression=0.8)})}, main=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=READ, name=ᳫ⁢, value=Expression.InstantiationExpr(name=ￚ, args=[Expression.InstantiationExpr(name=ൽ, args=[])]), boundTo=Expression.SignalConstructionExpr(head=DotExpression.FieldAssignExpr(receiver=ঋ, fieldName=ῡູ๖, value=ꞑৈெං), tail=1))))
Program(classDeclarations={}, main=2.14697265625)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=য়꣡, args=[]), tail=this), tail=this))
Program(classDeclarations={ೠ഼෯᩠꫶ࠦ⁫ᤫ⵿᷊=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ೠ഼෯᩠꫶ࠦ⁫ᤫ⵿᷊, impl=[ଢ଼­, ဍ, ꩺဴ꧷ꫵ꫁], extend=[], fields={ᜐ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ଜ), name=ᜐ), ຂ=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=ꤾⷾ), name=ຂ), Ʇꪾ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=য়ൣ), name=Ʇꪾ), ಝ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ഐ), name=ಝ)}, methods={ㇶ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=শ), name=ㇶ, expression=ᥲ), ꜙ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ࠚॣ), name=ꜙ, expression=Expression.TailExpr(signalExpr=))})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=\uu02Fa))
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=CAPSULE, name=ᎄ, value=Expression.LetExpr(mdf=IMM, name=ࢨ, value=Expression.EmptySignalExpr(), boundTo=Expression.LetExpr(mdf=IMM, name=ꧤ᳭, value=, boundTo=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=ႎ༿, args=[ꠊ]), tail=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=true))))), boundTo=Expression.InstantiationExpr(name=ꫜ᭬ᝓ᪖⁦, args=[1.1184241181749551E180, 15.0, DotExpression.FieldAssignExpr(receiver=ᢎ, fieldName=ಽ, value=Expression.TailExpr(signalExpr=4))])), tail=Expression.LetExpr(mdf=MUT, name=ዅ, value=Expression.EmptySignalExpr(), boundTo=Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=ꬷ, args=[Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=ꩇ, args=[Expression.EmptySignalExpr()])), this])))))))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=Ῥ, value=Expression.SignalConstructionExpr(head=972660.0, tail=មꩍ), boundTo=Expression.TailExpr(signalExpr=this)))
Program(classDeclarations={ᳮ༵=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᳮ༵, impl=[Ϊৗ], extend=[], fields={}, methods={}), ಎୖே=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ಎୖே, impl=[], extend=[], fields={}, methods={})}, main=60.0)
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=14.0, tail=false))
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ଷ්ૄ, value=true, boundTo=Expression.SignalConstructionExpr(head=true, tail=Expression.InstantiationExpr(name=ઽᬄஂඃꧥ๘ֿ, args=[Expression.EmptySignalExpr(), DotExpression.CallExpr(receiver=Expression.InstantiationExpr(name=ºꩃ, args=[]), isLifted=true, methodName=ഏ, arguments=[য়۴]), Expression.EmptySignalExpr(), 41])))))
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ㄣ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ㄣ, impl=[ಳ, 䶳꧓], extend=[], fields={}, methods={}), µૣ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=µૣ, impl=[], extend=[], fields={}, methods={}), ۮ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ۮ, impl=[], extend=[ᜆ], fields={}, methods={})}, main=ⴭ꧷ெ)
Program(classDeclarations={ᡦ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᡦ, impl=[], extend=[], fields={ጶᯪ꙯=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ಀ), name=ጶᯪ꙯), ஊ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꪩ), name=ஊ)}, methods={ထ=Program.Method(mdf=READ, returnType=Program.Type(mdf=MUT, isLifted=false, name=ۿ), name=ထ, expression=Expression.EmptySignalExpr()), 充=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ൎ), name=充, expression=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=true))), ˊ༘꣘ၣ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=ݾꦁু), name=ˊ༘꣘ၣ, expression=Expression.SignalConstructionExpr(head=ஓੂⷷ, tail=3)), ₮=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ךּ), name=₮, expression=false), ৎ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ѳ), name=ৎ, expression=0)}), ᬑো〮ୃ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᬑো〮ୃ, impl=[], extend=[ფ, $ᢩꩍ۠], fields={}, methods={}), º=Program.ClassDeclaration(isCapability=false, isInterface=true, name=º, impl=[], extend=[], fields={}, methods={})}, main=)
Program(classDeclarations={}, main=5.0E8)
Program(classDeclarations={ףּ౪=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ףּ౪, impl=[], extend=[], fields={ꩺꦼ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Ӊ), name=ꩺꦼ)}, methods={ꪱ︦=Program.Method(mdf=READ, returnType=Program.Type(mdf=READ, isLifted=false, name=ೞ๐), name=ꪱ︦, expression=this)})}, main=Đਂৗ)
Program(classDeclarations={ᡖ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᡖ, impl=[ൟ], extend=[], fields={Ꙍูၞ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꪝ), name=Ꙍูၞ), ⸯႇົ᷽=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ޱ), name=ⸯႇົ᷽), ၯۣ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᳱ୩଼︦), name=ၯۣ)}, methods={ர=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ୱ), name=ர, expression=Expression.EmptySignalExpr()), ⁱ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ਫ), name=ⁱ, expression=Expression.InstantiationExpr(name=ｏ, args=[]))}), Ꞛꨪ꫁=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ꞛꨪ꫁, impl=[], extend=[], fields={ኴ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꫦ), name=ኴ), ℇ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ஜ), name=ℇ), ᱏ༩꤫ྂ์=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᝮ), name=ᱏ༩꤫ྂ์)}, methods={Ἴ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꬒൌᳳૂ᪑െ໗), name=Ἴ, expression=Expression.LetExpr(mdf=IMM, name=ऋᢩ, value=this, boundTo=DotExpression.FieldAccessExpr(receiver=1.820327936E9, fieldName=ഽ᮲ꩍ))), ꩉ꛱ৗ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=false, name=ⳳੵ), name=ꩉ꛱ৗ, expression=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=MUT, name=ꬒ, value=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=, tail=256.0), tail=Expression.InstantiationExpr(name=ᢁ, args=[ཇ, Expression.TailExpr(signalExpr=Ř), ꧏ᪃ූ, 0, this])), boundTo=8941))), ۿ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ㇿ؃಼), name=ۿ, expression=Expression.TailExpr(signalExpr=DotExpression.CallExpr(receiver=Expression.TailExpr(signalExpr=this), isLifted=false, methodName=ࠤﬞ, arguments=[this, Ά਼, Expression.HeadExpr(signalExpr=ᱩੌ), Expression.LetExpr(mdf=IMM, name=ধ, value=this, boundTo=DotExpression.CallExpr(receiver=DotExpression.FieldAccessExpr(receiver=ㆍෑꪲూ༷, fieldName=শ), isLifted=true, methodName=ἢ꠆, arguments=[]))])))}), ፇੵ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ፇੵ, impl=[ᲈ], extend=[], fields={ಀ=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ι), name=ಀ), ﻙ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=Ὓ), name=ﻙ), ਪ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ঢ়ꠂ), name=ਪ), ಽ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ℿׂ҅ೕං), name=ಽ), ꟿ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ힵࣰ), name=ꟿ)}, methods={ꩊ౫᧒꫁ꠋି=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᪧ゚), name=ꩊ౫᧒꫁ꠋି, expression=Expression.LetExpr(mdf=IMM, name=ହ଼゚᠖, value=Expression.TailExpr(signalExpr=20.0), boundTo=Expression.SignalConstructionExpr(head=this, tail=ꪯֿ܏))), ⷆ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=Ꝫၫ), name=ⷆ, expression=true)})}, main=Expression.LetExpr(mdf=IMM, name=ￎ༙ྗ, value=this, boundTo=true))
Program(classDeclarations={ￛ഼᪒=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ￛ഼᪒, impl=[ቜ], extend=[], fields={}, methods={ޱ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ష), name=ޱ, expression=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ଢ଼, value=Expression.SignalConstructionExpr(head=ఀ, tail=Expression.InstantiationExpr(name=ⶴ, args=[14.0, Expression.SignalConstructionExpr(head=ᢦ, tail=Expression.LetExpr(mdf=IMM, name=Ϳ, value=ᦰ୬⃩, boundTo=this))])), boundTo=Expression.InstantiationExpr(name=ᚱ᧙, args=[]))))}), ꦉᩛ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ꦉᩛ, impl=[אָ], extend=[], fields={؋ೢ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ⸯऺ), name=؋ೢ), ᶐ༹ௗᬁঁ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꣴ), name=ᶐ༹ௗᬁঁ)}, methods={ꬡୃ༵᪽ൣ᱀༹২=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⷉೆ), name=ꬡୃ༵᪽ൣ᱀༹২, expression=Expression.InstantiationExpr(name=ऱၭٰၤꦵ, args=[false, DotExpression.CallExpr(receiver=Expression.HeadExpr(signalExpr=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=true)), isLifted=false, methodName=ð๔, arguments=[Expression.SignalConstructionExpr(head=this, tail=DotExpression.CallExpr(receiver=Expression.InstantiationExpr(name=ዯ়, args=[1]), isLifted=false, methodName=₮, arguments=[]))]), 163.37890625]))})}, main=)
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=19.0)))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=0.0, tail=Expression.LetExpr(mdf=IMM, name=ᢂ, value=Expression.InstantiationExpr(name=Ί܏᧕, args=[࣓]), boundTo=)))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=), tail=Expression.LetExpr(mdf=IMM, name=ㄷ, value=Expression.LetExpr(mdf=READ, name=લ, value=4.9437286957443935E-203, boundTo=DotExpression.FieldAccessExpr(receiver=Expression.EmptySignalExpr(), fieldName=৻ꨩ꣬֓)), boundTo=Expression.InstantiationExpr(name=₺໒, args=[]))))
Program(classDeclarations={ℂ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ℂ, impl=[], extend=[], fields={}, methods={ಽꤧ્=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=ﾺ៝), name=ಽꤧ્, expression=Expression.InstantiationExpr(name=ꧻ๐ႋᬶ, args=[]))}), ℇ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ℇ, impl=[], extend=[], fields={}, methods={}), ऽ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ऽ, impl=[], extend=[], fields={מּ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꣽ), name=מּ)}, methods={ၦ᪼=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=Ⴧ), name=ၦ᪼, expression=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=DotExpression.FieldAssignExpr(receiver=꬗, fieldName=ວꪾ, value=87.0), tail=Infinity), tail=3), tail=ℕ)), Ͷ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ဇීႋᜲ), name=Ͷ, expression=this), ꩋ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=௹ா꫶), name=ꩋ, expression=DotExpression.CallExpr(receiver=బ؄२, isLifted=true, methodName=แꪰ7ົ౬ಾ, arguments=[Expression.TailExpr(signalExpr=42.4), Expression.SignalConstructionExpr(head=false, tail=Expression.SignalConstructionExpr(head=0.04, tail=Expression.LetExpr(mdf=IMM, name=ᨑ⃧７, value=, boundTo=))), Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=ﹲ, args=[]), tail=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=true)), æ]))})}, main=true)
Program(classDeclarations={ꦛ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꦛ, impl=[], extend=[], fields={}, methods={})}, main=41.0)
Program(classDeclarations={ኇ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ኇ, impl=[], extend=[], fields={}, methods={ⁿܑ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=false, name=ಸ), name=ⁿܑ, expression=Expression.InstantiationExpr(name=ףּ, args=[Expression.InstantiationExpr(name=ﷵ, args=[])])), ᨯఁ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ೲꠥ), name=ᨯఁ, expression=Expression.InstantiationExpr(name=ਚ, args=[])), ⶋꩻ಼=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ຄ྆ີ), name=ⶋꩻ಼, expression=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr())), ːꠂొ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=ලஂঁ), name=ːꠂొ, expression=ᢌ), ℨ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=〳), name=ℨ, expression=58), ﹩=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ࠨﬞ꯬), name=﹩, expression=this), פּை=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⲁ〫), name=פּை, expression=), Ҫ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ꧡຼ), name=Ҫ, expression=DotExpression.FieldAssignExpr(receiver=false, fieldName=ၡ, value=\uuuuB2de␧\016\r\uuuuue7FC\uu3C32)), ᱞ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ヲ), name=ᱞ, expression=Expression.EmptySignalExpr())}), ᤏ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᤏ, impl=[], extend=[], fields={}, methods={})}, main=1)
Program(classDeclarations={ກᮀះ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ກᮀះ, impl=[ꠊ], extend=[], fields={}, methods={})}, main=DotExpression.CallExpr(receiver=Expression.TailExpr(signalExpr=1000.0), isLifted=false, methodName=ವୗಃ᭓, arguments=[Expression.HeadExpr(signalExpr=true), Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=DotExpression.CallExpr(receiver=Expression.EmptySignalExpr(), isLifted=true, methodName=ဿꢀ, arguments=[]))), ꭨ, Expression.EmptySignalExpr()]))
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ῼ, value=Expression.EmptySignalExpr(), boundTo=Expression.EmptySignalExpr())))
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=DotExpression.CallExpr(receiver=Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=220909.0, tail=Expression.SignalConstructionExpr(head=ၒຼ꣐, tail=11))), isLifted=true, methodName=എؕ܏, arguments=[]))))
Program(classDeclarations={}, main=0)
Program(classDeclarations={ຫ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ຫ, impl=[], extend=[ວ, ꠑ], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=8.0)
Program(classDeclarations={}, main=ꣻ)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=\u9F2a))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=false, tail=ㅌ))
Program(classDeclarations={ℤⷥ﻿=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ℤⷥ﻿, impl=[], extend=[એ꤫], fields={}, methods={})}, main=0)
Program(classDeclarations={ସၴૈ〮=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ସၴૈ〮, impl=[], extend=[], fields={}, methods={})}, main=false)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=this), tail=DotExpression.FieldAccessExpr(receiver=DotExpression.CallExpr(receiver=79, isLifted=true, methodName=֏, arguments=[]), fieldName=ཊః൯)))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=ፊ, value=false, boundTo=Expression.HeadExpr(signalExpr=this)), tail=Expression.EmptySignalExpr()), tail=Expression.SignalConstructionExpr(head=𑴋\57΢🡠, tail=Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=this, tail=Expression.LetExpr(mdf=IMM, name=ༀௗ༹, value=Expression.EmptySignalExpr(), boundTo=Expression.LetExpr(mdf=IMM, name=ⸯ১, value=Expression.EmptySignalExpr(), boundTo=false)))))))
Program(classDeclarations={ῳ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ῳ, impl=[Ἕ], extend=[], fields={ᜂꩃ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ࡄ᭕), name=ᜂꩃ)}, methods={}), ࠤ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ࠤ, impl=[], extend=[], fields={Λꩻൗؐ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ￓꦺ), name=Λꩻൗؐ), Ⴭ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=יִ), name=Ⴭ)}, methods={ᾰෛັ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=யꪸ᧖྆᱀᱕⃘ᝲ꠆܏۠ၙ), name=ᾰෛັ, expression=this)}), ﭶ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ﭶ, impl=[], extend=[], fields={}, methods={}), ᜠູꠋ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᜠູꠋ, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={Ⴭ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ⴭ, impl=[], extend=[], fields={ಭ꩕ꠣ᳭=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ᭆ០), name=ಭ꩕ꠣ᳭), ಽె=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ᳩ೮໓), name=ಽె), ª=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ぶ), name=ª)}, methods={ঐ᜴᳭꩗ᩕ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=A­), name=ঐ᜴᳭꩗ᩕ, expression=Expression.HeadExpr(signalExpr=ᏻ))}), ࠤׇัᢅ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ࠤׇัᢅ, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(name=Ūᢆ۫, args=[­, າ, DotExpression.CallExpr(receiver=this, isLifted=false, methodName=µ, arguments=[Expression.HeadExpr(signalExpr=true), this, this, this]), Expression.SignalConstructionExpr(head=, tail=this)]))
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ቑ, args=[false]))
Program(classDeclarations={ゟ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ゟ, impl=[ຽ, ಐ්ીৣੇ, ꧏ, 윔ꩌ, $], extend=[], fields={ኤ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ຝ), name=ኤ)}, methods={ꮲ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=‿), name=ꮲ, expression=0.0), ஜྐ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ｏ), name=ஜྐ, expression=_), Έ҃=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=READ, isLifted=false, name=ꩊྎ), name=Έ҃, expression=𝕀)})}, main=40.0)
Program(classDeclarations={ῶ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ῶ, impl=[ⷂ៝], extend=[], fields={}, methods={ᭋ᳥=Program.Method(mdf=MUT, returnType=Program.Type(mdf=MUT, isLifted=false, name=ꬭ), name=ᭋ᳥, expression=Expression.LetExpr(mdf=IMM, name=ೞ༿, value=0.0, boundTo=14))}), ᲆ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᲆ, impl=[ߤූൗၗ], extend=[], fields={}, methods={}), Ⴧ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ⴧ, impl=[], extend=[Ὕ, Ⳬֻ༹, ࠤ], fields={}, methods={}), ᦝ5１=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᦝ5１, impl=[נּᬸ᱆, ₓᤷ, ퟅ], extend=[], fields={ῐ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=Ф꛰), name=ῐ), ൔૣෳ໓ⷷ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᏸ), name=ൔૣෳ໓ⷷ), ︳=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=డ), name=︳)}, methods={줕ႅੋັோઃ໕ઁ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ℱ), name=줕ႅੋັோઃ໕ઁ, expression=this)}), ՙ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ՙ, impl=[], extend=[], fields={}, methods={}), Ι꤄=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ι꤄, impl=[], extend=[], fields={Ⳮ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ΰ), name=Ⳮ)}, methods={c=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ꜙ), name=c, expression=this), მ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⶬ૮), name=მ, expression=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=6.359375)), tail=Expression.HeadExpr(signalExpr=)))}), ⶼ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ⶼ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=true))
Program(classDeclarations={}, main=4)
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=Լ, args=[Expression.TailExpr(signalExpr=this), 𑙠]))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ම꠆, value=Expression.InstantiationExpr(name=ꪵ⁨, args=[]), boundTo=ι))
Program(classDeclarations={ಷ೬=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ಷ೬, impl=[], extend=[], fields={}, methods={}), თ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=თ, impl=[ጥேೆൌ], extend=[], fields={Έ=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ง᳭), name=Έ), ဿ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=Ἕ), name=ဿ)}, methods={த=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ೠ), name=த, expression=3)}), ﬗ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ﬗ, impl=[Ｉᨗⷻ], extend=[], fields={ῼ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ຊ᭙ᮭ᧕), name=ῼ), ഽ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᬤ︧), name=ഽ)}, methods={Ὑྛ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ॠ಼), name=Ὑྛ, expression=ᬪ݇), Ⴢ᳒=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ዀ), name=Ⴢ᳒, expression=0.0)}), ꣻᢩ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꣻᢩ, impl=[], extend=[ⳬ], fields={}, methods={}), ῼ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ῼ, impl=[], extend=[ၜ, ᬧꠦ, ퟴ༾्⃧, ໃౣ࡙๔⃦꤈ၲ, ဩ, Ⲍ], fields={}, methods={})}, main=this)
Program(classDeclarations={ᨕ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᨕ, impl=[], extend=[ຽ], fields={}, methods={}), ୠ‌ꫵ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ୠ‌ꫵ, impl=[], extend=[⁔়], fields={}, methods={}), ﺈ᳔ࠞៈ⃡=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ﺈ᳔ࠞៈ⃡, impl=[ꣽ‮࡚, ￅᯪﬞꦂ], extend=[], fields={ꡅ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ೞೣᢆ), name=ꡅ), ኮឹ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ڸ), name=ኮឹ)}, methods={ઐ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ޕᷴ), name=ઐ, expression=false), Ꞩ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=প઼), name=Ꞩ, expression=0), ꠊ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᎏ︯⳱), name=ꠊ, expression=Expression.EmptySignalExpr()), ઽ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ऽ‏ྫྷు), name=ઽ, expression=0.0), ᾞ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ঐ൭ꣂఀ), name=ᾞ, expression=false)}), ચ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ચ, impl=[ஓ], extend=[], fields={}, methods={}), ୟ゙꠆=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ୟ゙꠆, impl=[], extend=[], fields={ຊꩍ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᏼ᠎ꩃੵ), name=ຊꩍ)}, methods={})}, main=23269.0)
Program(classDeclarations={￠=Program.ClassDeclaration(isCapability=false, isInterface=false, name=￠, impl=[ዃ൯], extend=[], fields={Ꚅ︬⃛=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᶁୀ), name=Ꚅ︬⃛), ೞྍ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=த), name=ೞྍ)}, methods={ῃ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ந), name=ῃ, expression=Expression.InstantiationExpr(name=ຢ᪙, args=[])), ۿೋ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⳗ4᭔ਃꠦ), name=ۿೋ, expression=Expression.InstantiationExpr(name=ᦇ, args=[441]))}), Ὀ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ὀ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=ᜥͧ)))
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ௐ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ௐ, impl=[ৼ], extend=[], fields={લ=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ࠚ４ෞ), name=લ), ꘪ᮱=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᝰ), name=ꘪ᮱), ￥=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ﵰꦼ), name=￥), ၒੌ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꧽ), name=ၒੌ), Ξ〭ೣ꧔=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ງ), name=Ξ〭ೣ꧔)}, methods={}), ᦳ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᦳ, impl=[Ὶ๖, ৡె, ˬ᥋꧀], extend=[], fields={ᮯꥏ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ᢁ), name=ᮯꥏ), ਭ഼࠭ೋ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ⴧྫꪷୣૈྏ૩), name=ਭ഼࠭ೋ)}, methods={ﵮꚟꯦ꩘=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꣻ), name=ﵮꚟꯦ꩘, expression=this)}), ດ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ດ, impl=[], extend=[ਐั, ꭜ࿆ઁᨙ], fields={}, methods={}), לּ꧑ຼ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=לּ꧑ຼ, impl=[], extend=[ꡲ꘡꫁, ֏], fields={}, methods={}), ዊ়᜴፝ၧ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ዊ়᜴፝ၧ, impl=[], extend=[ວ, ℿ], fields={}, methods={})}, main=DotExpression.CallExpr(receiver=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ਊꠂ, value=, boundTo=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=Ὕ, value=DotExpression.FieldAccessExpr(receiver=ח᭘, fieldName=ຈ), boundTo=Expression.InstantiationExpr(name=னേ〪, args=[Expression.LetExpr(mdf=IMM, name=ई, value=𑚹৅, boundTo=DotExpression.CallExpr(receiver=Expression.SignalConstructionExpr(head=this, tail=Expression.TailExpr(signalExpr=𞥚𞋺\03)), isLifted=false, methodName=װ, arguments=[, Expression.EmptySignalExpr()]))]))))), isLifted=false, methodName=Ѓ۬꩖ꤦᜓᢅ౧, arguments=[Expression.EmptySignalExpr()]))
Program(classDeclarations={ⷌ़᳭ଃ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⷌ़᳭ଃ, impl=[], extend=[], fields={}, methods={}), ⷅ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⷅ, impl=[], extend=[µ, আ], fields={}, methods={}), ᱍࣻ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᱍࣻ, impl=[], extend=[], fields={⁀=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ᏻൂ), name=⁀)}, methods={＿๎៝=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ສୣ), name=＿๎៝, expression=ⅇ)})}, main=Expression.InstantiationExpr(name=ꩊೣ, args=[Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=DotExpression.FieldAccessExpr(receiver=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=DotExpression.FieldAccessExpr(receiver=, fieldName=ⴧ᪵ꯧਁࠞു)), tail=ꧯ), fieldName=ῥႂ), tail=7)), false]))
Program(classDeclarations={}, main=5000000.0)
Program(classDeclarations={ௐ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ௐ, impl=[ゝ, ຄ൬ꪸ, ஷ, ၡஂ, ό᱕], extend=[], fields={}, methods={Ὲ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᇰ), name=Ὲ, expression=this)}), ᪧ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᪧ, impl=[], extend=[], fields={ⁿ᠌ઃ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ໞ), name=ⁿ᠌ઃ)}, methods={ꟼ́=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=ࠅৈ), name=ꟼ́, expression=), ㅕ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=Ἕ), name=ㅕ, expression=this), ဌ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꧻ০), name=ဌ, expression=\u02f0\uA5c5)})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ꮚ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ꮚ, impl=[], extend=[], fields={ힴি=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᱏೆ), name=ힴি), অᢩ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᾫ), name=অᢩ), ꬮ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Έ), name=ꬮ)}, methods={ᦕ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=Ὕ়ුၘ), name=ᦕ, expression=229.0)})}, main=Expression.LetExpr(mdf=IMM, name=લූৗᷝେৗٰ, value=Expression.InstantiationExpr(name=ᰆ৯ٰꪾຼၟ, args=[]), boundTo=ౠৢໍ))
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=DotExpression.FieldAssignExpr(receiver=ꪋ, fieldName=ቑ۸, value=ₖ))
Program(classDeclarations={Ͳെ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ͳെ, impl=[], extend=[Ɪꙺັ], fields={}, methods={}), ⁀〯=Program.ClassDeclaration(isCapability=false, isInterface=true, name=⁀〯, impl=[], extend=[], fields={}, methods={}), ଽ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ଽ, impl=[], extend=[ⵗ, פּ, ࢽଂ, ︴᳭], fields={}, methods={})}, main=Expression.SignalConstructionExpr(head=this, tail=DotExpression.CallExpr(receiver=0.7141571044921875, isLifted=true, methodName=ᏸ, arguments=[])))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=CAPSULE, name=ኳঃ꛰, value=10.0, boundTo=false))
Program(classDeclarations={Ｒ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ｒ, impl=[], extend=[ﹱૣ, ப], fields={}, methods={}), ⴂ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⴂ, impl=[], extend=[ᓵ], fields={}, methods={}), ਨ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ਨ, impl=[], extend=[], fields={}, methods={})}, main=416.625)
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=3.0)
Program(classDeclarations={ἳ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ἳ, impl=[], extend=[], fields={ୱ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ਲ୯), name=ୱ)}, methods={}), ਛୖؒு=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ਛୖؒு, impl=[], extend=[ⶹ], fields={}, methods={}), ꓙ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꓙ, impl=[], extend=[], fields={ￎৌၞ︪=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ⷈ؜), name=ￎৌၞ︪), ᕚ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ଐ), name=ᕚ), కॢ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ኸꙶ็), name=కॢ)}, methods={}), ꭞ៥ࠦ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꭞ៥ࠦ, impl=[], extend=[ᳵৗ], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=this))
Program(classDeclarations={}, main=𝔋)
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=this))
Program(classDeclarations={}, main=0)
Program(classDeclarations={}, main=false)
Program(classDeclarations={〱=Program.ClassDeclaration(isCapability=false, isInterface=true, name=〱, impl=[], extend=[], fields={}, methods={}), ￔ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ￔ, impl=[], extend=[ൔ], fields={}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={৻゙=Program.ClassDeclaration(isCapability=false, isInterface=true, name=৻゙, impl=[], extend=[], fields={}, methods={})}, main=ꬣ)
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ᬎ, args=[1.97001216E8, DotExpression.FieldAccessExpr(receiver=0.0, fieldName=ₕ), Expression.LetExpr(mdf=IMM, name=ͻ, value=Ω, boundTo=Expression.HeadExpr(signalExpr=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=this), tail=Expression.InstantiationExpr(name=ఉ, args=[Expression.InstantiationExpr(name=ⷄ, args=[]), this, Expression.EmptySignalExpr()]))))]))
Program(classDeclarations={ﬓ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ﬓ, impl=[], extend=[], fields={ળ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ₓꪴ), name=ળ)}, methods={ㄊ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=Ⴧऺ᪁ୣ), name=ㄊ, expression=)}), ష=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ష, impl=[], extend=[ꩇ, ঽ, V], fields={}, methods={}), ન=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ન, impl=[], extend=[], fields={}, methods={}), ၰ​=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ၰ​, impl=[], extend=[], fields={}, methods={ᱯ۲=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=ຫ), name=ᱯ۲, expression=ணᝲᨚ), Ҡ؜=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ஊ), name=Ҡ؜, expression=this)}), మ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=మ, impl=[], extend=[£꣔៝ᨗऻ᳒, Ⴧ], fields={}, methods={})}, main=15.671630859375)
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ⷚ౬േ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⷚ౬േ, impl=[], extend=[], fields={}, methods={}), ﬗ᷐ັ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ﬗ᷐ັ, impl=[], extend=[], fields={}, methods={ᭅ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꝵ), name=ᭅ, expression=Expression.LetExpr(mdf=IMM, name=ۦ, value=ற៝, boundTo=)), Ώ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ય), name=Ώ, expression=)}), ຍௗ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ຍௗ, impl=[ᾨၞั, ꧠࣛ꘧ᰧౖׅꥋ, ౡ], extend=[], fields={}, methods={ၐᩛ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=Ⰰ়), name=ၐᩛ, expression=Expression.InstantiationExpr(name=ⷓ, args=[])), ୱ্༵૨ౢ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ဿ༵᪲ে), name=ୱ্༵૨ౢ, expression=0.0)}), ℂੀ၄=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ℂੀ၄, impl=[], extend=[], fields={ࢶ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꩮേ), name=ࢶ), ⴝੇ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꪁ), name=ⴝੇ)}, methods={ℕꠋ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ၜ܏ꠂ), name=ℕꠋ, expression=1.9327352832E11), ଳ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ఏੂ᳒), name=ଳ, expression=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=ᦰො, value=true, boundTo=true), tail=ກ࡚)), ધ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᤅໍ), name=ધ, expression=Expression.LetExpr(mdf=IMM, name=Ή, value=Expression.SignalConstructionExpr(head=false, tail=Expression.LetExpr(mdf=READ, name=ခ০ၱꥈ, value=Expression.InstantiationExpr(name=＿, args=[Ꮙౢ॑, DotExpression.FieldAccessExpr(receiver=ୖ, fieldName=ￋ)]), boundTo=Expression.LetExpr(mdf=MUT, name=ꣻ⃖ྼ, value=Expression.EmptySignalExpr(), boundTo=Expression.SignalConstructionExpr(head=this, tail=\50)))), boundTo=9.57874176E8)), ៜ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ලꩃୌٝৢ؜்ܑ), name=ៜ, expression=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ὕ, value=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=ꤞ, value=Expression.EmptySignalExpr(), boundTo=Expression.EmptySignalExpr()), tail=0), boundTo=0.002))), ˬᮩ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ႎꧥ), name=ˬᮩ, expression=難)}), ㇽฺැ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ㇽฺැ, impl=[], extend=[], fields={}, methods={u=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=Ώ), name=u, expression=0.0)})}, main=false)
Program(classDeclarations={}, main=500000.0)
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=1152.0)
Program(classDeclarations={}, main=ഏૣ)
Program(classDeclarations={ꫂ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ꫂ, impl=[], extend=[], fields={}, methods={ꓼ෦હ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᰏ߇), name=ꓼ෦હ, expression=false), ៗ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ਅཱꪸ), name=ៗ, expression=Expression.LetExpr(mdf=IMM, name=ʹ, value=DotExpression.CallExpr(receiver=Expression.TailExpr(signalExpr=false), isLifted=true, methodName=أ, arguments=[]), boundTo=this)), ங=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ǧ܏ᮧ), name=ங, expression=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=গࣘ, value=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=false)), boundTo=Expression.InstantiationExpr(name=Ό, args=[DotExpression.CallExpr(receiver=ץ, isLifted=true, methodName=ೱ, arguments=[Expression.HeadExpr(signalExpr=Expression.EmptySignalExpr())])]))))}), Ό=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ό, impl=[], extend=[], fields={Ͷ⳱ྟ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꬎ), name=Ͷ⳱ྟ), ＿ׅ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꩺ෫), name=＿ׅ), ଋ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ଽ༙᳷ٰ), name=ଋ)}, methods={µ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꘚ), name=µ, expression=false)})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ℨ゙=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ℨ゙, impl=[], extend=[ῒ, ꢒ], fields={}, methods={}), ࠉ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ࠉ, impl=[], extend=[ೲ, ꫳ۴ꥒౣ], fields={}, methods={})}, main=1.0)
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=this)
Program(classDeclarations={Ὀೇ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=Ὀೇ, impl=[], extend=[], fields={}, methods={ႁꠦཱུꪰ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ˢ੮̃), name=ႁꠦཱུꪰ, expression=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=true))))})}, main=)
Program(classDeclarations={}, main=1.8874368E8)
Program(classDeclarations={ߺꪷົ۸ꦴੑ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ߺꪷົ۸ꦴੑ, impl=[], extend=[], fields={}, methods={ໜ፟=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꔅ), name=ໜ፟, expression=true), ಛꠂ꙯=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ೞି), name=ಛꠂ꙯, expression=DotExpression.CallExpr(receiver=false, isLifted=true, methodName=Ⴭൣ, arguments=[Expression.SignalConstructionExpr(head=this, tail=this), Expression.LetExpr(mdf=IMM, name=ꜟ, value=255.0, boundTo=\'\f), ኡ, Expression.SignalConstructionExpr(head=0.66, tail=this)]))}), ⶍ᳴=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ⶍ᳴, impl=[], extend=[], fields={ℽႂٰ࿆=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᢪ), name=ℽႂٰ࿆)}, methods={ߺॗࠗ୩ೄ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=Ꚓ), name=ߺॗࠗ୩ೄ, expression=Expression.LetExpr(mdf=IMM, name=ℇ, value=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ၮ, value=448.0, boundTo=DotExpression.FieldAssignExpr(receiver=2.0, fieldName=투ᬺ, value=448.0))), boundTo=Expression.InstantiationExpr(name=ສ, args=[this]))), 〇ೢ￻ﬞ፝=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=Ꮔ), name=〇ೢ￻ﬞ፝, expression=this)}), ਫ᭐=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ਫ᭐, impl=[ਲ਼ଃ〬, ﾠ, ꪵୗෲ꘦ܑ], extend=[], fields={}, methods={}), ῗ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ῗ, impl=[ዄꨩ], extend=[], fields={}, methods={}), ៜ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ៜ, impl=[], extend=[], fields={}, methods={})}, main=Expression.TailExpr(signalExpr=true))
Program(classDeclarations={ⴧ഻ׂೋ്༣=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ⴧ഻ׂೋ്༣, impl=[], extend=[], fields={ῐ=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=＄), name=ῐ), ײ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ᄡ), name=ײ), ￆު=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ℇᬁऻၧܑྡྷ), name=ￆު)}, methods={})}, main=Expression.SignalConstructionExpr(head=false, tail=Expression.SignalConstructionExpr(head=1, tail=Expression.TailExpr(signalExpr=ⴎ))))
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=22))
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ⶊޫ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ⶊޫ, impl=[], extend=[], fields={}, methods={}), ꠅ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꠅ, impl=[], extend=[], fields={ൡ⃮ꤧс=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ຈ), name=ൡ⃮ꤧс)}, methods={ᰑྱྤ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꫂ), name=ᰑྱྤ, expression=\uu7b18𑑝)}), ઽ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ઽ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=হ, value=this, boundTo=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ኋ, value=198, boundTo=ᢂྃꠥ))))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=ବௌ, tail=this))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr()), tail=DotExpression.FieldAssignExpr(receiver=, fieldName=ℱ, value=2)))
Program(classDeclarations={ꬆಁ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ꬆಁ, impl=[], extend=[], fields={}, methods={ⷋꠂ꯭⁪5=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ꣽ), name=ⷋꠂ꯭⁪5, expression=Expression.TailExpr(signalExpr=ఽ)), ಐ︮ેﬞ᭲꯬=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=Cୣা؀), name=ಐ︮ેﬞ᭲꯬, expression=Expression.SignalConstructionExpr(head=DotExpression.FieldAccessExpr(receiver=Expression.InstantiationExpr(name=ᲈꪰ, args=[true, this, 0]), fieldName=ߴࠞۧৌಁ), tail=DotExpression.CallExpr(receiver=Expression.EmptySignalExpr(), isLifted=true, methodName=ܐ, arguments=[]))), ｐᬃ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=ⅎ), name=ｐᬃ, expression=Expression.EmptySignalExpr()), රᳶූ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=﹩), name=රᳶූ, expression=DotExpression.CallExpr(receiver=Expression.TailExpr(signalExpr=49), isLifted=false, methodName=ኍ, arguments=[]))})}, main=true)
Program(classDeclarations={〹=Program.ClassDeclaration(isCapability=true, isInterface=false, name=〹, impl=[লੇ⃧], extend=[], fields={ᾄ๓︌=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ﭱꩼ), name=ᾄ๓︌)}, methods={ﭢ8ั=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ச۵), name=ﭢ8ั, expression=false), ᳪ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=MUT, isLifted=false, name=µ), name=ᳪ, expression=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=0))), ઈ᠍꤃၂ಂ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⶱ᪰ᜲꚞ), name=ઈ᠍꤃၂ಂ, expression=Expression.HeadExpr(signalExpr=7.555786372591432E23))}), ഽ᮹ೇ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ഽ᮹ೇ, impl=[], extend=[], fields={વ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ℨೇঁൊ), name=વ), Ὑ୮ᬂึே=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꨁೆ), name=Ὑ୮ᬂึே)}, methods={})}, main=)
Program(classDeclarations={}, main=this)
Program(classDeclarations={Ⰸ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ⰸ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=֏ꫯ, value=Expression.TailExpr(signalExpr=1), boundTo=Expression.EmptySignalExpr())))
Program(classDeclarations={}, main=0)
Program(classDeclarations={ꠌ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꠌ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=ⵯ᪑ꨬ, value=Expression.LetExpr(mdf=IMM, name=৲꤭, value=Expression.InstantiationExpr(name=ℂ, args=[, DotExpression.CallExpr(receiver=this, isLifted=false, methodName=￥, arguments=[ਏ, false, 71, ]), 13, Expression.EmptySignalExpr(), ꮻ, Expression.SignalConstructionExpr(head=28, tail=), ꧠ, 2]), boundTo=DotExpression.CallExpr(receiver=Expression.EmptySignalExpr(), isLifted=true, methodName=ዀ౯ಿ, arguments=[this, 0.0])), boundTo=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ៗ҃꙯, value=false, boundTo=Expression.EmptySignalExpr())))))
Program(classDeclarations={த༷=Program.ClassDeclaration(isCapability=true, isInterface=false, name=த༷, impl=[], extend=[], fields={}, methods={ꨠ᷿ࠢᯨꩌ൩ࠧႂ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=ߎ꣘꣗꤁), name=ꨠ᷿ࠢᯨꩌ൩ࠧႂ, expression=false)}), ᢪ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᢪ, impl=[], extend=[], fields={ޱಁ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Ꮢ), name=ޱಁ), ㄱ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=₮ං܏), name=ㄱ), ꭣ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=õ), name=ꭣ)}, methods={ຢ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ꩩ), name=ຢ, expression=true), ꚍ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=ⶒ᧐), name=ꚍ, expression=false)}), ꫝಃৢ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ꫝಃৢ, impl=[], extend=[], fields={Ωੋࣙଃ=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ﶯੋꥊ), name=Ωੋࣙଃ), ॾ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ヽ), name=ॾ)}, methods={}), 請೫=Program.ClassDeclaration(isCapability=false, isInterface=true, name=請೫, impl=[], extend=[ख़ꩌၣ۰, ⁔ೕᰰᝳ﻿８ᷰ, ঽ], fields={}, methods={})}, main=סּ)
Program(classDeclarations={ꬎ꛱െ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꬎ꛱െ, impl=[], extend=[], fields={ঢ়ୌ᳴=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=$໊), name=ঢ়ୌ᳴), Ꞵ੭ྒྷ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ℓୣ), name=Ꞵ੭ྒྷ)}, methods={ܐ࡛=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ଡ଼), name=ܐ࡛, expression=Expression.SignalConstructionExpr(head=0, tail=Expression.LetExpr(mdf=IMM, name=ⵯ഼ೆ, value=Infinity, boundTo=\0))), ମৈ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=גּ), name=ମৈ, expression=0.0)}), ꠸꩖ූ꤁ꤧ۬=Program.ClassDeclaration(isCapability=false, isInterface=false, name=꠸꩖ූ꤁ꤧ۬, impl=[מּஂ, ଡ଼॒̄, ℇ], extend=[], fields={ⁿ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ਇ), name=ⁿ)}, methods={ঽৗ܏=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ౡ), name=ঽৗ܏, expression=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=MUT, name=Ꙓᬀె᱓, value=Expression.LetExpr(mdf=IMM, name=ℾꩃ꯶゙༹᳒ྸ҇, value=Expression.EmptySignalExpr(), boundTo=ﬂ), boundTo=1))), ཁ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ௐ), name=ཁ, expression=Expression.TailExpr(signalExpr=ঢ়ׄௌ)), કു႗ဳ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=લꥈ), name=કു႗ဳ, expression=Expression.LetExpr(mdf=IMM, name=ꥀ༘, value=DotExpression.FieldAssignExpr(receiver=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ྋׅ, value=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=4.0)), boundTo=this)), fieldName=ꪵ, value=false), boundTo=0.06))}), Ⴧ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=Ⴧ, impl=[‿], extend=[], fields={ቐ=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=ⷓ઼࿆), name=ቐ), ଢ଼꙽=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ޓ໒), name=ଢ଼꙽)}, methods={}), ὗꠥੑ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ὗꠥੑ, impl=[ｓো, ஹ, ᢚ⵿], extend=[], fields={}, methods={ۮ‪ૈ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ၥୂொꩻ᳷ᝳ), name=ۮ‪ૈ, expression=true), ꭡ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᨁ༵), name=ꭡ, expression=ꧺ), ল=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=き), name=ল, expression=this), ޱᢩ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ꪱ), name=ޱᢩ, expression=ທ)})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=this)
Program(classDeclarations={ૐ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ૐ, impl=[], extend=[], fields={}, methods={}), Ⴧ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ⴧ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={ࠤ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ࠤ, impl=[ꜙ⵿ຼ៝ﵷְ], extend=[], fields={}, methods={}), Ω=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ω, impl=[], extend=[ⅅಁ, ৰ, ښ, ำၢ, Ὃ], fields={}, methods={}), ଏ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ଏ, impl=[], extend=[ꪱ۰], fields={}, methods={})}, main=\34)
Program(classDeclarations={}, main=this)
Program(classDeclarations={হั=Program.ClassDeclaration(isCapability=false, isInterface=true, name=হั, impl=[], extend=[Ⴭ], fields={}, methods={})}, main=1)
Program(classDeclarations={}, main=\t𑶒𛰀)
Program(classDeclarations={ຊ᜴꧳ꩍ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ຊ᜴꧳ꩍ, impl=[], extend=[], fields={฿ⷨ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ఢഃ⁫ોၘ), name=฿ⷨ)}, methods={})}, main=\u8edC\uu4A1E\uFBdE)
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ⶉ྆ꪲ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ⶉ྆ꪲ, impl=[ၦ, ۥ], extend=[], fields={ㅵ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ﺍܑౖ５୍), name=ㅵ), ｕ᮸=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ၡ), name=ｕ᮸)}, methods={ℬ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ܐࣱ), name=ℬ, expression=Expression.EmptySignalExpr())})}, main=Expression.InstantiationExpr(name=ఏ, args=[Expression.LetExpr(mdf=IMM, name=ꨆ, value=Expression.LetExpr(mdf=IMM, name=ᳪ, value=1, boundTo=Expression.InstantiationExpr(name=ኳ᭫, args=[])), boundTo=𞀀\t)]))
Program(classDeclarations={ヾ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ヾ, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(name=ൾ꤆, args=[0]))
Program(classDeclarations={ڻᝒܺ᷒=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ڻᝒܺ᷒, impl=[], extend=[ꭠ, ꩀ, ൎ], fields={}, methods={})}, main=false)
Program(classDeclarations={P߱=Program.ClassDeclaration(isCapability=false, isInterface=false, name=P߱, impl=[], extend=[], fields={}, methods={}), ៗ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ៗ, impl=[逸็݉ᤶ, ঽ, ꠸ั], extend=[], fields={}, methods={ㇰ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ဆ), name=ㇰ, expression=Expression.InstantiationExpr(name=ガ, args=[59, Expression.InstantiationExpr(name=ꪧၠ, args=[]), 10.0, Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ꣳ, value=Expression.InstantiationExpr(name=ꠙ, args=[]), boundTo=Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=ഐ়߫ꢀꠋ, args=[Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=દ़౧, args=[]), tail=\uu4feB), ߒো]))))])), Ὓ=Program.Method(mdf=READ, returnType=Program.Type(mdf=MUT, isLifted=false, name=꠸), name=Ὓ, expression=4000.0), ꣻ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=এ), name=ꣻ, expression=8.0E79), ᩈ᮪֤꧔=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ড়ׇ⳰), name=ᩈ᮪֤꧔, expression=false)}), ꧫ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꧫ, impl=[], extend=[], fields={}, methods={}), ძ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ძ, impl=[], extend=[], fields={}, methods={}), ꧏ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꧏ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=ໃ઼܏ᬃொᤴ, value=Expression.EmptySignalExpr(), boundTo=Expression.HeadExpr(signalExpr=ຍৌ)))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=ຯ, value=Expression.HeadExpr(signalExpr=this), boundTo=Expression.InstantiationExpr(name=¤, args=[])), tail=3))
Program(classDeclarations={ي=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ي, impl=[], extend=[], fields={}, methods={}), ⴭ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⴭ, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.FieldAssignExpr(receiver=false, fieldName=ㆃ, value=Expression.EmptySignalExpr()))
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ၦ, value=🂔\ud8bD, boundTo=DotExpression.CallExpr(receiver=0.7, isLifted=false, methodName=︴꘢, arguments=[0.072])))))))
Program(classDeclarations={ൿܑ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ൿܑ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=ਗ⁠))
Program(classDeclarations={ιࠦ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ιࠦ, impl=[], extend=[], fields={ୱඃ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꠈ), name=ୱඃ), ͷ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Ⴤ९ா), name=ͷ)}, methods={}), ꘚ꘣=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꘚ꘣, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=ῃூ)
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ⶖꧥ൫꧓８⁨, value=77.0, boundTo=2085))
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ᚂٰৗฺ, args=[Expression.SignalConstructionExpr(head=DotExpression.CallExpr(receiver=Expression.EmptySignalExpr(), isLifted=false, methodName=Ͳ, arguments=[Expression.EmptySignalExpr(), , true, 5, Expression.TailExpr(signalExpr=Expression.EmptySignalExpr()), ඎ꘣᳒ॗ२ၢ্៝ൂ, 91, ၺ꧔ᢅ, Expression.LetExpr(mdf=READ, name=ꪹ୯, value=Expression.InstantiationExpr(name=ꣽ, args=[\u1BfF\u3Ac6, this]), boundTo=𝔖\uuuuuuuDEC2\uuC1F6𑰀), 0, 300362015]), tail=Expression.SignalConstructionExpr(head=ઊ᳸, tail=Expression.SignalConstructionExpr(head=6.0, tail=ॐᮥ௨))), Expression.HeadExpr(signalExpr=)]))
Program(classDeclarations={֏ꥊো=Program.ClassDeclaration(isCapability=false, isInterface=true, name=֏ꥊো, impl=[], extend=[], fields={}, methods={}), ᰜ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᰜ, impl=[], extend=[], fields={}, methods={}), ⴣꥌ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⴣꥌ, impl=[], extend=[ꦨ, ὀ๗１༷, ꓰ, ﷇ], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=ວ, value=ਐং, boundTo=DotExpression.CallExpr(receiver=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ॐ, value=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ࢼ, value=Expression.InstantiationExpr(name=Ꞣ, args=[]), boundTo=DotExpression.FieldAccessExpr(receiver=Expression.InstantiationExpr(name=ይ, args=[Expression.LetExpr(mdf=IMM, name=ᜰ, value=DotExpression.CallExpr(receiver=Expression.InstantiationExpr(name=ࠍ, args=[]), isLifted=false, methodName=ᤕ, arguments=[Expression.InstantiationExpr(name=ச, args=[]), ꧡၳ]), boundTo=Expression.EmptySignalExpr())]), fieldName=ⅽൊ))), boundTo=Expression.EmptySignalExpr())), isLifted=true, methodName=ꬊ, arguments=[])))
Program(classDeclarations={ˮం=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ˮం, impl=[꠸꫶᱓], extend=[], fields={}, methods={Ể၁༷ົ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ከᭂꩼ), name=Ể၁༷ົ, expression=Expression.LetExpr(mdf=IMM, name=ລꯣ, value=DotExpression.FieldAccessExpr(receiver=379, fieldName=ܐ), boundTo=157.0))}), ᝌ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᝌ, impl=[], extend=[ώ, ײᤥ], fields={}, methods={})}, main=Expression.InstantiationExpr(name=Ⳬ꤀༨, args=[]))
Program(classDeclarations={}, main=DotExpression.CallExpr(receiver=0.0, isLifted=true, methodName=श, arguments=[]))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ꤍั, value=0, boundTo=સ))
Program(classDeclarations={}, main=0)
Program(classDeclarations={ˬଁ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ˬଁ, impl=[], extend=[], fields={ⁿ=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=ණ꤇๎), name=ⁿ)}, methods={}), ᰙ꣧ᮁ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᰙ꣧ᮁ, impl=[], extend=[], fields={ꪜ=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=ਇ), name=ꪜ)}, methods={})}, main=ᜤ)
Program(classDeclarations={跚꫶૧ഃ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=跚꫶૧ഃ, impl=[], extend=[ৎۡ᥉], fields={}, methods={})}, main=Expression.LetExpr(mdf=MUT, name=བྷ௦, value=ꫳ, boundTo=Expression.LetExpr(mdf=CAPSULE, name=ᝰ໊, value=გྐ, boundTo=DotExpression.FieldAssignExpr(receiver=Expression.EmptySignalExpr(), fieldName=ำ, value=true))))
Program(classDeclarations={ༀ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ༀ, impl=[], extend=[ᎉૢ, Ἷ], fields={}, methods={}), Ⴒ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ⴒ, impl=[], extend=[ಡ], fields={}, methods={}), ⶨ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⶨ, impl=[], extend=[ߴ, ቋ⃡2, ࢡ᳒, ˢ, ֏], fields={}, methods={}), ৼ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ৼ, impl=[], extend=[₺], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=ⱍ, value=4.0, boundTo=this))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ᢄ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᢄ, impl=[], extend=[], fields={}, methods={}), èᮀ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=èᮀ, impl=[ᦾ, ࠤ], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={ଳ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ଳ, impl=[៛ూ, ꨀ], extend=[], fields={}, methods={ቛ꠆=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=ೞ), name=ቛ꠆, expression=Expression.SignalConstructionExpr(head=true, tail=0)), ⷛ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ⸯ), name=ⷛ, expression=Expression.HeadExpr(signalExpr=DotExpression.FieldAccessExpr(receiver=Expression.SignalConstructionExpr(head=false, tail=12), fieldName=ꜗ᭙⵿)))})}, main=this)
Program(classDeclarations={µൗ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=µൗ, impl=[], extend=[], fields={}, methods={})}, main=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=this)))
Program(classDeclarations={ᾂ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᾂ, impl=[וּ, Կ, ꭔ, ꬑ࿆᳐], extend=[], fields={இ᳭=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᣝ), name=இ᳭)}, methods={ꘪၠ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ℕ࿆), name=ꘪၠ, expression=true), ዀౖ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ວᩢ᳭), name=ዀౖ, expression=Expression.EmptySignalExpr())})}, main=ᳱ)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=ഏൢꤨ, tail=പ))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=ͽ, tail=))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=this)
Program(classDeclarations={ꩨॏۜ੭=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꩨॏۜ੭, impl=[], extend=[], fields={ຍ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=םૢௗ), name=ຍ), ꧏ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Ⳳꦾ༾), name=ꧏ), ￦᷾ꦃ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ༀ), name=￦᷾ꦃ)}, methods={}), ‿=Program.ClassDeclaration(isCapability=false, isInterface=true, name=‿, impl=[], extend=[], fields={}, methods={})}, main=\241\3)
Program(classDeclarations={ᢍ⃓=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᢍ⃓, impl=[著ꪷᤱ, ၓੀැ], extend=[], fields={}, methods={ﮱ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=READ, isLifted=false, name=º), name=ﮱ, expression=Expression.HeadExpr(signalExpr=this)), ኹೃ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ಬ᧓), name=ኹೃ, expression=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr())), ߊ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ใ), name=ߊ, expression=)}), ပ࿆ൗ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ပ࿆ൗ, impl=[ᏻ], extend=[], fields={}, methods={})}, main=Εꫮꩌ)
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=DotExpression.CallExpr(receiver=1.0, isLifted=true, methodName=ⷐୁ᮸ਃ઼᠌, arguments=[15, Expression.TailExpr(signalExpr=false), Expression.LetExpr(mdf=IMM, name=ⳬ᳹, value=ຄֿৢోౕ, boundTo=true)])))
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=true)
Program(classDeclarations={ﷱ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ﷱ, impl=[], extend=[], fields={Ꮲ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=Δ⵿), name=Ꮲ)}, methods={}), ᎂ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᎂ, impl=[￠༷ઃ᬴ާ႖], extend=[], fields={ൎ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ໟ଼), name=ൎ)}, methods={ອ᜴௯=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⸯ), name=ອ᜴௯, expression=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=), tail=DotExpression.FieldAssignExpr(receiver=, fieldName=ۿׁ༵᭗ꢁ, value=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ῲ, value=Expression.LetExpr(mdf=MUT, name=ⱓୈ, value=Expression.InstantiationExpr(name=ᶫ഻, args=[]), boundTo=Expression.SignalConstructionExpr(head=true, tail=14)), boundTo=0.0)))))})}, main=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=52827)))
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=﹩꩒, args=[]))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=ﶒ, tail=70.0))
Program(classDeclarations={￠=Program.ClassDeclaration(isCapability=false, isInterface=true, name=￠, impl=[], extend=[], fields={}, methods={}), Ｑ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ｑ, impl=[], extend=[], fields={৻ੰ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=Ὄꤨၞ), name=৻ੰ), ﷸ৭=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ࠄ⳰), name=ﷸ৭), ᨆୋீꠋ⁩ി᮰ྒੑ꯰᥉=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ªꩌ), name=ᨆୋீꠋ⁩ി᮰ྒੑ꯰᥉)}, methods={}), କ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=କ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={ᾩோ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᾩோ, impl=[], extend=[], fields={ຮี=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=₽়), name=ຮี), Ⴧ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=µ), name=Ⴧ), எᩘ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ఎ), name=எᩘ), ऽ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ஜ), name=ऽ)}, methods={ඳ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꬌ), name=ඳ, expression=Expression.LetExpr(mdf=IMM, name=ᮯ, value=true, boundTo=Expression.TailExpr(signalExpr=ۮ८))), ৠᬃ༙ั൫=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ៗ), name=ৠᬃ༙ั൫, expression=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ଫ, value=Expression.SignalConstructionExpr(head=0, tail=3), boundTo=DotExpression.FieldAssignExpr(receiver=1.3969838619232178E-8, fieldName=〳, value=2.2667359117774297E23)))), ẜ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=º༨), name=ẜ, expression=1)}), ੳೢ࡚=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ੳೢ࡚, impl=[ៗ࠙༾᪱, ຮ, າ, ࠨ, ၯ, M, ۦ꣒, ࠤᰨ্], extend=[], fields={}, methods={}), 〻꠆ॣౢ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=〻꠆ॣౢ, impl=[ძ, ল, ఝ, ଊั], extend=[], fields={}, methods={ˉٞ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ۿ), name=ˉٞ, expression=39)}), ⁿ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⁿ, impl=[], extend=[ࠤ], fields={}, methods={})}, main=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=READ, name=ꡰ, value=false, boundTo=0)))
Program(classDeclarations={}, main=7)
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ቌ, value=0, boundTo=஄\b\f\uuuFE86\ud9BA)))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=︳, value=Expression.TailExpr(signalExpr=4041.0), boundTo=DotExpression.CallExpr(receiver=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=ゝัꩃ۰꤫)), isLifted=true, methodName=ﶥ, arguments=[])))
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=ꬎ߫６ୣ᭫᠋؜ꪸ)
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=ℤ)))
Program(classDeclarations={ॐ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ॐ, impl=[], extend=[ၿెைؓ], fields={}, methods={}), ᙷ︋=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᙷ︋, impl=[இஂ, ꡄ, থୗﬞ], extend=[], fields={}, methods={})}, main=DotExpression.FieldAccessExpr(receiver=, fieldName=க))
Program(classDeclarations={៛៨ٰ‭፞=Program.ClassDeclaration(isCapability=false, isInterface=false, name=៛៨ٰ‭፞, impl=[ꘑ, ꯖၘ], extend=[], fields={}, methods={＿=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ៗ൬), name=＿, expression=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=MUT, name=ቘ, value=9.041691839684063E-10, boundTo=DotExpression.FieldAccessExpr(receiver=8, fieldName=ᳰᬂૅਁ))))}), ꣳ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꣳ, impl=[], extend=[], fields={}, methods={}), ۮං=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ۮං, impl=[ౚ꤀], extend=[], fields={ߢஂ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꣴꩌ), name=ߢஂ)}, methods={Ëׁޮୂ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ৼᰳ꣡೫), name=Ëׁޮୂ, expression=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.EmptySignalExpr())))))})}, main=Expression.LetExpr(mdf=IMM, name=ￎ⃪, value=8, boundTo=Expression.EmptySignalExpr()))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=Expression.EmptySignalExpr()))
Program(classDeclarations={}, main=this)
Program(classDeclarations={Ζ۪=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ζ۪, impl=[], extend=[ଡ༹, ꕮ, એ], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=false))
Program(classDeclarations={ᄥ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᄥ, impl=[], extend=[௹ྒྷꪳ᱔], fields={}, methods={})}, main=)
Program(classDeclarations={}, main=1)
Program(classDeclarations={ºꪸ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ºꪸ, impl=[쨮], extend=[], fields={৻၆=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꤿോ), name=৻၆)}, methods={ꤸ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=直), name=ꤸ, expression=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=READ, name=ៗ꣘, value=DotExpression.FieldAccessExpr(receiver=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=READ, name=ᤘ, value=\uuuuuuF7B7\\𞀣ᜎ\317ꬨ\f, boundTo=false), tail=10.0), fieldName=ள), boundTo=៺), tail=Expression.InstantiationExpr(name=ဦᯭ, args=[𛲀, DotExpression.FieldAccessExpr(receiver=false, fieldName=ῖྒྷ), ﬗׇ]))), _഻᳐=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᣟ), name=_഻᳐, expression=this), ݼ⁫=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=Ή), name=ݼ⁫, expression=Expression.LetExpr(mdf=IMM, name=ᜌ, value=Expression.EmptySignalExpr(), boundTo=Expression.TailExpr(signalExpr=1228.0)))})}, main=this)
Program(classDeclarations={꠸ꣀ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=꠸ꣀ, impl=[], extend=[ೲ, µ], fields={}, methods={}), ⵯꠋဳۧ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ⵯꠋဳۧ, impl=[], extend=[], fields={〲꯭=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=քି), name=〲꯭)}, methods={ဿꪾ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ၛ), name=ဿꪾ, expression=0.0), ৎ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=䡠︥), name=ৎ, expression=Expression.LetExpr(mdf=CAPSULE, name=ᙻ, value=Expression.SignalConstructionExpr(head=226, tail=Expression.HeadExpr(signalExpr=false)), boundTo=))})}, main=Expression.LetExpr(mdf=MUT, name=〧, value=DotExpression.FieldAccessExpr(receiver=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=Ꞵ, value=ៗ༙⃮­ொ, boundTo=Expression.HeadExpr(signalExpr=171)), tail=ꞵ), fieldName=ᝯ), boundTo=DotExpression.CallExpr(receiver=DotExpression.CallExpr(receiver=, isLifted=true, methodName=ছ, arguments=[DotExpression.FieldAssignExpr(receiver=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=DotExpression.FieldAccessExpr(receiver=this, fieldName=ힳ)), tail=Expression.HeadExpr(signalExpr=this)), fieldName=ቝᰦࠩ, value=ఎ༤)]), isLifted=true, methodName=ﬖ, arguments=[])))
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=昁))
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=DotExpression.CallExpr(receiver=, isLifted=false, methodName=ࡦ, arguments=[Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.EmptySignalExpr())), Expression.SignalConstructionExpr(head=40, tail=Expression.SignalConstructionExpr(head=𞺀\uuuua8c2, tail=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=𑌅))))), Expression.EmptySignalExpr(), Expression.LetExpr(mdf=IMM, name=ઽྕ, value=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr()), boundTo=this), Expression.LetExpr(mdf=IMM, name=ￚ, value=Expression.LetExpr(mdf=READ, name=ꬣ, value=Expression.EmptySignalExpr(), boundTo=DotExpression.FieldAccessExpr(receiver=Expression.SignalConstructionExpr(head=this, tail=Expression.LetExpr(mdf=IMM, name=ꩺ, value=this, boundTo=ℴ꘥ꧥ)), fieldName=ߺ)), boundTo=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=ႎ۫៤, tail=DotExpression.FieldAccessExpr(receiver=Expression.TailExpr(signalExpr=), fieldName=ￂ)), tail=true))))), ဋ⁨꙼, Expression.SignalConstructionExpr(head=true, tail=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=ꩦ౬, args=[]))), tail=Expression.LetExpr(mdf=IMM, name=ˬ, value=Expression.HeadExpr(signalExpr=DotExpression.FieldAssignExpr(receiver=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=0.0))), fieldName=å, value=true)), boundTo=Ï)))])))
Program(classDeclarations={ﾸೋ̜ം=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ﾸೋ̜ം, impl=[], extend=[], fields={Ê̄᷾=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ⷞ), name=Ê̄᷾)}, methods={})}, main=Expression.SignalConstructionExpr(head=0, tail=true))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=ቘ೮, tail=1.0977046442100833E27))
Program(classDeclarations={ဏၲ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ဏၲ, impl=[], extend=[], fields={}, methods={}), ቘ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ቘ, impl=[ꧻ, Ⴟ, ฿], extend=[], fields={}, methods={ୟᝲ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=ꘪྐྵ๒), name=ୟᝲ, expression=Expression.LetExpr(mdf=IMM, name=ں, value=Expression.SignalConstructionExpr(head=true, tail=Expression.LetExpr(mdf=IMM, name=ⷊ, value=DotExpression.CallExpr(receiver=Expression.EmptySignalExpr(), isLifted=true, methodName=ළ, arguments=[]), boundTo=true)), boundTo=false)), ⳬா=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ﷵ੫), name=ⳬா, expression=Expression.InstantiationExpr(name=ঐ⃡, args=[〨ః])), ຈ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ⷉ), name=ຈ, expression=Expression.SignalConstructionExpr(head=DotExpression.FieldAssignExpr(receiver=this, fieldName=＿, value=DotExpression.FieldAssignExpr(receiver=ᵫ᥏ᯰ, fieldName=Ϳ, value=Expression.LetExpr(mdf=IMM, name=ⶾୖ꙯, value=DotExpression.CallExpr(receiver=Expression.TailExpr(signalExpr=1), isLifted=false, methodName=؋, arguments=[]), boundTo=Expression.InstantiationExpr(name=ൖ, args=[])))), tail=DotExpression.CallExpr(receiver=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=௦಺൤)), tail=Expression.SignalConstructionExpr(head=true, tail=Expression.LetExpr(mdf=IMM, name=￦, value=Expression.TailExpr(signalExpr=false), boundTo=2.5E-8))), isLifted=false, methodName=ῄಃ, arguments=[])))}), ժ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ժ, impl=[], extend=[], fields={}, methods={ˍೋ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=READ, isLifted=false, name=ᮮࠛൄ࠘؜), name=ˍೋ, expression=Expression.EmptySignalExpr())})}, main=Expression.TailExpr(signalExpr=1067))
Program(classDeclarations={ڳꦃެ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ڳꦃެ, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.FieldAccessExpr(receiver=Expression.HeadExpr(signalExpr=Expression.EmptySignalExpr()), fieldName=₻))
Program(classDeclarations={}, main=)
Program(classDeclarations={}, main=true)
Program(classDeclarations={ᱲੵ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᱲੵ, impl=[], extend=[], fields={}, methods={}), ቡ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ቡ, impl=[ஔ්႐], extend=[], fields={}, methods={ੲૻᮥ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ܐ), name=ੲૻᮥ, expression=Expression.InstantiationExpr(name=ℾ, args=[this, true, Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=ͷᳲꥒ︧, args=[]), tail=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=ৠ၇්, value=0.3, boundTo=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=Ꝑ, value=Expression.LetExpr(mdf=IMM, name=ΐ, value=false, boundTo=false), boundTo=Expression.LetExpr(mdf=IMM, name=ໃ, value=Expression.HeadExpr(signalExpr=Expression.EmptySignalExpr()), boundTo=ӗ)))), tail=ༀ὾)), false]))}), ໟ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ໟ, impl=[], extend=[], fields={ၷᝒ⃗ు=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꢇྏﬞ᮱ᢩᝒ࿆), name=ၷᝒ⃗ు)}, methods={Ὑ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=એ), name=Ὑ, expression=Expression.InstantiationExpr(name=ອ, args=[]))})}, main=ꩈ)
Program(classDeclarations={}, main=6)
Program(classDeclarations={}, main=this)
Program(classDeclarations={ꫂ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꫂ, impl=[], extend=[], fields={ჰ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ૐ), name=ჰ), ᜭັັ=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ᳶ), name=ᜭັັ), ၚᮣ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ໆ꙯), name=ၚᮣ)}, methods={})}, main=163.0)
Program(classDeclarations={ຣ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ຣ, impl=[], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=DotExpression.CallExpr(receiver=\", isLifted=false, methodName=ۼ, arguments=[Expression.InstantiationExpr(name=ⶡୖ, args=[Expression.InstantiationExpr(name=ⴧ, args=[Expression.InstantiationExpr(name=ல܏ৗ, args=[])])])]), tail=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=ⸯ, args=[]), tail=Expression.InstantiationExpr(name=௹, args=[Expression.InstantiationExpr(name=⁔, args=[]), this, Expression.EmptySignalExpr()]))))))
Program(classDeclarations={µ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=µ, impl=[], extend=[ᝩ୍෬, ໝྞၢ], fields={}, methods={}), ﬕ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ﬕ, impl=[], extend=[], fields={}, methods={}), ﹏᮸᪖﻿ܲ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=﹏᮸᪖﻿ܲ, impl=[], extend=[], fields={}, methods={}), າޫ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=າޫ, impl=[], extend=[], fields={}, methods={})}, main=ꠞ)
Program(classDeclarations={}, main=false)
Program(classDeclarations={ပ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ပ, impl=[], extend=[], fields={}, methods={}), 〹៥=Program.ClassDeclaration(isCapability=false, isInterface=true, name=〹៥, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={z=Program.ClassDeclaration(isCapability=false, isInterface=false, name=z, impl=[ߝ], extend=[], fields={ⵣ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=Ὓী〫⃐ઁ), name=ⵣ), 〡ᳲ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ળ), name=〡ᳲ), श=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=૱), name=श), য=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=ꛋ⳱), name=য)}, methods={})}, main=DotExpression.FieldAccessExpr(receiver=false, fieldName=֏႒))
Program(classDeclarations={ਏꥍ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ਏꥍ, impl=[], extend=[], fields={ₑ=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=ງͧᤶ), name=ₑ), ၿू᠐=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ﾡ), name=ၿू᠐), ͷం=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ౚ), name=ͷం)}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={Ὓਁ〪꙯ꪾٗ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ὓਁ〪꙯ꪾٗ, impl=[], extend=[Όை], fields={}, methods={})}, main=DotExpression.FieldAssignExpr(receiver=0.0, fieldName=ﬀ, value=ᳵ))
Program(classDeclarations={ۯ൫ͦ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ۯ൫ͦ, impl=[], extend=[], fields={}, methods={}), ˮၴ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ˮၴ, impl=[ኍ, ｳ, ᜐ, ℐ, ⷝ, Ꞩ꫶༵, ࢱ゚ೂ, Ϳୢ, ῐ, Ϳ઼], extend=[], fields={}, methods={}), ⸯׂ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⸯׂ, impl=[], extend=[], fields={}, methods={})}, main=2.097152E8)
Program(classDeclarations={Ῑ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ῑ, impl=[], extend=[ࠨ, ࡊ], fields={}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ὖ, args=[]))
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Ṱ))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=false, tail=\'਩), tail=false))
Program(classDeclarations={గ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=గ, impl=[], extend=[], fields={}, methods={})}, main=3.6314177056347824E150)
Program(classDeclarations={ୟ꧳=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ୟ꧳, impl=[], extend=[ၜ], fields={}, methods={}), ꪣﬞ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꪣﬞ, impl=[], extend=[ⁿ], fields={}, methods={})}, main=Expression.InstantiationExpr(name=ఋॎ, args=[29]))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=false)
Program(classDeclarations={ᥤᰵ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᥤᰵ, impl=[], extend=[ጔং], fields={}, methods={}), ৲=Program.ClassDeclaration(isCapability=false, isInterface=false, name=৲, impl=[ଭ], extend=[], fields={}, methods={}), È=Program.ClassDeclaration(isCapability=false, isInterface=true, name=È, impl=[], extend=[ॐ, Ⅼ], fields={}, methods={}), ൟ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ൟ, impl=[〺؜, ஞ￻ꣁ], extend=[], fields={$ၳ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ࠤ), name=$ၳ)}, methods={})}, main=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ᨁᳲ, value=this, boundTo=true)))
Program(classDeclarations={}, main=\uuuu256a)
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=ꚤꣂ))
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ﵣ, value=this, boundTo=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=ၛ᜴᷈௩᪽᧙්, args=[Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=Expression.InstantiationExpr(name=ຍ, args=[Expression.LetExpr(mdf=IMM, name=暴, value=7.926335344172073E17, boundTo=DotExpression.FieldAssignExpr(receiver=Expression.SignalConstructionExpr(head=this, tail=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=฿ꫭ࣢ﬞ, args=[]), tail=Expression.LetExpr(mdf=IMM, name=Ⲗ, value=Expression.InstantiationExpr(name=ቍ᠕, args=[]), boundTo=true)), tail=ࡡ)), fieldName=ྋࣾ, value=Expression.EmptySignalExpr()))])), Expression.LetExpr(mdf=IMM, name=Ὓཷ, value=15, boundTo=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=Ｕ￻௨᥇ஂੌ, args=[Expression.EmptySignalExpr(), Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=false)]), tail=false))])))))
Program(classDeclarations={ᬭ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᬭ, impl=[], extend=[], fields={}, methods={ቜ‮=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=૱), name=ቜ‮, expression=DotExpression.CallExpr(receiver=Expression.EmptySignalExpr(), isLifted=false, methodName=ᳶؒ, arguments=[8.08E-5])), ꫝܑ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=ꬒ), name=ꫝܑ, expression=\66), ꨅꦼ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=MUT, isLifted=false, name=ꤜ), name=ꨅꦼ, expression=Expression.HeadExpr(signalExpr=62)), ⁱܑ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ঽ), name=ⁱܑ, expression=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=9.0))), ꠘᮬೂ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=MUT, isLifted=false, name=ᜱ), name=ꠘᮬೂ, expression=Expression.EmptySignalExpr()), ꡝੋ୍=Program.Method(mdf=IMM, returnType=Program.Type(mdf=MUT, isLifted=false, name=µା), name=ꡝੋ୍, expression=Expression.TailExpr(signalExpr=6656.0)), Ⴐ‮ႂ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=פּै), name=Ⴐ‮ႂ, expression=Expression.InstantiationExpr(name=ຊ, args=[Expression.TailExpr(signalExpr=DotExpression.FieldAccessExpr(receiver=Expression.TailExpr(signalExpr=this), fieldName=ךּ)), Expression.HeadExpr(signalExpr=Expression.SignalConstructionExpr(head=0, tail=Expression.LetExpr(mdf=IMM, name=מּ, value=Expression.TailExpr(signalExpr=ⶦଁ), boundTo=Expression.TailExpr(signalExpr=1)))), ￍ])), ࠨ೬ୣ᥈=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⷌ), name=ࠨ೬ୣ᥈, expression=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=1))), शꤪ᠍=Program.Method(mdf=MUT, returnType=Program.Type(mdf=MUT, isLifted=false, name=Ϳੇ), name=शꤪ᠍, expression=1.58E132)})}, main=Expression.LetExpr(mdf=IMM, name=ௐ่ൗꯦ, value=Expression.InstantiationExpr(name=ˤ３, args=[]), boundTo=Expression.LetExpr(mdf=IMM, name=Ί, value=Expression.HeadExpr(signalExpr=this), boundTo=0.020751953125)))
Program(classDeclarations={}, main=\\\f\66\061)
Program(classDeclarations={ௐ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ௐ, impl=[], extend=[ଧࣜ], fields={}, methods={}), ᤁᨛᤵ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᤁᨛᤵ, impl=[], extend=[Ὡ, ਲ਼, ꦜ᠓ᝳ], fields={}, methods={}), Άॉ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Άॉ, impl=[ꩺ२], extend=[], fields={ஆ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Ꞵ), name=ஆ)}, methods={ﶒ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ﹰ), name=ﶒ, expression=DotExpression.FieldAccessExpr(receiver=7, fieldName=ଐ)), ꢊ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=₹᪀꠆), name=ꢊ, expression=10.0)})}, main=43)
Program(classDeclarations={ヾୃ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ヾୃ, impl=[], extend=[], fields={}, methods={}), ਓ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ਓ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=ᲄ, args=[Expression.TailExpr(signalExpr=205.875)])))
Program(classDeclarations={〲=Program.ClassDeclaration(isCapability=false, isInterface=false, name=〲, impl=[], extend=[], fields={}, methods={ﶴ๐ޫ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᪧᯭ), name=ﶴ๐ޫ, expression=Expression.LetExpr(mdf=IMM, name=ଉ, value=5.4, boundTo=true)), Ά­਼=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=MUT, isLifted=false, name=Ὑꙶ), name=Ά­਼, expression=false), ＿=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=false, name=ງ), name=＿, expression=0.9375)})}, main=Expression.InstantiationExpr(name=﹎, args=[Expression.LetExpr(mdf=READ, name=ౠ­, value=DotExpression.CallExpr(receiver=DotExpression.FieldAccessExpr(receiver=true, fieldName=ಀ), isLifted=false, methodName=ª७, arguments=[Expression.EmptySignalExpr()]), boundTo=𑊪)]))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ͷꩼ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ͷꩼ, impl=[ꜜ], extend=[], fields={}, methods={}), ߺ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ߺ, impl=[], extend=[Άൢ, ೞ﻿], fields={}, methods={})}, main=1)
Program(classDeclarations={}, main=0)
Program(classDeclarations={ল=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ল, impl=[], extend=[ஞ, ﬀ, ೠ, ᏽ], fields={}, methods={})}, main=\uB006\ue4DF)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=7.0, tail=DotExpression.CallExpr(receiver=DotExpression.FieldAccessExpr(receiver=ℇꨰ, fieldName=અ), isLifted=false, methodName=ⳮ, arguments=[this])))
Program(classDeclarations={}, main=ჶঁ)
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=600.0)
Program(classDeclarations={ﬖ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ﬖ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=ꘫ, value=\2, boundTo=Expression.SignalConstructionExpr(head=ﲙ, tail=Expression.EmptySignalExpr())))
Program(classDeclarations={}, main=DotExpression.CallExpr(receiver=Expression.EmptySignalExpr(), isLifted=false, methodName=＄ꤨൊ, arguments=[ఊܑ, Expression.TailExpr(signalExpr=ⁿௗ), Expression.InstantiationExpr(name=ᾑ, args=[]), this, 0]))
Program(classDeclarations={ୱ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ୱ, impl=[], extend=[], fields={}, methods={Ὕ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ℤ⃒ಃꥏે), name=Ὕ, expression=Expression.HeadExpr(signalExpr=this))}), ⴭ꯲ᬷ៝=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ⴭ꯲ᬷ៝, impl=[ⷙ, ￅ໔ੵ], extend=[], fields={}, methods={}), ༀ꙯=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ༀ꙯, impl=[], extend=[ࡠ⁦꪿ೖ, ೠᢩ], fields={}, methods={})}, main=Expression.TailExpr(signalExpr=ꢖั))
Program(classDeclarations={ࡦ‮ᯰ꩔েూۙྵ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ࡦ‮ᯰ꩔েూۙྵ, impl=[], extend=[], fields={}, methods={})}, main=false)
Program(classDeclarations={ힸો=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ힸો, impl=[], extend=[], fields={ꣵ᳑௩ಂ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=〵), name=ꣵ᳑௩ಂ)}, methods={ཬ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꨀׇ), name=ཬ, expression=true), ⴭׅ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=ͷ), name=ⴭׅ, expression=Expression.SignalConstructionExpr(head=0.002838134765625, tail=this))}), ኌ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ኌ, impl=[ୟ], extend=[], fields={ୱ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ٲ᥆ׇ︮), name=ୱ), ＄=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=װெ), name=＄)}, methods={})}, main=﹏ꧥ)
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=à), tail=187))
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ૹᰥၤ੨, args=[Expression.InstantiationExpr(name=ٮੀ, args=[])]))
Program(classDeclarations={}, main=0.59)
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(receiver=Expression.InstantiationExpr(name=ၺ, args=[]), fieldName=ಈ))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=ꣽ, args=[DotExpression.FieldAssignExpr(receiver=Expression.InstantiationExpr(name=Ⴭ‍ﬞೄೆௗ, args=[this, true]), fieldName=ஃ, value=Expression.LetExpr(mdf=IMM, name=ꓵ, value=1.2229040244039233E26, boundTo=Expression.EmptySignalExpr())), , false]), tail=this))
Program(classDeclarations={ℓ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ℓ, impl=[], extend=[셨, ﹲ], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=Ｂꯥ, value=Expression.EmptySignalExpr(), boundTo=200000.0))
Program(classDeclarations={}, main=\r)
Program(classDeclarations={}, main=this)
Program(classDeclarations={Έ­=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Έ­, impl=[], extend=[Ⅰ], fields={}, methods={}), رొ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=رొ, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.FieldAccessExpr(receiver=false, fieldName=ଈ))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ட゙, value=Expression.InstantiationExpr(name=ᙷ, args=[]), boundTo=Expression.TailExpr(signalExpr=true)))
Program(classDeclarations={}, main=0.001003)
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ୠ, value=this, boundTo=238))
Program(classDeclarations={Ωꪳ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ωꪳ, impl=[], extend=[ￒᨘॖ, יּ], fields={}, methods={}), č=Program.ClassDeclaration(isCapability=false, isInterface=true, name=č, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(name=ˋ, args=[Expression.HeadExpr(signalExpr=this)]))
Program(classDeclarations={ｯ่ો᧔༘ી=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ｯ่ો᧔༘ી, impl=[], extend=[], fields={}, methods={}), ௐ߲᪰=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ௐ߲᪰, impl=[], extend=[Õ], fields={}, methods={})}, main=DotExpression.FieldAccessExpr(receiver=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=ਫ਼, value=Expression.InstantiationExpr(name=ܓ, args=[]), boundTo=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr())), tail=this), fieldName=〴))
Program(classDeclarations={}, main=Infinity)
Program(classDeclarations={}, main=\145)
Program(classDeclarations={ೡ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ೡ, impl=[浪ꥐ, ℼ], extend=[], fields={}, methods={}), ᜪᯱ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᜪᯱ, impl=[ᑚؗ, তັ, ﬨ১], extend=[], fields={ᝠ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ⶵৢ꘨), name=ᝠ), ன=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ⸯৗ), name=ன)}, methods={}), ⴭ۪⃡=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⴭ۪⃡, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(name=௹ꦾ, args=[]))
Program(classDeclarations={$ౖ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=$ౖ, impl=[], extend=[], fields={ࡒ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᢪ), name=ࡒ), ঽ੦ੈ‫꯲=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꬮ᜴), name=ঽ੦ੈ‫꯲), ەᤨൌ༵ࣼ=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ͽ), name=ەᤨൌ༵ࣼ), த꣒=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=וᝲ), name=த꣒)}, methods={}), ꜝ٣=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꜝ٣, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(name=ຣ᧖ි᮫, args=[]))
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ৎ༿꩙ો=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ৎ༿꩙ો, impl=[], extend=[Õ], fields={}, methods={})}, main=false)
Program(classDeclarations={ՙⷸꦀ༡꧙=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ՙⷸꦀ༡꧙, impl=[], extend=[], fields={}, methods={}), ℇ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ℇ, impl=[], extend=[], fields={}, methods={}), ەׇಂ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ەׇಂ, impl=[], extend=[ἄ], fields={}, methods={})}, main=Expression.SignalConstructionExpr(head=৻᳒, tail=0.0))
Program(classDeclarations={Ῡ২=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ῡ২, impl=[], extend=[], fields={ၾੇ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ਉೄৌׇ), name=ၾੇ)}, methods={ι᳸=Program.Method(mdf=READ, returnType=Program.Type(mdf=MUT, isLifted=false, name=ⷊᰳୌ), name=ι᳸, expression=true), ဿ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=µ್ಁ), name=ဿ, expression=Expression.HeadExpr(signalExpr=ℳꢁ))})}, main=6.021017265658798E22)
Program(classDeclarations={Ὂఀ࡙፞=Program.ClassDeclaration(isCapability=true, isInterface=false, name=Ὂఀ࡙፞, impl=[ᮉૣୖ], extend=[], fields={}, methods={ⴧ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ךּ), name=ⴧ, expression=this), ꬠୃ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ՙ), name=ꬠୃ, expression=0)})}, main=this)
Program(classDeclarations={}, main=ـ႗)
Program(classDeclarations={}, main=false)
Program(classDeclarations={؋=Program.ClassDeclaration(isCapability=false, isInterface=true, name=؋, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=Ὕ, value=this, boundTo=3.4), tail=Expression.EmptySignalExpr()))
Program(classDeclarations={ᱏܑ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᱏܑ, impl=[], extend=[], fields={}, methods={ಀ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=そꢾᳳٰׄ), name=ಀ, expression=238.0), Є=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=〳ີᨘၟᩳ⃡), name=Є, expression=ၐਃංඃ)})}, main=Expression.TailExpr(signalExpr=DotExpression.FieldAccessExpr(receiver=쳊۫, fieldName=ⶴೕꩼ)))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ń, value=this, boundTo=Expression.TailExpr(signalExpr=false)))
Program(classDeclarations={ㄊᯰꦻ᱉=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ㄊᯰꦻ᱉, impl=[ࠚ, ꬤၖୖੈ], extend=[], fields={}, methods={ཛ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꬤ), name=ཛ, expression=this)})}, main=Expression.InstantiationExpr(name=﹩, args=[DotExpression.CallExpr(receiver=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=ວᳲਿ᳴ົ̒, value=6, boundTo=42), tail=Expression.TailExpr(signalExpr=ౘ)), isLifted=true, methodName=ෂ, arguments=[0.0, , 70.0, ງ, Expression.EmptySignalExpr()])]))
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ᏼ, args=[]))
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ﬂູ, args=[]))
Program(classDeclarations={Ｌ࠙=Program.ClassDeclaration(isCapability=true, isInterface=false, name=Ｌ࠙, impl=[], extend=[], fields={}, methods={}), ᚑꪲꚟ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᚑꪲꚟ, impl=[], extend=[], fields={}, methods={}), ㆵஂ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ㆵஂ, impl=[ಸ਼], extend=[], fields={ᨌ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ઉ൨), name=ᨌ)}, methods={ꧻ༩=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=લ꩙), name=ꧻ༩, expression=this)})}, main=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=this))
Program(classDeclarations={ˠେີ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ˠେີ, impl=[], extend=[], fields={}, methods={}), Åો⃔ၗ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=Åો⃔ၗ, impl=[], extend=[], fields={}, methods={ⷆ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᚂ⁬༵), name=ⷆ, expression=Expression.LetExpr(mdf=MUT, name=ண྆, value=Expression.TailExpr(signalExpr=12.345947265625), boundTo=2))}), ಀேේ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ಀேේ, impl=[], extend=[], fields={}, methods={}), ਲ਼=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ਲ਼, impl=[], extend=[], fields={ṃ９=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ⅎ), name=ṃ９)}, methods={מּﬞ︍ൗ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ำ᳤), name=מּﬞ︍ൗ, expression=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr()))}), ᬠ᮲￻=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᬠ᮲￻, impl=[], extend=[], fields={}, methods={ໃ꯲꤇=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⳬ), name=ໃ꯲꤇, expression=false)}), ਸ྆ꥊ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ਸ྆ꥊ, impl=[ℇ, ﭓ᭘], extend=[], fields={ⲕ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ኍ), name=ⲕ), ࢶ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ੜైࠗ), name=ࢶ), ꫝ︅=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=؋), name=ꫝ︅), ꡞ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ௐ9), name=ꡞ)}, methods={ՙᷮ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꪽ꛱), name=ՙᷮ, expression=Expression.LetExpr(mdf=IMM, name=ꘔ, value=0.73046875, boundTo=false)), ￗ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ࢧ), name=ￗ, expression=Expression.SignalConstructionExpr(head=጑\uFC54𐀼, tail=this)), ￎ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=మ), name=ￎ, expression=true)}), Ω=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ω, impl=[], extend=[ꬠ, ⶤ], fields={}, methods={}), ব҇=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ব҇, impl=[], extend=[], fields={}, methods={}), ᥘ︇‏ൊ⃓᳭꣬ꢀ⵿᭱=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᥘ︇‏ൊ⃓᳭꣬ꢀ⵿᭱, impl=[], extend=[], fields={ਹၪ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Ձྗॄ᳭ୖᰴ), name=ਹၪ), એഁ੮ၤ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ⴭ꤃ᮩ٣), name=એഁ੮ၤ), ︳ຼൣ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ⶢ), name=︳ຼൣ)}, methods={})}, main=Expression.HeadExpr(signalExpr=this))
Program(classDeclarations={ঢ়᱆=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ঢ়᱆, impl=[ⴭ, ⁔༷, ꪵ], extend=[], fields={}, methods={ﬖ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=_ౖ), name=ﬖ, expression=false), ය=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=〱), name=ය, expression=true), Ⴭᳳ⁮=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ℒ), name=Ⴭᳳ⁮, expression=0.0)})}, main=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=MUT, name=ઽ, value=Ώ᤹, boundTo=Expression.LetExpr(mdf=IMM, name=Ý, value=Expression.LetExpr(mdf=IMM, name=ౠ༡, value=true, boundTo=Expression.LetExpr(mdf=CAPSULE, name=ヅ̆, value=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=DotExpression.CallExpr(receiver=Expression.SignalConstructionExpr(head=0, tail=1302.0), isLifted=true, methodName=ፕꪴ, arguments=[Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=Ϳັ, args=[])), this, 0.0]))), boundTo=DotExpression.FieldAssignExpr(receiver=false, fieldName=ⷖู༹, value=this))), boundTo=90.0)), tail=Expression.LetExpr(mdf=IMM, name=ಸ, value=7734089, boundTo=57)))
Program(classDeclarations={}, main=)
Program(classDeclarations={ꪱᤢ᪵᳠ॢെ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꪱᤢ᪵᳠ॢെ, impl=[], extend=[β], fields={}, methods={})}, main=6.184563972055912E-10)
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(receiver=ﬡ९, fieldName=ꫛ))
Program(classDeclarations={చꩍ꠆=Program.ClassDeclaration(isCapability=false, isInterface=false, name=చꩍ꠆, impl=[ೱ, અ], extend=[], fields={}, methods={ὅ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ݚ୍), name=ὅ, expression=0.0), ફꦂີꪾ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=ଷ), name=ફꦂີꪾ, expression=true)}), ఽ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ఽ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={ⴵ؃ဵ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ⴵ؃ဵ, impl=[ਲ], extend=[], fields={}, methods={៛꫁=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⶔ໋ਂ᱘), name=៛꫁, expression=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=4))), ൔো=Program.Method(mdf=IMM, returnType=Program.Type(mdf=MUT, isLifted=false, name=Ήꦼꦿ), name=ൔো, expression=Expression.LetExpr(mdf=IMM, name=ᢪั‏༹ꦁ, value=Expression.LetExpr(mdf=IMM, name=ￛ, value=2, boundTo=\115), boundTo=7))}), ਫ਼=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ਫ਼, impl=[ⴭ꯲], extend=[], fields={}, methods={ᝈ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=MUT, isLifted=false, name=ࡢಂᜲꧥ), name=ᝈ, expression=this), ꝼ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ꫀꥊ), name=ꝼ, expression=DotExpression.FieldAccessExpr(receiver=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ۮ, value=ಌꨴ, boundTo=Expression.EmptySignalExpr()))), fieldName=ݮ)), ͱ꪿=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ງ), name=ͱ꪿, expression=)})}, main=4)
Program(classDeclarations={}, main=꨷)
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ᨑ, args=[]))
Program(classDeclarations={ஐ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ஐ, impl=[], extend=[], fields={}, methods={}), ﳗ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ﳗ, impl=[], extend=[], fields={ℜਁ២ⷵ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ዂ), name=ℜਁ២ⷵ)}, methods={})}, main=ᱎ)
Program(classDeclarations={F꫁७=Program.ClassDeclaration(isCapability=false, isInterface=false, name=F꫁७, impl=[ꩀ⁡, த႖꤉߭᳚ཾೈ꘥, ꬂ], extend=[], fields={}, methods={ᢌ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=MUT, isLifted=false, name=〥ꩌ︧ૢ), name=ᢌ, expression=true)})}, main=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=DotExpression.FieldAssignExpr(receiver=true, fieldName=ർ, value=66048.0))))
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ࡪꤩ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ࡪꤩ, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=this)
Program(classDeclarations={ⷔ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ⷔ, impl=[], extend=[], fields={ᨠ᱓=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=Ꝇ᥆), name=ᨠ᱓)}, methods={ෂꢶ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⷊ), name=ෂꢶ, expression=this), Ή=Program.Method(mdf=MUT, returnType=Program.Type(mdf=READ, isLifted=false, name=ຖ⃜), name=Ή, expression=), Ό=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ກ᷻ꢁ), name=Ό, expression=ㆨꢀ), ল꧑=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ਐ), name=ল꧑, expression=DotExpression.FieldAssignExpr(receiver=true, fieldName=ᳶ, value=this))}), ঠꨬ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ঠꨬ, impl=[], extend=[], fields={}, methods={})}, main=\\﬇)
Program(classDeclarations={ጕ֜ꢀꩃ꧸༷ࠖ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ጕ֜ꢀꩃ꧸༷ࠖ, impl=[], extend=[ι्], fields={}, methods={})}, main=ఌ)
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=0.0)
Program(classDeclarations={Ꙭٰ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ꙭٰ, impl=[], extend=[], fields={}, methods={ₙ්꤈=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ܪ), name=ₙ්꤈, expression=Expression.LetExpr(mdf=IMM, name=ਈ, value=Expression.HeadExpr(signalExpr=80), boundTo=ª)), ວꦶ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=false, name=ॐ᱕꛱), name=ວꦶ, expression=Expression.SignalConstructionExpr(head=3.0, tail=Expression.HeadExpr(signalExpr=5.0)))}), ງ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ງ, impl=[], extend=[], fields={ꚁ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ੜ), name=ꚁ), ᱍ᧙︊︍ྐ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ਸെ), name=ᱍ᧙︊︍ྐ)}, methods={}), ߨྲৌ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ߨྲৌ, impl=[], extend=[Ⴭ], fields={}, methods={}), ꪏ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꪏ, impl=[], extend=[ೠֿۧᬀ], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=＿, args=[])))
Program(classDeclarations={}, main=2)
Program(classDeclarations={Ⴧ۸᜴=Program.ClassDeclaration(isCapability=true, isInterface=false, name=Ⴧ۸᜴, impl=[], extend=[], fields={ꠉׁ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=￡), name=ꠉׁ)}, methods={ᠺ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ゞ௬୦), name=ᠺ, expression=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=ᳶ؃ꢹ, value=Expression.HeadExpr(signalExpr=false), boundTo=Expression.InstantiationExpr(name=ￗࠪ, args=[])), tail=Expression.LetExpr(mdf=IMM, name=ቛ, value=104.0, boundTo=DotExpression.CallExpr(receiver=ૠ, isLifted=true, methodName=ऽ, arguments=[false]))))})}, main=this)
Program(classDeclarations={ጤ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ጤ, impl=[], extend=[ᣚ᭘႗꤅, ቇ҆], fields={}, methods={}), ೞ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ೞ, impl=[ⴭେ, ષ్, ⅎ, _ೆ], extend=[], fields={ⱄ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ⵯܑ), name=ⱄ), 〳᷶=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=אַ᥍܏ௌೆᩤൃᬷ), name=〳᷶), ﮫ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꬉ), name=ﮫ), Ꚋ၄܏ୣ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ౡ), name=Ꚋ၄܏ୣ)}, methods={})}, main=DotExpression.FieldAccessExpr(receiver=58, fieldName=ꧣ઼྆ූౕ꙯))
Program(classDeclarations={Ⳳ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=Ⳳ, impl=[ꧬᤥ], extend=[], fields={}, methods={}), º=Program.ClassDeclaration(isCapability=true, isInterface=false, name=º, impl=[], extend=[], fields={}, methods={＄=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᳮ), name=＄, expression=Infinity), Ύ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=ꜳ꙯), name=Ύ, expression=this)}), ఎ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ఎ, impl=[], extend=[], fields={വ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ध), name=വ), உ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=J᠌), name=உ)}, methods={ꤜ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=Ꞗ), name=ꤜ, expression=12288.0)})}, main=ᾲ)
Program(classDeclarations={Ὑ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=Ὑ, impl=[ᙽ], extend=[], fields={ꡁ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ᳫ᪇), name=ꡁ), ܐ്=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ᥛ︂۹᪙), name=ܐ്)}, methods={ᝯ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ໜఃﬞ؜), name=ᝯ, expression=501)})}, main=0)
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=〣່ᢩꪰ, args=[]))
Program(classDeclarations={ᢀ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᢀ, impl=[], extend=[], fields={}, methods={}), ᪧັີ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᪧັີ, impl=[], extend=[], fields={}, methods={})}, main=4.0E7)
Program(classDeclarations={}, main=ᜑ)
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=Expression.EmptySignalExpr()))
Program(classDeclarations={〆ၟ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=〆ၟ, impl=[], extend=[], fields={ᲂ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ךּᮤ), name=ᲂ), ᛸ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ៗྗ), name=ᛸ), ఉ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ℑ꫶), name=ఉ), ᅾ᩸ૢ︀꣨=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ສ), name=ᅾ᩸ૢ︀꣨), ֏=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ˤ႘ꪴু), name=֏)}, methods={ᳮ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᚋ), name=ᳮ, expression=1), ᏺᩗ઼਼࣠=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=Ͷૢຼꠣ៣ᨗ⁦), name=ᏺᩗ઼਼࣠, expression=0.0)})}, main=Expression.LetExpr(mdf=IMM, name=ᲀં, value=Expression.EmptySignalExpr(), boundTo=DotExpression.CallExpr(receiver=Expression.HeadExpr(signalExpr=true), isLifted=false, methodName=ῗ්꫁ై, arguments=[])))
Program(classDeclarations={}, main=DotExpression.FieldAssignExpr(receiver=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ℼ, value=Expression.InstantiationExpr(name=ˢ࠘ॢ, args=[this, ඳ]), boundTo=Expression.EmptySignalExpr())), fieldName=ꜜᝲଃ᱄ᜓެ, value=0))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ៗ, value=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=தၩ࡚, value=ꬃ, boundTo=Expression.SignalConstructionExpr(head=DotExpression.CallExpr(receiver=0.7, isLifted=false, methodName=ᨱ, arguments=[41, ]), tail=DotExpression.FieldAssignExpr(receiver=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr()), tail=Expression.LetExpr(mdf=IMM, name=ܦ᪽᪰ૈ, value=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=MUT, name=ەಃୃॉ, value=Expression.LetExpr(mdf=IMM, name=ͳꠧ, value=Expression.EmptySignalExpr(), boundTo=true), boundTo=𑄶\bഒ))), boundTo=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.SignalConstructionExpr(head=, tail=this)))))))), fieldName=ᯎೕ￻꪿ၢ, value=DotExpression.FieldAssignExpr(receiver=true, fieldName=꠸, value=this)))), tail=Expression.TailExpr(signalExpr=ꭓ)), boundTo=5312.0))
Program(classDeclarations={ⶦ፟=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ⶦ፟, impl=[ࡒꫭ, Ⴭ], extend=[], fields={}, methods={Έ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ˇ), name=Έ, expression=ড়ۢ), ⶬ൧=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=Ｇ), name=ⶬ൧, expression=this)})}, main=Expression.HeadExpr(signalExpr=259.375))
Program(classDeclarations={£=Program.ClassDeclaration(isCapability=false, isInterface=true, name=£, impl=[], extend=[ⵘൗꩻેૢ, ךּ, ﮋ꧲ೌ], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=ᛸ, value=70, boundTo=Expression.SignalConstructionExpr(head=, tail=DotExpression.FieldAccessExpr(receiver=ٮ۳᱆, fieldName=ำัै))))
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=this))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=this))))
Program(classDeclarations={}, main=true)
Program(classDeclarations={වংୈ⁠ޯ⃔=Program.ClassDeclaration(isCapability=false, isInterface=true, name=වংୈ⁠ޯ⃔, impl=[], extend=[ำ], fields={}, methods={}), ࡏ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ࡏ, impl=[], extend=[ꫝܑ, ש, ཝ], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=ඎ౩, args=[Expression.InstantiationExpr(name=ꪺ, args=[Expression.InstantiationExpr(name=Εంୈ‌, args=[Expression.HeadExpr(signalExpr=10), 15232.0])]), 0])))
Program(classDeclarations={ﾡ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ﾡ, impl=[], extend=[], fields={}, methods={}), Ⳳ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ⳳ, impl=[ნ, ഽ፞꤁], extend=[], fields={}, methods={ᬲ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ႎ۹ꠣ), name=ᬲ, expression=1), ഽ഼=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=﹩ؚૻၟ⵿ັ᪕), name=ഽ഼, expression=Expression.EmptySignalExpr()), 〇ൢ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᏽ), name=〇ൢ, expression=Expression.SignalConstructionExpr(head=this, tail=true))}), ງ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ງ, impl=[], extend=[ꬉྪً༵, Ωੑ], fields={}, methods={}), h=Program.ClassDeclaration(isCapability=false, isInterface=true, name=h, impl=[], extend=[ଘ, ೱᰧྔ, ᭅ, ˬ], fields={}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=ⴭ)
Program(classDeclarations={ˠ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ˠ, impl=[], extend=[ᮄ], fields={}, methods={}), ⳳೢ়ૣ၈=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⳳೢ়ૣ၈, impl=[], extend=[Ὀ], fields={}, methods={}), ˬ〮ௗ࿆⃬꧐꫁=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ˬ〮ௗ࿆⃬꧐꫁, impl=[], extend=[ኡೖ࡙︊ꠋꢁ, ጶꥒ], fields={}, methods={})}, main=Expression.LetExpr(mdf=READ, name=ₚꙷ, value=10, boundTo=5))
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=ႎౕ꧕ೣஂႅௌ, args=[Expression.EmptySignalExpr()])))
Program(classDeclarations={}, main=)
Program(classDeclarations={ทꫭ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ทꫭ, impl=[], extend=[], fields={ବႇ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᏸৗ), name=ବႇ)}, methods={ꣳ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⅉ), name=ꣳ, expression=this), ⶰ઼້=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ଡ଼ᮂ), name=ⶰ઼້, expression=Expression.LetExpr(mdf=IMM, name=ຄ, value=௹, boundTo=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ꙏ, value=this, boundTo=Expression.EmptySignalExpr()))))})}, main=Expression.HeadExpr(signalExpr=Expression.SignalConstructionExpr(head=ᳫ, tail=DotExpression.CallExpr(receiver=this, isLifted=true, methodName=Ⴙ￺, arguments=[, 98.0, Expression.InstantiationExpr(name=ꬼ, args=[]), Expression.LetExpr(mdf=IMM, name=֏๙ޮ៓܏, value=Expression.EmptySignalExpr(), boundTo=ط), DotExpression.FieldAssignExpr(receiver=true, fieldName=傅, value=0.4)]))))
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr())))
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=this), tail=Expression.InstantiationExpr(name=ꩪ, args=[\00])))
Program(classDeclarations={Ά=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ά, impl=[લึ, µ], extend=[], fields={ꘟ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᚽꩌোႆ੮), name=ꘟ)}, methods={}), ￂಁൗ꛰꯬=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ￂಁൗ꛰꯬, impl=[], extend=[], fields={ᢥॅ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=Ꮗ), name=ᢥॅ), 〵᭱ৗ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ஈࠦৣ), name=〵᭱ৗ)}, methods={})}, main=Expression.InstantiationExpr(name=ᥴׇꧥ, args=[]))
Program(classDeclarations={ᳮૅٖ٘=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᳮૅٖ٘, impl=[], extend=[︳], fields={}, methods={})}, main=Expression.InstantiationExpr(name=ﾎ, args=[Ἕ]))
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ࠤ, args=[]))
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ⴭୗ؁༡ᰭ൭, args=[6, 0.0]))
Program(classDeclarations={ὰൣ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ὰൣ, impl=[], extend=[Ὸ᯳ۛ, ꠊ഼ᨛᨙ], fields={}, methods={})}, main=DotExpression.CallExpr(receiver=4, isLifted=true, methodName=ཁ, arguments=[Expression.TailExpr(signalExpr=true), true, this, 6.0E9, 3810, ﬥ᳢]))
Program(classDeclarations={}, main=ഽ८)
Program(classDeclarations={}, main=DotExpression.CallExpr(receiver=Expression.SignalConstructionExpr(head=15, tail=౗), isLifted=false, methodName=ไ্, arguments=[]))
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=DotExpression.CallExpr(receiver=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=MUT, name=ඍꢁၙ, value=Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=יִ, args=[5])), boundTo=Expression.InstantiationExpr(name=ᾡꨩާ꪿, args=[])), tail=10.0), isLifted=false, methodName=ꪱ, arguments=[Expression.InstantiationExpr(name=ᱴᝳؘູ᠙ົ, args=[])]))
Program(classDeclarations={ꠍ಼ׇ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꠍ಼ׇ, impl=[], extend=[], fields={}, methods={}), ꬫ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꬫ, impl=[], extend=[], fields={}, methods={ℂ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ߺૃ‮), name=ℂ, expression=this), ᥴᜓ۬1ׅ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꓮ), name=ᥴᜓ۬1ׅ, expression=this), ຈ੮=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ၹ), name=ຈ੮, expression=Expression.EmptySignalExpr()), ᛱ࠙=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=ࡉ؀), name=ᛱ࠙, expression=Expression.InstantiationExpr(name=ᏽ᠎, args=[1.1303456413396783E26, \0\137])), ไꩽ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ල), name=ไꩽ, expression=Expression.LetExpr(mdf=IMM, name=ℛ, value=Expression.TailExpr(signalExpr=this), boundTo=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ⶱ, value=Expression.SignalConstructionExpr(head=\r, tail=Expression.EmptySignalExpr()), boundTo=Expression.LetExpr(mdf=IMM, name=ৠꨪັ, value=Expression.InstantiationExpr(name=ᲇ, args=[]), boundTo=Expression.TailExpr(signalExpr=ॿ))))))), ⷎ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ቘꠂ), name=ⷎ, expression=)})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ﶿ꙯ຼ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ﶿ꙯ຼ, impl=[], extend=[ਵׇ], fields={}, methods={})}, main=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=0.3017578125)))))
Program(classDeclarations={ྋ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ྋ, impl=[ﴼ๋, ꭢ], extend=[], fields={ೱᰨ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꬢ), name=ೱᰨ)}, methods={}), ˬ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ˬ, impl=[ℜ, ዃࠩꩌ, ᚵ᜴࡛꧱], extend=[], fields={ᢪ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ৡஂ), name=ᢪ)}, methods={}), ල=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ල, impl=[], extend=[], fields={}, methods={})}, main=ৠ)
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=ᜏৌٛ, args=[0.75])))))
Program(classDeclarations={ꤒ࿆=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꤒ࿆, impl=[], extend=[], fields={}, methods={}), બ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=બ, impl=[], extend=[ￚ੮ֵ, ď, ힶ, ⳬ], fields={}, methods={})}, main=נּ່ꪳ᭰ꦶ᮳ᜒ꠆ාꠦ)
Program(classDeclarations={ᪧ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᪧ, impl=[], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=false, tail=this)), tail=Expression.HeadExpr(signalExpr=this)))
Program(classDeclarations={ﬃ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ﬃ, impl=[], extend=[], fields={}, methods={}), ᚈ༙᪴=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᚈ༙᪴, impl=[], extend=[], fields={}, methods={}), ៛ᰳ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=៛ᰳ, impl=[জඃ, සූﬞ, Ὓ᳔], extend=[], fields={}, methods={}), ݺ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ݺ, impl=[], extend=[], fields={য়=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ˮꙸ), name=য়)}, methods={Ẫ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꜰՙ), name=Ẫ, expression=)}), Ὓ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=Ὓ, impl=[], extend=[], fields={მॣ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ࠤᜳ), name=მॣ), ඊ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ⱗଂ), name=ඊ), ꫴූ᪼ು=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=⁀), name=ꫴූ᪼ು), எ꧗=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ᢛྙൗႏ), name=எ꧗)}, methods={ᜨ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᙰ), name=ᜨ, expression=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=ၰ, args=[]), tail=3673)), ড়=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=false, name=￠༾­), name=ড়, expression=Expression.EmptySignalExpr())})}, main=ㇻ)
Program(classDeclarations={}, main=)
Program(classDeclarations={ᢪ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᢪ, impl=[], extend=[ᦓ], fields={}, methods={})}, main=2176.0)
Program(classDeclarations={ꧼୈ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ꧼୈ, impl=[ₜ, ￠ज़ఁ, ԃ, 퍩ൣᰯ], extend=[], fields={}, methods={ᨐ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=ꟿ), name=ᨐ, expression=DotExpression.FieldAccessExpr(receiver=this, fieldName=ౡᢆ᪒)), ଷ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ⴧ), name=ଷ, expression=DotExpression.CallExpr(receiver=DotExpression.CallExpr(receiver=0.67, isLifted=false, methodName=ܝᮩ਼, arguments=[]), isLifted=false, methodName=ῌꪸ, arguments=[])), ល=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ꧺꠂৣ), name=ល, expression=DotExpression.FieldAssignExpr(receiver=this, fieldName=ᥰ, value=19))}), ૹ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ૹ, impl=[], extend=[Ͷஂ, ᳮ], fields={}, methods={})}, main=Expression.SignalConstructionExpr(head=14, tail=DotExpression.CallExpr(receiver=Expression.SignalConstructionExpr(head=3, tail=false), isLifted=true, methodName=ጯ, arguments=[])))
Program(classDeclarations={ၦ࿆=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ၦ࿆, impl=[], extend=[ৼꠋ], fields={}, methods={}), ￠ৗ়=Program.ClassDeclaration(isCapability=false, isInterface=true, name=￠ৗ়, impl=[], extend=[ງׇ], fields={}, methods={}), յ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=յ, impl=[], extend=[], fields={}, methods={ল੫=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ൟᬸਿ์꯴ᭃ), name=ল੫, expression=Expression.SignalConstructionExpr(head=true, tail=Expression.LetExpr(mdf=IMM, name=ᢀ, value=106, boundTo=Expression.LetExpr(mdf=IMM, name=Ωौೃ๑౯ꯤ௮ꫵ, value=false, boundTo=એె྄࿆))))}), མ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=མ, impl=[], extend=[], fields={}, methods={}), ן=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ן, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.CallExpr(receiver=Expression.TailExpr(signalExpr=ঐ߯ި), isLifted=false, methodName=ﻔ, arguments=[false]))
Program(classDeclarations={ℕ់7=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ℕ់7, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(name=ℤ︯, args=[Expression.TailExpr(signalExpr=0)]))
Program(classDeclarations={Ⴧ꛱ઃ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=Ⴧ꛱ઃ, impl=[എ྇, ಋ಼៧ަ], extend=[], fields={ૹ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ۿ), name=ૹ)}, methods={Ὕٰ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=＿꯬), name=Ὕٰ, expression=\046🛠𛋼঑\03\u5b02🃁)}), ꤚ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꤚ, impl=[], extend=[], fields={}, methods={}), ມ꧙ꫮ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ມ꧙ꫮ, impl=[], extend=[], fields={ⷊָ꣯︥ြූᩙો=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ۯ꩗ᝲཾ்ᬂ਼௹), name=ⷊָ꣯︥ြූᩙો)}, methods={})}, main=Expression.HeadExpr(signalExpr=))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=5120.0)
Program(classDeclarations={}, main=DotExpression.FieldAssignExpr(receiver=this, fieldName=ꣳ, value=ἶ))
Program(classDeclarations={〨ꫬ꤫=Program.ClassDeclaration(isCapability=false, isInterface=true, name=〨ꫬ꤫, impl=[], extend=[], fields={}, methods={})}, main=0.0)
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=ቔ)
Program(classDeclarations={}, main=DotExpression.CallExpr(receiver=this, isLifted=false, methodName=ⁿู, arguments=[]))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=185, tail=true))
Program(classDeclarations={Ë꧵᳹=Program.ClassDeclaration(isCapability=true, isInterface=false, name=Ë꧵᳹, impl=[ὕࠠ], extend=[], fields={}, methods={Ὕ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ゟ), name=Ὕ, expression=241)}), Ⳬ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ⳬ, impl=[], extend=[], fields={}, methods={}), ꪋ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꪋ, impl=[], extend=[], fields={}, methods={})}, main=Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=Ɛ็, value=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=9.0E31), boundTo=), tail=8), tail=Expression.InstantiationExpr(name=〲ഀ۳, args=[Expression.InstantiationExpr(name=φ, args=[])]))))
Program(classDeclarations={}, main=1.6111880540847778E-7)
Program(classDeclarations={ꫂ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꫂ, impl=[], extend=[៛۟, ⅉਁ៝ᝳ, ‿, ວো, ǽ], fields={}, methods={}), ݙ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ݙ, impl=[], extend=[], fields={ꜘෝ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ת꯭ּ᳸), name=ꜘෝ)}, methods={ῶ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ꓩׇ), name=ῶ, expression=DotExpression.FieldAccessExpr(receiver=this, fieldName=ቜ૱ᩲ্)), ಀ꣣ꠋၭ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=௹), name=ಀ꣣ꠋၭ, expression=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=ῴ, args=[Expression.LetExpr(mdf=IMM, name=ቚ, value=0, boundTo=DotExpression.CallExpr(receiver=Expression.HeadExpr(signalExpr=Expression.EmptySignalExpr()), isLifted=false, methodName=ℿ᱈, arguments=[DotExpression.CallExpr(receiver=Expression.SignalConstructionExpr(head=, tail=Ʌੵᤶཱུ), isLifted=true, methodName=ᬆౌ, arguments=[]), Expression.EmptySignalExpr()]))]), tail=Expression.EmptySignalExpr())), ஸ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=MUT, isLifted=false, name=ᴝౖ), name=ஸ, expression=Expression.HeadExpr(signalExpr=true))})}, main=7)
Program(classDeclarations={ꪶ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꪶ, impl=[జୌ, ꬫ, ꣻ, দୈ, ࢶ], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=ᣭ꙯, args=[Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=W)))])))
Program(classDeclarations={ᝁַ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᝁַ, impl=[], extend=[], fields={ˮോ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ￚᤤ), name=ˮോ)}, methods={})}, main=1)
Program(classDeclarations={}, main=DotExpression.CallExpr(receiver=Expression.InstantiationExpr(name=ၐၲ, args=[Expression.SignalConstructionExpr(head=, tail=Expression.LetExpr(mdf=IMM, name=զ, value=𐒠\'\43\uuuE295\b, boundTo=ଟ᪇)), Expression.EmptySignalExpr(), Expression.HeadExpr(signalExpr=1.595073594941899E37)]), isLifted=true, methodName=ਜ਼ౌ, arguments=[true]))
Program(classDeclarations={ⶻ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ⶻ, impl=[], extend=[], fields={ଭᤱ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꭎ), name=ଭᤱ), ঈࣧ꫁=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ꩺ), name=ঈࣧ꫁)}, methods={}), ⳬ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ⳬ, impl=[], extend=[], fields={}, methods={})}, main=ᜣ)
Program(classDeclarations={ꫧ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꫧ, impl=[], extend=[אָ, ଋ, ꠸, 桅, ﯵੁ￹ੇ], fields={}, methods={}), 㶂࡚=Program.ClassDeclaration(isCapability=false, isInterface=false, name=㶂࡚, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=󠄀﹓\365𑌀)
Program(classDeclarations={ግ߲ঁ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ግ߲ঁ, impl=[], extend=[], fields={ﬕ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ເୋ), name=ﬕ), ໆ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ඛ꣡۬), name=ໆ), Ꙭ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Ꞷೣ), name=Ꙭ)}, methods={}), ⅿ⵿=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⅿ⵿, impl=[], extend=[ₕ], fields={}, methods={}), ᦤٰꦀ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᦤٰꦀ, impl=[], extend=[], fields={ਫ਼=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꚏে්), name=ਫ਼)}, methods={})}, main=this)
Program(classDeclarations={ˉ᭬=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ˉ᭬, impl=[], extend=[ۯ], fields={}, methods={}), ߟี=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ߟี, impl=[], extend=[], fields={}, methods={}), ꦉ᥇ٰ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꦉ᥇ٰ, impl=[], extend=[ຍ, ਅ], fields={}, methods={}), ۯ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ۯ, impl=[ၜௗٰ, ມ〭, ำꢁ, Ò], extend=[], fields={ߺ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꞗऺ۪ᷴෝ), name=ߺ)}, methods={})}, main=false)
Program(classDeclarations={ᱏ᯦᳑꯬ౣ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᱏ᯦᳑꯬ౣ, impl=[], extend=[ￂྰ, ꥱ, ｗᬀ⃓ೊဴ໑꘧଼ꪸ᷻؜᷎], fields={}, methods={})}, main=\uu7e0b)
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=true))
Program(classDeclarations={ఽ۪؜ୈꢀ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ఽ۪؜ୈꢀ, impl=[ആᨛ႗ᯬ꘠꫁, ὖ], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=this))
Program(classDeclarations={ၡ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ၡ, impl=[], extend=[], fields={}, methods={}), Ϳ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=Ϳ, impl=[], extend=[], fields={ꤽ಼઼=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ｑ૩ൊఁ⃮ൈ҅), name=ꤽ಼઼), ꬅ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ᨃ), name=ꬅ), ៛ୃ࠭=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=ߡ), name=៛ୃ࠭)}, methods={})}, main=ป)
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=ꬰ⃛ஂ༷ൈ﻿))
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ꫂ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꫂ, impl=[], extend=[ﬥ, ᾉ, ਡູ], fields={}, methods={}), ଐ࡚=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ଐ࡚, impl=[], extend=[], fields={}, methods={ױׄ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᙰ੍ࠛো), name=ױׄ, expression=Expression.InstantiationExpr(name=ఐ­ࠟ꯵੍, args=[]))})}, main=true)
Program(classDeclarations={ࡓ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ࡓ, impl=[], extend=[], fields={}, methods={}), ࠚ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ࠚ, impl=[], extend=[], fields={ᝏෲ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ꩺ࠘꧕꧓ಁۤ), name=ᝏෲ), ௹ࠢੇ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꢆ), name=௹ࠢੇ), ꧤؐംၗ=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=Ό܏ႚ), name=ꧤؐംၗ), ǔ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꤼ), name=ǔ), ᰘ਼=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꬪ), name=ᰘ਼), ዀ৩=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᰏ), name=ዀ৩), ꬡૼ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=G්), name=ꬡૼ)}, methods={}), ﷻ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ﷻ, impl=[ࡢ8], extend=[], fields={}, methods={}), キ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=キ, impl=[], extend=[ꬊ], fields={}, methods={})}, main=0)
Program(classDeclarations={ᶡ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᶡ, impl=[], extend=[], fields={}, methods={})}, main=က)
Program(classDeclarations={﹍ૣੵୢ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=﹍ૣੵୢ, impl=[ᐥ], extend=[], fields={}, methods={ￊ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ၡ), name=ￊ, expression=this), ൎ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ૐၤᷫ), name=ൎ, expression=Expression.HeadExpr(signalExpr=DotExpression.CallExpr(receiver=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=true), tail=Expression.LetExpr(mdf=MUT, name=ꠃాᢩࠗၠ, value=ⵯ, boundTo=0.05)), tail=true), isLifted=true, methodName=ॐ, arguments=[])))}), ꓺ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꓺ, impl=[], extend=[ৎ], fields={}, methods={}), ל=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ל, impl=[], extend=[ᝠ᩹ꠋꩼ゙ೌ៦્ᨙો], fields={}, methods={}), ਲ਼ⷱਃ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ਲ਼ⷱਃ, impl=[], extend=[], fields={ႎ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=Ήੈே), name=ႎ)}, methods={}), ﭻꦻ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ﭻꦻ, impl=[], extend=[], fields={}, methods={})}, main=Expression.TailExpr(signalExpr=ᢂ))
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=20))
Program(classDeclarations={}, main=this)
Program(classDeclarations={Ω=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ω, impl=[], extend=[ﴪ], fields={}, methods={})}, main=true)
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=this)
Program(classDeclarations={ጒ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ጒ, impl=[], extend=[Ͳ, ܡ, Ց], fields={}, methods={}), ㆦ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ㆦ, impl=[], extend=[], fields={}, methods={})}, main=Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=ۮ, args=[])))
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=this)
Program(classDeclarations={﹎ஂ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=﹎ஂ, impl=[], extend=[ꪱ७༷], fields={}, methods={}), 췟=Program.ClassDeclaration(isCapability=true, isInterface=false, name=췟, impl=[Ｓ੭], extend=[], fields={ᢁ઼=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꓬ­ᝳ᳐꣒꫁), name=ᢁ઼), ҡ๎=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ઽ), name=ҡ๎)}, methods={º=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ଳ॑), name=º, expression=𑌄)})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=0)
Program(classDeclarations={}, main=0.04254)
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ㅪై್᳑ꯨূ, value=DotExpression.FieldAssignExpr(receiver=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr()), tail=Expression.InstantiationExpr(name=ⶹ਼ꯣֳ, args=[])), fieldName=ဿ, value=\376), boundTo=Expression.HeadExpr(signalExpr=this)))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=Ⴒ༵ꤪ, value=this, boundTo=false))
Program(classDeclarations={ꣵࠡၘ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꣵࠡၘ, impl=[ਮާ଼݇, ࠤ], extend=[], fields={ჱ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ৼ), name=ჱ), ꢅ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ퟜ), name=ꢅ), ℰଁ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Ｇૈꠋ), name=ℰଁ), ꣽꧥ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ὔᩮꦶ), name=ꣽꧥ), き=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=ༀୈ), name=き), ꧽ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ᢙ), name=ꧽ)}, methods={ᚤ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ຄ), name=ᚤ, expression=\\), Ⅴ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ઐ), name=Ⅴ, expression=62)}), ℨ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ℨ, impl=[ਗ਼, ︴], extend=[], fields={}, methods={ﷲܑ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ட), name=ﷲܑ, expression=ῖ), ꧡ᷿ࠫ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ૐ), name=ꧡ᷿ࠫ, expression=Expression.HeadExpr(signalExpr=બ)), ꛭ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=µ಼⳱ັᯩ়), name=ꛭ, expression=9.0)})}, main=Expression.SignalConstructionExpr(head=false, tail=ⅅ))
Program(classDeclarations={ྈ᥈්=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ྈ᥈්, impl=[], extend=[ﳥ, ฿ၬ۵], fields={}, methods={}), ՙ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ՙ, impl=[ᾎ, ড়ׅ, ퟄಂ, ᱸ, ףּ߫ꩃ], extend=[], fields={}, methods={Ú؜=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꩦ), name=Ú؜, expression=0)}), מּ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=מּ, impl=[], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(head=this, tail=\271\n))
Program(classDeclarations={ಐᰰ્ٰ꤭=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ಐᰰ્ٰ꤭, impl=[], extend=[চঃ២, ͷ, ꭖ], fields={}, methods={})}, main=true)
Program(classDeclarations={}, main=DotExpression.CallExpr(receiver=false, isLifted=true, methodName=ਲ਼, arguments=[Expression.SignalConstructionExpr(head=ꧤၬ, tail=2), ᨐ]))
Program(classDeclarations={}, main=0)
Program(classDeclarations={}, main=this)
Program(classDeclarations={ￅํ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ￅํ, impl=[], extend=[], fields={}, methods={})}, main=true)
Program(classDeclarations={︴‏ୗ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=︴‏ୗ, impl=[], extend=[$, ㅋ, ੳୀୈ, ᚌ, ઽ፝, ண௯ૢ, ꣻ፞, Ⴧ︪], fields={}, methods={})}, main=Expression.LetExpr(mdf=READ, name=ஆ, value=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=0.013671875, tail=5.4E-50), tail=Expression.EmptySignalExpr()), boundTo=false))
Program(classDeclarations={￦꛱=Program.ClassDeclaration(isCapability=true, isInterface=false, name=￦꛱, impl=[ⁿ, ῄ], extend=[], fields={ૡ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꭝං), name=ૡ)}, methods={ꫦ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=ʅ), name=ꫦ, expression=this)})}, main=\04἞\u6678\11඗\70ਲ)
Program(classDeclarations={שּׂॕꤦ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=שּׂॕꤦ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={ႎ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ႎ, impl=[], extend=[ⳇୗූ, ᨨ], fields={}, methods={})}, main=3)
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ￜ, args=[]))
Program(classDeclarations={Ω=Program.ClassDeclaration(isCapability=true, isInterface=false, name=Ω, impl=[], extend=[], fields={ⁱ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=⁀ෙୣ៝), name=ⁱ)}, methods={ﬖ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᝮ), name=ﬖ, expression=Expression.SignalConstructionExpr(head=DotExpression.FieldAssignExpr(receiver=, fieldName=ꬁ, value=Expression.LetExpr(mdf=IMM, name=చ᪃, value=Expression.InstantiationExpr(name=Ⰶ, args=[]), boundTo=0.0)), tail=Expression.EmptySignalExpr())), ྉۧੀ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ﬃ), name=ྉۧੀ, expression=Expression.TailExpr(signalExpr=຦஥)), ᢄূ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᝬ), name=ᢄূ, expression=this)}), ꙧ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ꙧ, impl=[], extend=[], fields={ཟ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ኼᤵ꙯), name=ཟ)}, methods={}), ዹ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ዹ, impl=[], extend=[], fields={}, methods={})}, main=469)
Program(classDeclarations={ⁱ꧗=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⁱ꧗, impl=[], extend=[૱], fields={}, methods={}), ແ༹=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ແ༹, impl=[], extend=[], fields={}, methods={}), ꧽ෬=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꧽ෬, impl=[], extend=[], fields={}, methods={}), ຖ᭔=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ຖ᭔, impl=[], extend=[], fields={︳꛰=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ಏꩌൣ), name=︳꛰), Ὃ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ਤࠢঁႋ), name=Ὃ)}, methods={ସ૿=Program.Method(mdf=MUT, returnType=Program.Type(mdf=READ, isLifted=false, name=ᝨືꠋ઼഻ঁ), name=ସ૿, expression=this)})}, main=false)
Program(classDeclarations={ఽิ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ఽิ, impl=[], extend=[ꫜൢ], fields={}, methods={})}, main=false)
Program(classDeclarations={ଆ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ଆ, impl=[], extend=[], fields={ᳶ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ࡪ೯꪿), name=ᳶ)}, methods={}), ஐ࠘ൢৗี=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ஐ࠘ൢৗี, impl=[], extend=[], fields={}, methods={}), ꤺ۴᮱්ஂऺ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ꤺ۴᮱්ஂऺ, impl=[], extend=[], fields={}, methods={}), ዜ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ዜ, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.FieldAccessExpr(receiver=126, fieldName=ᮉ))
Program(classDeclarations={כּ꯬=Program.ClassDeclaration(isCapability=false, isInterface=true, name=כּ꯬, impl=[], extend=[], fields={}, methods={})}, main=99)
Program(classDeclarations={ൖⷬ߉ꤨ৪=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ൖⷬ߉ꤨ৪, impl=[], extend=[ࠐ᳹], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=READ, name=ॐ, value=DotExpression.FieldAssignExpr(receiver=false, fieldName=ఏ, value=Expression.EmptySignalExpr()), boundTo=DotExpression.CallExpr(receiver=Expression.InstantiationExpr(name=ᝰ, args=[Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=Expression.SignalConstructionExpr(head=\7, tail=Expression.LetExpr(mdf=IMM, name=ௐ, value=this, boundTo=Expression.EmptySignalExpr()))), tail=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr())))]), isLifted=false, methodName=ꘘ્ׁ߫, arguments=[Expression.EmptySignalExpr(), 0.0]))))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=µ, value=2, boundTo=Expression.LetExpr(mdf=IMM, name=ꓞ൫ᤳ, value=1.0E9, boundTo=Expression.EmptySignalExpr())))
Program(classDeclarations={ව﻿༹=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ව﻿༹, impl=[], extend=[য়], fields={}, methods={})}, main=ஆ)
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=﹎, value=Expression.LetExpr(mdf=IMM, name=ꚇ, value=Expression.TailExpr(signalExpr=DotExpression.FieldAssignExpr(receiver=៛꙯, fieldName=ꙿৄ​, value=DotExpression.CallExpr(receiver=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr()), isLifted=false, methodName=갧ୗ, arguments=[]))), boundTo=Expression.LetExpr(mdf=IMM, name=ൠં̿܏ၢ, value=DotExpression.CallExpr(receiver=DotExpression.CallExpr(receiver=Expression.TailExpr(signalExpr=DotExpression.CallExpr(receiver=Expression.SignalConstructionExpr(head=this, tail=Expression.HeadExpr(signalExpr=this)), isLifted=true, methodName=ৼᤴ᪱, arguments=[])), isLifted=true, methodName=Й, arguments=[, Expression.InstantiationExpr(name=ˆ྇ើૃ, args=[Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=12.0, tail=this)), ]), Expression.HeadExpr(signalExpr=true)]), isLifted=true, methodName=j᪅, arguments=[this, Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=MUT, name=Ὶ, value=false, boundTo=1))]), boundTo=DotExpression.CallExpr(receiver=Expression.HeadExpr(signalExpr=), isLifted=false, methodName=ₗ, arguments=[6]))), boundTo=true))
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=true)
Program(classDeclarations={ℾং়༵ꯪྕ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ℾং়༵ꯪྕ, impl=[], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=ລ߀্⃧७, args=[6]), tail=2))
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ꤖ, value=this, boundTo=this)))
Program(classDeclarations={}, main=)
Program(classDeclarations={調ᩱ๙=Program.ClassDeclaration(isCapability=false, isInterface=true, name=調ᩱ๙, impl=[], extend=[], fields={}, methods={}), ᴼ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᴼ, impl=[], extend=[], fields={}, methods={ﷵ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ઞ᳒), name=ﷵ, expression=Expression.EmptySignalExpr())})}, main=ͳ፝)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=DotExpression.FieldAssignExpr(receiver=Ⲝ, fieldName=ꥵ, value=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ኅ, value=this, boundTo=2066432.0)))))
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ᲆ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᲆ, impl=[], extend=[], fields={}, methods={ࠚ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=MUT, isLifted=false, name=ຽ꠆ঃ), name=ࠚ, expression=this)})}, main=Expression.LetExpr(mdf=CAPSULE, name=כּ, value=this, boundTo=Infinity))
Program(classDeclarations={}, main=true)
Program(classDeclarations={ݘ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ݘ, impl=[], extend=[], fields={}, methods={}), Ⅿ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ⅿ, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.CallExpr(receiver=1, isLifted=false, methodName=ຈׇⷽ, arguments=[Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ॠ, value=this, boundTo=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=＿, args=[])))))]))
Program(classDeclarations={ຖ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ຖ, impl=[], extend=[௹], fields={}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ଽ, args=[]))
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=9.5)
Program(classDeclarations={}, main=7436.0)
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ᦫံᮀ꧳౧߁ૄో, value=Expression.TailExpr(signalExpr=\046), boundTo=true))
Program(classDeclarations={}, main=this)
Program(classDeclarations={ਲিັ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ਲিັ, impl=[], extend=[], fields={}, methods={})}, main=0.0)
Program(classDeclarations={}, main=)
Program(classDeclarations={ዎᮥ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ዎᮥ, impl=[ꣴྕ], extend=[], fields={}, methods={})}, main=0)
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=6))
Program(classDeclarations={ચꫬ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ચꫬ, impl=[¢, Ἒ], extend=[], fields={}, methods={ꫛ؜=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=ଳ᥇), name=ꫛ؜, expression=true)}), ਜ਼゚=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ਜ਼゚, impl=[], extend=[], fields={}, methods={ᏻᝓ༿=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ຄ8), name=ᏻᝓ༿, expression=ܧ), ὓ༿ꪰ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=Ⴭ), name=ὓ༿ꪰ, expression=ヷ), ۼ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ℕ᳒ꯧ), name=ۼ, expression=this), ꩂꩌ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ળ), name=ꩂꩌ, expression=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ቾ०ᨛ, value=this, boundTo=Expression.LetExpr(mdf=IMM, name=Όꧥ, value=Expression.HeadExpr(signalExpr=DotExpression.CallExpr(receiver=6, isLifted=true, methodName=ⁱⷹ­፞, arguments=[Expression.InstantiationExpr(name=ຝࠧၫ, args=[Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=ൡ꤆౩၀⃐, args=[]))])])), boundTo=DotExpression.FieldAssignExpr(receiver=1.6940658945086007E-21, fieldName=ˮ൭2, value=Expression.LetExpr(mdf=CAPSULE, name=ꮗ, value=Expression.InstantiationExpr(name=ຢ꣔ަຼ, args=[Expression.EmptySignalExpr()]), boundTo=0)))))))})}, main=13)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=this), tail=DotExpression.FieldAccessExpr(receiver=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=Ⴧ, args=[]), tail=Expression.InstantiationExpr(name=ᬋ꩖, args=[true, true, Expression.InstantiationExpr(name=ⁿ, args=[0]), লௗ])), fieldName=ꤟᝒූ)))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=གྷ, value=this, boundTo=this))
Program(classDeclarations={מּෛ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=מּෛ, impl=[Ⳮٰ, ￠, ᳯ, ૹꯨၖ, ᦲ଼], extend=[], fields={}, methods={ᾣ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=￠ֹࠜ), name=ᾣ, expression=DotExpression.FieldAccessExpr(receiver=, fieldName=ꘪ))}), ੴ᭖ࠗ૿ꨬ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ੴ᭖ࠗ૿ꨬ, impl=[ⵯ, ມ้ᬄ, ￡, ਆ઼ၭૌ͒], extend=[], fields={એ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ສ), name=એ)}, methods={ဿ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ઽ), name=ဿ, expression=)}), ⷍ᠙=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⷍ᠙, impl=[], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(head=, tail=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=Åꤧ, args=[Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ፖ, value=3413.0, boundTo=Expression.LetExpr(mdf=MUT, name=ᚪం, value=true, boundTo=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=2), tail=203.8125), tail=0)))), Ꙓ, Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=＄, args=[])), tail=)])))))
Program(classDeclarations={ខ꯱=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ខ꯱, impl=[ຽ, ຣꧥ៝], extend=[], fields={}, methods={ⷍྎ᷾ื=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ຄ), name=ⷍྎ᷾ื, expression=Expression.SignalConstructionExpr(head=this, tail=Expression.LetExpr(mdf=IMM, name=Ῑ, value=true, boundTo=Expression.EmptySignalExpr())))})}, main=3)
Program(classDeclarations={ೠ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ೠ, impl=[], extend=[Ӿ᭘ྀ], fields={}, methods={}), ၰ꯭8=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ၰ꯭8, impl=[ಏ], extend=[], fields={}, methods={ᢣ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ච), name=ᢣ, expression=false), ୟᮤ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ℂ), name=ୟᮤ, expression=Expression.LetExpr(mdf=IMM, name=ⴧ, value=, boundTo=DotExpression.CallExpr(receiver=DotExpression.CallExpr(receiver=Expression.HeadExpr(signalExpr=this), isLifted=false, methodName=ιೇ, arguments=[164, true, Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ꦱื‏, value=false, boundTo=DotExpression.FieldAccessExpr(receiver=Expression.TailExpr(signalExpr=0.015625), fieldName=ၡ))), ꩚\u71D0, Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=ༀ, args=[Expression.InstantiationExpr(name=ᏺ, args=[Expression.EmptySignalExpr()])])), this]), isLifted=true, methodName=Ꞡꙻ, arguments=[]))), ᢥ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ဤ), name=ᢥ, expression=2), ὒꦃ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ゟᢆ), name=ὒꦃ, expression=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=DotExpression.CallExpr(receiver=\41, isLifted=false, methodName=ᱠ้, arguments=[Expression.SignalConstructionExpr(head=true, tail=Expression.EmptySignalExpr())])), tail=Expression.LetExpr(mdf=IMM, name=ꬃ᜴ؒ, value=0.0, boundTo=this)))}), ꘪ༘꣪=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꘪ༘꣪, impl=[ถ], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(head=this, tail=Expression.TailExpr(signalExpr=0)))
Program(classDeclarations={í᠙ோ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=í᠙ோ, impl=[Ὑ], extend=[], fields={ໜ܏=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ຯ), name=ໜ܏)}, methods={}), ꪽ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꪽ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=ᮮ‮ꨴ, value=false, boundTo=DotExpression.CallExpr(receiver=Expression.InstantiationExpr(name=ਵ᪓ಾಂ, args=[]), isLifted=false, methodName=ኋ, arguments=[])))
Program(classDeclarations={ὒ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ὒ, impl=[], extend=[], fields={}, methods={}), Ｖ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ｖ, impl=[], extend=[], fields={ଳ᪵=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ῂ҃໘), name=ଳ᪵), ￇଂึ༡=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꪵ), name=ￇଂึ༡), ᕫ̰ං=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ᭇ), name=ᕫ̰ං)}, methods={})}, main=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ꫲ᭱, value=3.9631676720860365E17, boundTo=0)))
Program(classDeclarations={ⁿ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ⁿ, impl=[], extend=[], fields={ܚ໋᠒=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ۯۣۨ), name=ܚ໋᠒)}, methods={})}, main=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ᳬෲ܏୩⳱, value=33, boundTo=DotExpression.FieldAssignExpr(receiver=DotExpression.CallExpr(receiver=Expression.EmptySignalExpr(), isLifted=true, methodName=י꫶ִ꙯೫, arguments=[1.05553116266496E15, false, 6.5185151242703555E91, 0.0, \b\"]), fieldName=ൎ, value=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=﹩, args=[]), tail=Expression.LetExpr(mdf=IMM, name=ៗೣ, value=Expression.EmptySignalExpr(), boundTo=DotExpression.FieldAssignExpr(receiver=0, fieldName=ᢪۛ, value=false)))))))
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=Ά̯ꚞિൌ, args=[]))
Program(classDeclarations={〣ᩘ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=〣ᩘ, impl=[], extend=[], fields={}, methods={}), ग़ஂ꤬ꨵ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ग़ஂ꤬ꨵ, impl=[], extend=[], fields={}, methods={ￜ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=৲ो゙៣), name=ￜ, expression=true)}), ힲ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ힲ, impl=[], extend=[], fields={}, methods={ఽົ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=םަ), name=ఽົ, expression=DotExpression.CallExpr(receiver=ᲄ, isLifted=false, methodName=ꟼ, arguments=[]))}), Ñूⷸ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ñूⷸ, impl=[], extend=[], fields={}, methods={ಎ଼=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ՙ), name=ಎ଼, expression=DotExpression.FieldAssignExpr(receiver=true, fieldName=ࢫุꙴ, value=ὖ၆))}), ꤖ࠙ం=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ꤖ࠙ం, impl=[], extend=[], fields={}, methods={爛ࠝ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=ၡ‌), name=爛ࠝ, expression=\156), ⴭ­=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ܐ), name=ⴭ­, expression=Expression.EmptySignalExpr()), ⷌᩮׄ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᡅ), name=ⷌᩮׄ, expression=ꫴ), ऽ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=ﬨੵி᳷), name=ऽ, expression=this)}), נּᤦ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=נּᤦ, impl=[], extend=[], fields={}, methods={}), ᙺ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᙺ, impl=[], extend=[], fields={}, methods={ಐ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=ꣲ഻), name=ಐ, expression=30), ۄ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꭠꪰ), name=ۄ, expression=Expression.LetExpr(mdf=IMM, name=ℇࠣෳ⵿, value=Expression.EmptySignalExpr(), boundTo=Expression.EmptySignalExpr())), ᚅ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⷊ), name=ᚅ, expression=0.008), Ὺ᭯᳑=Program.Method(mdf=READ, returnType=Program.Type(mdf=READ, isLifted=false, name=ቘ), name=Ὺ᭯᳑, expression=Expression.SignalConstructionExpr(head=, tail=Expression.EmptySignalExpr())), ౙ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=Ⴧ), name=ౙ, expression=2400.0), Ὃ᳢੍᭲꧘=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ຳ), name=Ὃ᳢੍᭲꧘, expression=Expression.SignalConstructionExpr(head=ꮞ༘, tail=ˋ)), ಶ᳤⁪=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ܐ), name=ಶ᳤⁪, expression=0.08203125)}), יִ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=יִ, impl=[ఽꩌ], extend=[], fields={ྉ=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ᜡ﻿ᝳ꛱ౣ), name=ྉ)}, methods={}), K໕=Program.ClassDeclaration(isCapability=false, isInterface=false, name=K໕, impl=[], extend=[], fields={}, methods={ߴੵ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ૐ), name=ߴੵ, expression=Expression.InstantiationExpr(name=ᪧ꠆, args=[Expression.LetExpr(mdf=IMM, name=ଧ, value=Expression.LetExpr(mdf=IMM, name=ᛖ, value=Expression.EmptySignalExpr(), boundTo=Expression.TailExpr(signalExpr=𞄰𖼀\u1Ef3\22\61\f𞹌\")), boundTo=Expression.HeadExpr(signalExpr=Expression.EmptySignalExpr()))])), ⅇ༷=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ၚ), name=ⅇ༷, expression=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=טּ, value=Expression.InstantiationExpr(name=ₒ, args=[]), boundTo=true), tail=false)), ઽၪ⁪ൊ᷼=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ኵ), name=ઽၪ⁪ൊ᷼, expression=true), ㆯ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=Ꭵ), name=ㆯ, expression=0)})}, main=Expression.LetExpr(mdf=CAPSULE, name=ᮯ಼꛱ᩧ, value=3, boundTo=Expression.EmptySignalExpr()))
Program(classDeclarations={}, main=320.0)
Program(classDeclarations={ゟ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ゟ, impl=[], extend=[], fields={}, methods={ਬ੩ౖ꫁=Program.Method(mdf=MUT, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=৻), name=ਬ੩ౖ꫁, expression=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=5), tail=)), เ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=அّৢ), name=เ, expression=Expression.EmptySignalExpr()), ꬌ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ꪹ᳹️ࠖꤪ෫), name=ꬌ, expression=Expression.LetExpr(mdf=IMM, name=Ⅳ, value=ຄ, boundTo=ᙿ))})}, main=Expression.TailExpr(signalExpr=0.6))
Program(classDeclarations={ℿ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ℿ, impl=[], extend=[ℒ, ꢲ], fields={}, methods={})}, main=Expression.InstantiationExpr(name=ஐֿ, args=[]))
Program(classDeclarations={}, main=ಆ)
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ᨥ, value=DotExpression.CallExpr(receiver=Expression.EmptySignalExpr(), isLifted=false, methodName=ⶕၘ, arguments=[]), boundTo=false))
Program(classDeclarations={}, main=true)
Program(classDeclarations={ℇౕௗ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ℇౕௗ, impl=[], extend=[ᣖꩽၲ], fields={}, methods={}), ࢱ꣘⃥༹=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ࢱ꣘⃥༹, impl=[], extend=[], fields={}, methods={})}, main=0.0)
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ຄ᠖ு, args=[]))
Program(classDeclarations={ꯓ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꯓ, impl=[], extend=[], fields={}, methods={}), כ᜴꯭ּးௌ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=כ᜴꯭ּးௌ, impl=[ꡍාၙ, ᳯഁൣ, ୟ߂, ㇼ༷᳷], extend=[], fields={}, methods={ℂ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=婢ੌ௪ۨ), name=ℂ, expression=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=︳᭫ೃꩌ, args=[Expression.EmptySignalExpr()]), tail=false))})}, main=Expression.InstantiationExpr(name=ꠉ, args=[ힶླྀ, ᯛࠜ᥋, true]))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=false)))
Program(classDeclarations={}, main=\44)
Program(classDeclarations={হ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=হ, impl=[], extend=[], fields={ˈ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=Ꝕుৢࣔᤵٰ), name=ˈ), ৎୢั=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ಮ), name=ৎୢั), ꧯ꯵꧀=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ສ), name=ꧯ꯵꧀)}, methods={ꬋ৭=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ວ), name=ꬋ৭, expression=50.0)}), ヾ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ヾ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={ຈ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ຈ, impl=[], extend=[], fields={}, methods={}), ￦േ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=￦േ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=ﭝ⃘, args=[])), tail=)))
Program(classDeclarations={ລ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ລ, impl=[], extend=[], fields={}, methods={})}, main=2.886310394329927E25)
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ￒ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ￒ, impl=[], extend=[], fields={}, methods={}), ι༠ꥋෲ᭲=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ι༠ꥋෲ᭲, impl=[ꜚ], extend=[], fields={}, methods={})}, main=false)
Program(classDeclarations={E=Program.ClassDeclaration(isCapability=false, isInterface=true, name=E, impl=[], extend=[ꪱೊꫫ, ᳩ], fields={}, methods={}), એ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=એ, impl=[], extend=[], fields={}, methods={ኌ⁫ᯫ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ྊಂ), name=ኌ⁫ᯫ, expression=DotExpression.CallExpr(receiver=DotExpression.CallExpr(receiver=ˮ഼੯ం, isLifted=true, methodName=ۻꯨ, arguments=[59903, ᡛ]), isLifted=false, methodName=ⷕ, arguments=[])), ⶒꢿ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ꚗ⃯), name=ⶒꢿ, expression=Expression.InstantiationExpr(name=ড়፞￹ൣ, args=[this]))})}, main=\16)
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(receiver=ª, fieldName=ಎꯦั))
Program(classDeclarations={దꙻੁ꙯េꫵ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=దꙻੁ꙯េꫵ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=֏ׅোਁ, value=Expression.LetExpr(mdf=IMM, name=ᦝ߁, value=3, boundTo=DotExpression.FieldAccessExpr(receiver=Expression.EmptySignalExpr(), fieldName=ጯ)), boundTo=DotExpression.CallExpr(receiver=3892192.0, isLifted=false, methodName=ˢ, arguments=[\r, Expression.InstantiationExpr(name=ဿ, args=[true])])))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ᨍ්᪲, value=Expression.InstantiationExpr(name=ཅᢅ, args=[0.36328125, \"\02]), boundTo=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=5), tail=Expression.LetExpr(mdf=READ, name=ⴧੑᷤׄ, value=DotExpression.CallExpr(receiver=false, isLifted=false, methodName=ퟵ, arguments=[]), boundTo=Expression.LetExpr(mdf=IMM, name=ⅅ⃬, value=Expression.InstantiationExpr(name=ൔ, args=[]), boundTo=Expression.LetExpr(mdf=IMM, name=Ⴧᜲ, value=DotExpression.CallExpr(receiver=Expression.HeadExpr(signalExpr=DotExpression.FieldAssignExpr(receiver=false, fieldName=ꧢ, value=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr()))), isLifted=true, methodName=ᳵꠋ, arguments=[]), boundTo=6.8))))))
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ਭꪾുꪰꢁ︌, args=[DotExpression.CallExpr(receiver=Expression.SignalConstructionExpr(head=0.0, tail=$), isLifted=false, methodName=ￜ, arguments=[Expression.LetExpr(mdf=MUT, name=ª꤇ੑ, value=8.796093022208E12, boundTo=ປᮀൈꢵ)])]))
Program(classDeclarations={ᝄ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᝄ, impl=[ஃ], extend=[], fields={ࢱ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᝥූ), name=ࢱ), ꔛ઼=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=Љ), name=ꔛ઼), ಶ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ઑ), name=ಶ)}, methods={})}, main=16)
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=this))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ઈޯ, value=\41\", boundTo=Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=Ί୦ᢆ, args=[Expression.TailExpr(signalExpr=Expression.EmptySignalExpr()), Expression.LetExpr(mdf=IMM, name=ྊ্ை, value=this, boundTo=Expression.LetExpr(mdf=IMM, name=ﬅ, value=Expression.LetExpr(mdf=IMM, name=ⵒൗ૪ׇਁ૮‎, value=\"኉𐿠, boundTo=\t᨞), boundTo=9470000.0))]))))
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ޱﬞఀ᳣ୄ᪸, args=[Expression.LetExpr(mdf=IMM, name=ºꩃ, value=Expression.TailExpr(signalExpr=DotExpression.CallExpr(receiver=Expression.HeadExpr(signalExpr=Expression.EmptySignalExpr()), isLifted=true, methodName=ଳ൮, arguments=[])), boundTo=0)]))
Program(classDeclarations={}, main=0)
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=5.7E-51))
Program(classDeclarations={ⷆ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ⷆ, impl=[], extend=[], fields={}, methods={ῑ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ᝈꢀ), name=ῑ, expression=𞹥), ꟽ᱉=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ޱ̾), name=ꟽ᱉, expression=Expression.TailExpr(signalExpr=))})}, main=this)
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ꠁृ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꠁृ, impl=[], extend=[], fields={ￂ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=կ֔), name=ￂ), ൎಃၢ᭬ௗ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ߐ), name=ൎಃၢ᭬ௗ), ﶶ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=শ༷ূ࿆), name=ﶶ), ᬇ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=￡), name=ᬇ), ꩊ྆=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Ⳃ), name=ꩊ྆)}, methods={}), ꥮ୍=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꥮ୍, impl=[], extend=[], fields={}, methods={})}, main=סּ)
Program(classDeclarations={ㆺꨶ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ㆺꨶ, impl=[ៜ, ഽⷶ], extend=[], fields={₪ႜ઼᷻=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ۿၱ৪〪ꠦ), name=₪ႜ઼᷻), ⳙັꥊ=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ಸ), name=ⳙັꥊ)}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ୡ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ୡ, impl=[ﷴ, ཁ], extend=[], fields={}, methods={}), ລ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ລ, impl=[], extend=[ﵠ, ቘၧ꩒ৗ], fields={}, methods={}), ஹ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ஹ, impl=[], extend=[], fields={}, methods={ௐൣ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ଲ), name=ௐൣ, expression=false), ਗ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꣻౌꠣ), name=ਗ, expression=Expression.HeadExpr(signalExpr=ఎప)), ꕱা=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꤒ), name=ꕱা, expression=false), Ⳮ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ŧ), name=Ⳮ, expression=Expression.InstantiationExpr(name=ᝏ, args=[]))})}, main=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=true)), tail=true), tail=ￍ౦), tail=DotExpression.CallExpr(receiver=this, isLifted=false, methodName=檬ᯭ, arguments=[Expression.SignalConstructionExpr(head=DotExpression.FieldAccessExpr(receiver=this, fieldName=ꦛ), tail=20.0), false, DotExpression.CallExpr(receiver=this, isLifted=true, methodName=ૡ༹൧ޯី, arguments=[]), DotExpression.FieldAssignExpr(receiver=Expression.InstantiationExpr(name=ຽ๐ꫫഁॕ, args=[Expression.EmptySignalExpr()]), fieldName=〵, value=Expression.LetExpr(mdf=IMM, name=ª, value=true, boundTo=𞅊𐒞\u7C22))])))
Program(classDeclarations={ၡ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ၡ, impl=[], extend=[], fields={全=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ౠ߭꣭), name=全), ಧᳳᭃ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᳶ), name=ಧᳳᭃ), ಶ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꘫ໋￺ꪲꩼ), name=ಶ)}, methods={}), 〴=Program.ClassDeclaration(isCapability=false, isInterface=false, name=〴, impl=[ףּ꫁ᜒෟ‎], extend=[], fields={ૠೌ꧐=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꣽൢꯦ꯭), name=ૠೌ꧐)}, methods={ળྀ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᠴ), name=ળྀ, expression=Expression.EmptySignalExpr())}), ͼ꛰ັ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ͼ꛰ັ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=நંᮀ)
Program(classDeclarations={}, main=0.0)
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=ℏ, args=[])))
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=true))
Program(classDeclarations={ꜘ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ꜘ, impl=[זּ, ꠸, ꗋ], extend=[], fields={}, methods={}), ቚ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ቚ, impl=[ਈ, ະ, ⶄᰲෳ], extend=[], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=ݯౣ­, value=ൠೣꥍ᧒াꨳ⁩༡឵, boundTo=this))
Program(classDeclarations={}, main=DotExpression.CallExpr(receiver=87104.0, isLifted=false, methodName=ꧢ, arguments=[Expression.HeadExpr(signalExpr=0.90234375)]))
Program(classDeclarations={ꭞ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꭞ, impl=[], extend=[ῡᮀ۰, ℬ], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=Expression.EmptySignalExpr()))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=Expression.HeadExpr(signalExpr=DotExpression.CallExpr(receiver=1, isLifted=true, methodName=ୠ᳒؜ꤪ〪ా, arguments=[this]))))
Program(classDeclarations={ጓ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ጓ, impl=[], extend=[], fields={ኼׅ᳹=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ⵔ), name=ኼׅ᳹)}, methods={ఈ۫ঃꠂ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=けูꩃૺ), name=ఈ۫ঃꠂ, expression=true)}), ࡄ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ࡄ, impl=[ꩅ៤ꢾ൧ֿ᧐], extend=[], fields={}, methods={}), ᄅ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᄅ, impl=[], extend=[], fields={}, methods={}), ૱‪=Program.ClassDeclaration(isCapability=false, isInterface=false, name=૱‪, impl=[ಇ], extend=[], fields={ᢙૉ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ਵ਼៝), name=ᢙૉ)}, methods={ᤗᝒ໗ోೆ۬୭ꯤ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ಇ), name=ᤗᝒ໗ోೆ۬୭ꯤ, expression=DotExpression.FieldAssignExpr(receiver=Expression.HeadExpr(signalExpr=this), fieldName=ଫ, value=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=MUT, name=eි, value=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=0.9), tail=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=ငં࿆ේ)), tail=Expression.HeadExpr(signalExpr=຾ￊ\uC8E3))), boundTo=Expression.SignalConstructionExpr(head=DotExpression.FieldAssignExpr(receiver=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.SignalConstructionExpr(head=DotExpression.FieldAccessExpr(receiver=0.0, fieldName=ଭᩚ), tail=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=true), tail=9.28369140625)))), fieldName=ࢽഃ, value=Expression.TailExpr(signalExpr=0)), tail=Expression.LetExpr(mdf=READ, name=ഓྔ؂, value=, boundTo=this))), tail=Expression.HeadExpr(signalExpr=DotExpression.FieldAssignExpr(receiver=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr()), fieldName=దౢ, value=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=))))))), ⅆึ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ℕ), name=ⅆึ, expression=Expression.InstantiationExpr(name=ˬ, args=[Expression.SignalConstructionExpr(head=DotExpression.CallExpr(receiver=𐨶, isLifted=true, methodName=ە໌, arguments=[]), tail=Expression.EmptySignalExpr()), \', Expression.LetExpr(mdf=IMM, name=ᛮ, value=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=CAPSULE, name=ᭅ⃡ੵാ, value=DotExpression.CallExpr(receiver=ꙁ, isLifted=false, methodName=ᦶ, arguments=[Expression.LetExpr(mdf=IMM, name=ટႜ, value=DotExpression.FieldAssignExpr(receiver=0, fieldName=x, value=Expression.InstantiationExpr(name=Ａ, args=[])), boundTo=Expression.EmptySignalExpr())]), boundTo=20.0), tail=Expression.LetExpr(mdf=CAPSULE, name=Ό༙, value=0.5, boundTo=this)), boundTo=false)]))}), פּౕ۪=Program.ClassDeclaration(isCapability=false, isInterface=true, name=פּౕ۪, impl=[], extend=[￠ଁ꪿, ꬎᰶꠤ〭ಂ, ＿ᤲ], fields={}, methods={})}, main=6)
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=0))
Program(classDeclarations={}, main=255)
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ф݂ⷱ, value=৲, boundTo=Expression.HeadExpr(signalExpr=false)))
Program(classDeclarations={ག᭙ॅ︆=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ག᭙ॅ︆, impl=[], extend=[], fields={ອ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=Ʞᳲ᳸), name=ອ)}, methods={}), Ճ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ճ, impl=[], extend=[], fields={}, methods={}), ᛵ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᛵ, impl=[], extend=[], fields={}, methods={}), ௹ୌ҆ᬶ〬=Program.ClassDeclaration(isCapability=true, isInterface=false, name=௹ୌ҆ᬶ〬, impl=[ⷞ, ꭋೖꧥ, ＿߃ੂﬞॢ, ਫ਼, ꫀັ࿆ৢ], extend=[], fields={ࡐ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ㆱ), name=ࡐ), ⶫୈৗ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ज़༹ಿ), name=ⶫୈৗ)}, methods={})}, main=Expression.InstantiationExpr(name=ꡳ᮹ೆ꯭꠆9, args=[]))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=this, tail=ⁿ⁩௬౧))
Program(classDeclarations={ՙ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ՙ, impl=[], extend=[ℙ܏ᮀ᥍, ꫤ᮴ົ‭], fields={}, methods={})}, main=ꠃ)
Program(classDeclarations={ಽﬞ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ಽﬞ, impl=[ଵ], extend=[], fields={ಽ௯=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=Çᮩ), name=ಽ௯), ⷓ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=தۨ), name=ⷓ), ꧽେ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᚰ়᷿ූ༩), name=ꧽେ)}, methods={})}, main=Expression.TailExpr(signalExpr=this))
Program(classDeclarations={ᭈ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᭈ, impl=[õ​҃], extend=[], fields={}, methods={ਠෲ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ঋ), name=ਠෲ, expression=25), ཅ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᱍૣ), name=ཅ, expression=W), ς౯ࠧ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=Ὁௗ‎ৢ), name=ς౯ࠧ, expression=Expression.EmptySignalExpr()), य़=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=false, name=נ්ּ), name=य़, expression=DotExpression.CallExpr(receiver=0, isLifted=false, methodName=ౘ३ꪸ, arguments=[]))}), ௐ࡛=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ௐ࡛, impl=[⁔࿆ܸ], extend=[], fields={ఐ꙯ो൨ᨚ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ᛈႊ), name=ఐ꙯ो൨ᨚ), º=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ῇ), name=º)}, methods={ៗ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᝥऻׄᝳ႕ᯩ୍ৌੁꦵౢ۴), name=ៗ, expression=DotExpression.CallExpr(receiver=0, isLifted=true, methodName=יִ༘, arguments=[]))})}, main=Expression.LetExpr(mdf=IMM, name=എౣ, value=\\𞥚, boundTo=this))
Program(classDeclarations={}, main=2.0E60)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=0), tail=DotExpression.FieldAssignExpr(receiver=Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=13.0, tail=this)), fieldName=ຯ, value=Expression.HeadExpr(signalExpr=402))))
Program(classDeclarations={參=Program.ClassDeclaration(isCapability=false, isInterface=true, name=參, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ﬀ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ﬀ, impl=[], extend=[], fields={ᨋ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ୱ), name=ᨋ)}, methods={ಠં=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꘪ), name=ಠં, expression=Expression.SignalConstructionExpr(head=, tail=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=ｉ))))}), 䁩៝=Program.ClassDeclaration(isCapability=false, isInterface=true, name=䁩៝, impl=[], extend=[ଢ, ゾ, ၾႝ], fields={}, methods={})}, main=716.0)
Program(classDeclarations={}, main=0.0)
Program(classDeclarations={}, main=8)
Program(classDeclarations={}, main=Infinity)
Program(classDeclarations={}, main=6)
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=Ꮎ, args=[]))
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ྌ, args=[]))
Program(classDeclarations={}, main=¥ั)
Program(classDeclarations={}, main=DotExpression.CallExpr(receiver=Expression.EmptySignalExpr(), isLifted=true, methodName=ꪵ༹༹⃡, arguments=[]))
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=Expression.SignalConstructionExpr(head=this, tail=Expression.InstantiationExpr(name=ௐ, args=[]))))
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=true)
Program(classDeclarations={ꩺ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ꩺ, impl=[], extend=[], fields={ᛶ꫁=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ῆ￹), name=ᛶ꫁)}, methods={ຣ᪙⃗ྚ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ቛꦀꙴං᮲ׁૉૌ), name=ຣ᪙⃗ྚ, expression=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=〢ࣻ, args=[]), tail=Expression.LetExpr(mdf=IMM, name=ૠ, value=Expression.EmptySignalExpr(), boundTo=this))), ૐେ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ퟃͭৌৣۧਁ), name=ૐେ, expression=Expression.InstantiationExpr(name=ᲃ, args=[]))})}, main=Expression.InstantiationExpr(name=Ⳳ؀, args=[]))
Program(classDeclarations={}, main=ⶣ१ௌే)
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ὗ᳸, value=this, boundTo=Expression.LetExpr(mdf=IMM, name=ᣳ, value=ꟽ, boundTo=Expression.LetExpr(mdf=IMM, name=釵, value=Expression.InstantiationExpr(name=ꫴ, args=[Expression.TailExpr(signalExpr=true), this, DotExpression.FieldAssignExpr(receiver=this, fieldName=ᬕ, value=Expression.SignalConstructionExpr(head=true, tail=)), this, Expression.HeadExpr(signalExpr=Expression.EmptySignalExpr())]), boundTo=Expression.LetExpr(mdf=MUT, name=סּऺ⳯ᩕꨪ゙, value=Expression.EmptySignalExpr(), boundTo=DotExpression.FieldAccessExpr(receiver=0, fieldName=ꏴ))))))
Program(classDeclarations={}, main=\u48A8)
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ꠅꠦൃ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꠅꠦൃ, impl=[], extend=[Ⴧ, ଖॣৣ፝], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=𐇐)
Program(classDeclarations={ఛ⵿꙯᪀=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ఛ⵿꙯᪀, impl=[], extend=[ￛੈ, கೌ], fields={}, methods={})}, main=this)
Program(classDeclarations={ꙏᢩ꯹ᝒ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꙏᢩ꯹ᝒ, impl=[], extend=[], fields={}, methods={}), ணୣ꠆=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ணୣ꠆, impl=[], extend=[ত୧], fields={}, methods={}), ꤍ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꤍ, impl=[], extend=[ꭟ, ￥, યើ⁢], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=ഹࠦ, value=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=3)), boundTo=એꠋ))
Program(classDeclarations={ⅉ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ⅉ, impl=[], extend=[], fields={}, methods={ሏ゚᭫=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᾆ), name=ሏ゚᭫, expression=ꚝ៝)})}, main=Expression.TailExpr(signalExpr=थ꣒))
Program(classDeclarations={ཆੌ༵〮=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ཆੌ༵〮, impl=[], extend=[ﬂ, ͳ, லୢੵ], fields={}, methods={})}, main=238.0)
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=ￆೢ﻿ா؜ᢩ)
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ໂꫭ, args=[]))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ףּۡ௦ั, value=Expression.EmptySignalExpr(), boundTo=1.6233134784864405E21))
Program(classDeclarations={}, main=DotExpression.CallExpr(receiver=true, isLifted=false, methodName=វ, arguments=[DotExpression.CallExpr(receiver=DotExpression.FieldAccessExpr(receiver=힤ె, fieldName=ಯ), isLifted=false, methodName=தঃ, arguments=[]), Expression.TailExpr(signalExpr=0)]))
Program(classDeclarations={}, main=)
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=)
Program(classDeclarations={Ὅ߬ோ༨=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ὅ߬ோ༨, impl=[], extend=[], fields={}, methods={}), ª꧶=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ª꧶, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(mdf=MUT, name=ৼਿ൧, value=this, boundTo=Expression.InstantiationExpr(name=ꨛ, args=[])))
Program(classDeclarations={ਐ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ਐ, impl=[], extend=[ꤎํ໖൭], fields={}, methods={}), ퟔ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ퟔ, impl=[], extend=[ᢜ, ꬁ੧҄], fields={}, methods={}), ៜ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ៜ, impl=[], extend=[ꜞ, ಢ­᮶, ᳩ], fields={}, methods={})}, main=)
Program(classDeclarations={ºૢָ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ºૢָ, impl=[ꪶ᠋ૉ, ഢේ, ఋେ⃡ꨬؚ], extend=[], fields={ຈ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ᙴ), name=ຈ)}, methods={}), ໆ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ໆ, impl=[], extend=[], fields={}, methods={}), ˮ〬=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ˮ〬, impl=[], extend=[], fields={ࡢ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꬊ), name=ࡢ), ಀ଼ꥒ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ୱೂಁ), name=ಀ଼ꥒ)}, methods={})}, main=this)
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ኤ꪿២༥ᩢ, args=[]))
Program(classDeclarations={৲ۛ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=৲ۛ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=ۿାੵိ, value=Expression.TailExpr(signalExpr=this), boundTo=true))
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(receiver=Expression.HeadExpr(signalExpr=DotExpression.FieldAssignExpr(receiver=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=this)), fieldName=Ⳏ, value=)), fieldName=ᝥꫵ))
Program(classDeclarations={ຊ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ຊ, impl=[], extend=[কૢ, ᢪᝳྫ꠆ႝ, ணꠂੌᝒ], fields={}, methods={}), ഽ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ഽ, impl=[], extend=[], fields={}, methods={})}, main=Expression.TailExpr(signalExpr=Ꞵ؜))
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ຣ, args=[]))
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=))
Program(classDeclarations={ꫲ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꫲ, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(name=டᰵ, args=[this, \134, ෦]))
Program(classDeclarations={ꪱꠋੀ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꪱꠋੀ, impl=[], extend=[], fields={}, methods={}), ம=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ம, impl=[ऽ], extend=[], fields={Å꠆ܹୖ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ﾆ), name=Å꠆ܹୖ)}, methods={ヽৗ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꠈꠂ), name=ヽৗ, expression=true)})}, main=0)
Program(classDeclarations={৲=Program.ClassDeclaration(isCapability=false, isInterface=true, name=৲, impl=[], extend=[], fields={}, methods={}), Ⴧ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ⴧ, impl=[], extend=[], fields={ꬁ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ਫ਼), name=ꬁ), ଏꪸ꣕྇=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=ᦜ૽ꢿ〬ౣ), name=ଏꪸ꣕྇), ௹=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ۯ), name=௹), ⵯ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ⴘ), name=ⵯ)}, methods={}), ঢ়=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ঢ়, impl=[], extend=[], fields={}, methods={})}, main=0.19140625)
Program(classDeclarations={ह꫁=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ह꫁, impl=[], extend=[], fields={}, methods={ߴ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=false, name=ຟූၣාꤧ), name=ߴ, expression=DotExpression.CallExpr(receiver=Expression.EmptySignalExpr(), isLifted=false, methodName=ꧧ, arguments=[])), ⸯേꢿ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ⴵ), name=ⸯേꢿ, expression=this)})}, main=Expression.SignalConstructionExpr(head=DotExpression.FieldAccessExpr(receiver=37, fieldName=ࢶ), tail=Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=ଆ᪷꣭ೀ, args=[]))))
Program(classDeclarations={ዀ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ዀ, impl=[], extend=[௹꣱], fields={}, methods={}), ﬕ᳑=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ﬕ᳑, impl=[ࢶ, ୱ], extend=[], fields={ⳬ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ܐࠦ), name=ⳬ)}, methods={ષ꪿ⷻ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ཀྵ۵ۧ), name=ષ꪿ⷻ, expression=Expression.InstantiationExpr(name=ⰼੂꪰ᪓, args=[]))}), ଳ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ଳ, impl=[], extend=[], fields={Ῥ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ℶೀ), name=Ῥ)}, methods={ল=Program.Method(mdf=READ, returnType=Program.Type(mdf=MUT, isLifted=false, name=અ꧳꣒ୖ꣮), name=ল, expression=Expression.InstantiationExpr(name=ᾯ૿, args=[true]))}), ࡨ൧꤇=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ࡨ൧꤇, impl=[ꠉ], extend=[], fields={}, methods={ꧠ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ຍޯោ‌़഼), name=ꧠ, expression=true), ꮞ꯬=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ੴ), name=ꮞ꯬, expression=װ᳭፟৭)}), ଋꪴ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ଋꪴ, impl=[], extend=[ⱀ], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=ધ᭑, value=Expression.TailExpr(signalExpr=false), boundTo=false))
Program(classDeclarations={Ꮍਂ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ꮍਂ, impl=[], extend=[ᯛަ૪, ૱, ʪൂ], fields={}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=DotExpression.CallExpr(receiver=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=false)), isLifted=true, methodName=ⶴ, arguments=[]))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ॻ‬, value=\ubf77ᠠ\uu3A4e, boundTo=Expression.EmptySignalExpr()))
Program(classDeclarations={வ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=வ, impl=[], extend=[ⱑ, ລဴ, Ｐ], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=0.0))
Program(classDeclarations={ඕౖ༷=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ඕౖ༷, impl=[], extend=[＄, ᳬ৪๘ꪳૼ], fields={}, methods={}), ㆳ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ㆳ, impl=[], extend=[ၡ], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=ວ, args=[]))))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ࠚ۟, value=Expression.EmptySignalExpr(), boundTo=this))
Program(classDeclarations={ວ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ວ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=Ὑ, args=[]))
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=DotExpression.CallExpr(receiver=0, isLifted=true, methodName=ەܶୖ, arguments=[Expression.LetExpr(mdf=IMM, name=Ὓৗꢀ, value=false, boundTo=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=this)), true, 0, this])))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ꩆ഼ꪲ, value=ꛝ, boundTo=DotExpression.CallExpr(receiver=true, isLifted=true, methodName=ῗஂ, arguments=[])))
Program(classDeclarations={￠=Program.ClassDeclaration(isCapability=false, isInterface=false, name=￠, impl=[ኾ], extend=[], fields={தꧥ꣗़‎᷽ꢹ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=＄ৃ), name=தꧥ꣗़‎᷽ꢹ), ꞗ=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=Ω), name=ꞗ), 彝᳭꫁ௗ᤹੫᪁᠌=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ՙ), name=彝᳭꫁ௗ᤹੫᪁᠌)}, methods={})}, main=40)
Program(classDeclarations={}, main=)
Program(classDeclarations={ង෪=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ង෪, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={ᮞ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᮞ, impl=[], extend=[Ꮤ්꙯, ℤᬁ], fields={}, methods={})}, main=Expression.InstantiationExpr(name=ߴ, args=[૱, Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=ⁱ, args=[])), Expression.SignalConstructionExpr(head=𐎞, tail=0.9)]))
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=true)
Program(classDeclarations={ଲೢᜒꢁ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ଲೢᜒꢁ, impl=[ဿ, ＄꛰, ՙٰ], extend=[], fields={Ε௬=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=৻⁮ෙ), name=Ε௬)}, methods={}), ᦶ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᦶ, impl=[‿], extend=[], fields={}, methods={}), ዑꩍ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ዑꩍ, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.CallExpr(receiver=Expression.InstantiationExpr(name=ⶳ, args=[]), isLifted=true, methodName=뱋, arguments=[]))
Program(classDeclarations={బꢀ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=బꢀ, impl=[ۿ൭߫ୣ, Ʞ಼꙯, Ⴈ֦], extend=[], fields={}, methods={}), Í=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Í, impl=[], extend=[], fields={}, methods={}), ㅗੂ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ㅗੂ, impl=[], extend=[ⶮ], fields={}, methods={})}, main=false)
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(receiver=Expression.InstantiationExpr(name=ஞ߀, args=[Expression.InstantiationExpr(name=ⅈ, args=[Expression.InstantiationExpr(name=ﾊ, args=[Expression.EmptySignalExpr()]), this]), Expression.EmptySignalExpr(), Expression.InstantiationExpr(name=ퟸꩃ, args=[Expression.InstantiationExpr(name=ຖൣꩌૢ꩗, args=[4, this])]), 95]), fieldName=ம))
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=this))
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=false))
Program(classDeclarations={ᬗ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᬗ, impl=[], extend=[], fields={}, methods={ꪺ؁7꣘=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ª꧸), name=ꪺ؁7꣘, expression=Expression.TailExpr(signalExpr=DotExpression.FieldAssignExpr(receiver=false, fieldName=ⸯೀ઼ే߉୧಼᪀, value=ၑ೫)))})}, main=Expression.InstantiationExpr(name=ঋ, args=[]))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=ဿ, tail=true))
Program(classDeclarations={}, main=ⴧූ)
Program(classDeclarations={}, main=઒)
Program(classDeclarations={ૡ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ૡ, impl=[], extend=[], fields={}, methods={}), ￋ꠆=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ￋ꠆, impl=[], extend=[], fields={}, methods={}), ᙸ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᙸ, impl=[ۯ︇], extend=[], fields={Ⅾ‮੍່=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꗭ໓), name=Ⅾ‮੍່)}, methods={}), ᚉౄ꯶३ॢ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᚉౄ꯶३ॢ, impl=[], extend=[Ʝ꫁ꪲ], fields={}, methods={}), በ൭ׅᯪ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=በ൭ׅᯪ, impl=[], extend=[], fields={}, methods={ਗ਼=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᱵ), name=ਗ਼, expression=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=_ே, value=false, boundTo=Expression.TailExpr(signalExpr=13)))), Ὓ᪑ොූꩌꧥ​=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=ᾁ), name=Ὓ᪑ොූꩌꧥ​, expression=டꢀ)})}, main=Expression.InstantiationExpr(name=ⷔັົ, args=[]))
Program(classDeclarations={}, main=2)
Program(classDeclarations={ດ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ດ, impl=[], extend=[], fields={}, methods={}), ᳱꠋۢ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᳱꠋۢ, impl=[؋, ᢪ], extend=[], fields={යꙹ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ࡊ), name=යꙹ)}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=Expression.LetExpr(mdf=CAPSULE, name=ì, value=輸, boundTo=ޱ꧕ᝓ))
Program(classDeclarations={ਫ਼=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ਫ਼, impl=[], extend=[], fields={ͺ᪵ׄੈূ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ௐ), name=ͺ᪵ׄੈূ)}, methods={ⷜ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ⁿᮦෳ), name=ⷜ, expression=41)})}, main=)
Program(classDeclarations={Ⳳ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ⳳ, impl=[], extend=[ꪻꠂ, ᜩீ೧꣐], fields={}, methods={}), ủୀꥉꚞۨ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ủୀꥉꚞۨ, impl=[], extend=[ミ, Ď, ạ੍], fields={}, methods={})}, main=Expression.SignalConstructionExpr(head=24, tail=Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=9.25478356306348E123, tail=0))))
Program(classDeclarations={ꜚꩌ‏=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꜚꩌ‏, impl=[], extend=[], fields={ᠪ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=＿᥇), name=ᠪ)}, methods={ત=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ܐ), name=ત, expression=Expression.LetExpr(mdf=IMM, name=ⰸ૭᤻, value=Expression.TailExpr(signalExpr=12), boundTo=5)), ዝ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ໟ), name=ዝ, expression=Expression.InstantiationExpr(name=ຂ, args=[0, \046]))})}, main=DotExpression.CallExpr(receiver=Expression.TailExpr(signalExpr=0.875), isLifted=false, methodName=ᢶ៤ૌ, arguments=[]))
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=Ἳ)
Program(classDeclarations={}, main=DotExpression.CallExpr(receiver=Expression.SignalConstructionExpr(head=춚, tail=Expression.LetExpr(mdf=IMM, name=ᥜ, value=this, boundTo=DotExpression.CallExpr(receiver=0, isLifted=false, methodName=ﶱ๐ᜒ, arguments=[ౠ᠐\b, Expression.LetExpr(mdf=READ, name=ౘைᩣ, value=ᮕꨰૅ, boundTo=DotExpression.FieldAccessExpr(receiver=, fieldName=ቘૌाᤢᯱ)), 0.017578125]))), isLifted=true, methodName=ࢳؕ, arguments=[]))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ꪱ, value=39049.0, boundTo=DotExpression.FieldAccessExpr(receiver=this, fieldName=ୱဴ⁡ఁꢴઃો)))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ຄ, value=0, boundTo=this))
Program(classDeclarations={￦⳱=Program.ClassDeclaration(isCapability=true, isInterface=false, name=￦⳱, impl=[], extend=[], fields={}, methods={ⶹ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ಀ҅ࠖੋං), name=ⶹ, expression=0.0)}), ﹍ࠦೇ⁯=Program.ClassDeclaration(isCapability=true, isInterface=false, name=﹍ࠦೇ⁯, impl=[ᱧ﻿ׇ߰܏ௗ, ⷑ, 〹ꣀᰲ৮ٰ, ە, ᥨ], extend=[], fields={}, methods={ᝐි=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=ι), name=ᝐි, expression=Expression.TailExpr(signalExpr=this)), ண=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꢎ), name=ண, expression=7)}), មᝒ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=មᝒ, impl=[], extend=[], fields={ກަ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ᎄ), name=ກަ), ଵ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ຄ), name=ଵ), ￦=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Ⰸ), name=￦)}, methods={}), ல᮫ৌ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ல᮫ৌ, impl=[], extend=[Ì], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=ꨨ, value=this, boundTo=લꯣ))
Program(classDeclarations={ㆧꚟే꯲ၳꠋ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ㆧꚟే꯲ၳꠋ, impl=[], extend=[ଟ〫؄܏, ཁ, ഊ, ၕ], fields={}, methods={})}, main=)
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=this)))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=MUT, name=$, value=Η, boundTo=Expression.EmptySignalExpr()))
Program(classDeclarations={ⸯ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⸯ, impl=[], extend=[], fields={}, methods={})}, main=Expression.TailExpr(signalExpr=this))
Program(classDeclarations={}, main=DotExpression.CallExpr(receiver=DotExpression.FieldAccessExpr(receiver=5, fieldName=ㆧ), isLifted=false, methodName=ཧ꫶ׇ᠐, arguments=[ᬠ༵ࠦꪰী]))
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=Ῡ, value=9.468244622787072E211, boundTo=ⷄ༷)))
Program(classDeclarations={}, main=\uu4F4C)
Program(classDeclarations={ੳ߅=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ੳ߅, impl=[], extend=[ೠ७, ᙸ], fields={}, methods={}), Όై༠ၬ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Όై༠ၬ, impl=[], extend=[], fields={}, methods={}), ຊ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ຊ, impl=[], extend=[], fields={}, methods={}), ΰﬞ᱁=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ΰﬞ᱁, impl=[ၮ], extend=[], fields={ꘪ᱄ုꦽ્=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ዐ), name=ꘪ᱄ုꦽ્)}, methods={ࠨ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=false, name=ℾৣ4꤃), name=ࠨ, expression=0)})}, main=0)
Program(classDeclarations={ഐ୍߫=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ഐ୍߫, impl=[], extend=[], fields={}, methods={})}, main=true)
Program(classDeclarations={ư=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ư, impl=[], extend=[], fields={}, methods={})}, main=ﷰ)
Program(classDeclarations={}, main=𝒺᪰\54)
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ᬳꦂ, value=this, boundTo=0))
Program(classDeclarations={ⶺ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ⶺ, impl=[], extend=[], fields={ಀ⃡꧙=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ޜ᪖ꫯ), name=ಀ⃡꧙)}, methods={})}, main=ᳵؖྗ)
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=57))
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr()))
Program(classDeclarations={}, main=188)
Program(classDeclarations={}, main=this)
Program(classDeclarations={₾=Program.ClassDeclaration(isCapability=true, isInterface=false, name=₾, impl=[], extend=[], fields={}, methods={ᚁၧ༹꛱=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ꪱ᮵ꢵ), name=ᚁၧ༹꛱, expression=Expression.InstantiationExpr(name=Æ, args=[])), Ά=Program.Method(mdf=IMM, returnType=Program.Type(mdf=MUT, isLifted=false, name=ສ︃෨ᷔັ), name=Ά, expression=DotExpression.CallExpr(receiver=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=ண, args=[]))), isLifted=false, methodName=¥, arguments=[])), ഽ୧=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ಽ), name=ഽ୧, expression=DotExpression.CallExpr(receiver=ⵯ, isLifted=false, methodName=ℼ, arguments=[]))})}, main=DotExpression.FieldAccessExpr(receiver=Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=ﹱ, args=[Expression.InstantiationExpr(name=எ໗ᯩᤳꩽ, args=[])])), fieldName=ஞ))
Program(classDeclarations={ຂ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ຂ, impl=[ઽ︃], extend=[], fields={}, methods={ඏௗಿ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=MUT, isLifted=false, name=ફ), name=ඏௗಿ, expression=෋\ud835)})}, main=true)
Program(classDeclarations={}, main=220)
Program(classDeclarations={ྊ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ྊ, impl=[], extend=[ᛞే], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=ῂׇ))
Program(classDeclarations={Ω=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ω, impl=[], extend=[], fields={ˬඃ៝=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Ὑ), name=ˬඃ៝)}, methods={〵=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ℨோ), name=〵, expression=0)}), ﹴᬄୖ؅ؗ੮=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ﹴᬄୖ؅ؗ੮, impl=[મ़], extend=[], fields={ꯓ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᚙ᭳), name=ꯓ), ⁔ꠋ᠎᧓ꦹ൩ꯪ=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ꧼᢩ), name=⁔ꠋ᠎᧓ꦹ൩ꯪ)}, methods={ᱏ᧖ੈۡ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ⁱ), name=ᱏ᧖ੈۡ, expression=Expression.SignalConstructionExpr(head=7.0, tail=))}), ˮ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ˮ, impl=[], extend=[], fields={س=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=য়), name=س), แၙ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Ⴧ), name=แၙ)}, methods={ඒ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᙸׁ), name=ඒ, expression=false), ዎऻ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ວ), name=ዎऻ, expression=Expression.InstantiationExpr(name=ꠄ᳒፟, args=[]))})}, main=true)
Program(classDeclarations={ῑ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ῑ, impl=[], extend=[], fields={ͱ߅=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᳯ᥇ᳳ), name=ͱ߅), ꨨ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ﶧ), name=ꨨ)}, methods={ໆ࿆ேົᩝᮂ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=ੲ), name=ໆ࿆ேົᩝᮂ, expression=4)}), ᳰٗ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᳰٗ, impl=[], extend=[], fields={}, methods={ߊஂ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ઐ), name=ߊஂ, expression=DotExpression.FieldAccessExpr(receiver=Expression.SignalConstructionExpr(head=false, tail=Expression.LetExpr(mdf=IMM, name=ೞ￻๋ೕ︊ൄ, value=Expression.InstantiationExpr(name=ἰ, args=[]), boundTo=Expression.TailExpr(signalExpr=1))), fieldName=ષ១))}), ਵ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ਵ, impl=[ꏛୈ, ମ], extend=[], fields={Ù=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꫲཻި೧), name=Ù)}, methods={ﺞᩚൗ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ઑꠂ‎), name=ﺞᩚൗ, expression=Expression.LetExpr(mdf=IMM, name=ඖ়゚ܑ༷ັෳ, value=ਯ੮ࣟ, boundTo=)), ዅ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=µ꫁ੵॗ), name=ዅ, expression=this)}), ଷꢀ༙=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ଷꢀ༙, impl=[], extend=[ၡ], fields={}, methods={})}, main=false)
Program(classDeclarations={}, main=this)
Program(classDeclarations={ￆꯥ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ￆꯥ, impl=[], extend=[], fields={}, methods={}), ꣻึ᧕=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꣻึ᧕, impl=[], extend=[ꢂ౪ั꦳, ഛৗ꯭᮶ᢩ], fields={}, methods={})}, main=0.0)
Program(classDeclarations={ශ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ශ, impl=[ᢊۭ꧰಼ৢ໘, ဿ], extend=[], fields={}, methods={}), ꓚ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ꓚ, impl=[], extend=[], fields={}, methods={}), ഺ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ഺ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=ຯ, value=13.0, boundTo=3.1256317654124317E239))
Program(classDeclarations={}, main=4.65625)
Program(classDeclarations={￠=Program.ClassDeclaration(isCapability=false, isInterface=true, name=￠, impl=[], extend=[ታ̉, ℨ᱓꫁ૣ‌], fields={}, methods={}), ｉ഻꣨꙯=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ｉ഻꣨꙯, impl=[Ͱ﻿], extend=[], fields={}, methods={Ὀྎ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=⁀꣕ৢ‫ෝᤧોা), name=Ὀྎ, expression=1)})}, main=Expression.HeadExpr(signalExpr=true))
Program(classDeclarations={}, main=DotExpression.CallExpr(receiver=this, isLifted=false, methodName=ⅇ, arguments=[ඊᬁ]))
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=מּ, args=[2]))
Program(classDeclarations={}, main=this)
Program(classDeclarations={ஜ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ஜ, impl=[], extend=[], fields={ἶઃ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Γે), name=ἶઃ), ⳮ5￺⃦=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ഫ), name=ⳮ5￺⃦)}, methods={})}, main=ଢ଼)
Program(classDeclarations={}, main=DotExpression.CallExpr(receiver=Ὶ, isLifted=false, methodName=Ͱ, arguments=[]))
Program(classDeclarations={ၡ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ၡ, impl=[], extend=[ງ‪], fields={}, methods={}), ᡏႇꪰ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᡏႇꪰ, impl=[ල҇], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(name=ٲ, args=[this]))
Program(classDeclarations={ꠖঃ௦ூ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꠖঃ௦ூ, impl=[ㆫொൣ, ஐ︄ꠋ], extend=[], fields={}, methods={ꬊ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=অ਼), name=ꬊ, expression=DotExpression.CallExpr(receiver=100.0, isLifted=false, methodName=Ⴧ, arguments=[0.203125, Expression.InstantiationExpr(name=ⷉᝒۘ, args=[\124, Expression.EmptySignalExpr()]), \f]))}), ꧺ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꧺ, impl=[ᢪ], extend=[], fields={ࡕ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=〲), name=ࡕ)}, methods={})}, main=true)
Program(classDeclarations={}, main=true)
Program(classDeclarations={ᝩ‮ᤡૂ઼ೊၳ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᝩ‮ᤡૂ઼ೊၳ, impl=[], extend=[], fields={}, methods={}), ꛔ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꛔ, impl=[], extend=[], fields={}, methods={}), ꬪ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꬪ, impl=[], extend=[], fields={פּ=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ଲ⁠), name=פּ)}, methods={ၔᰭꩻ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ͻ), name=ၔᰭꩻ, expression=this), s=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⶆ), name=s, expression=DotExpression.CallExpr(receiver=, isLifted=true, methodName=ݳ, arguments=[]))})}, main=DotExpression.CallExpr(receiver=, isLifted=true, methodName=ୱ, arguments=[]))
Program(classDeclarations={}, main=)
Program(classDeclarations={ශ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ශ, impl=[נּ, Ά, ༀۨ, ᝮܑ, ₚ], extend=[], fields={ஔౣ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ൺ), name=ஔౣ)}, methods={}), ኬᤡꠤ꥓ৈ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ኬᤡꠤ꥓ৈ, impl=[], extend=[], fields={ઽꢀ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᥲ), name=ઽꢀ), i۱=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=ૹ), name=i۱), ꚧୈ්=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Όᜲ3ꦿႚᝲ), name=ꚧୈ්), ﴲ༵=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ੴܑ), name=ﴲ༵), ˮ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ەึ), name=ˮ)}, methods={ן=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ວ), name=ן, expression=Expression.SignalConstructionExpr(head=ᛱ꧑‏, tail=Expression.InstantiationExpr(name=ܞ⳯, args=[])))}), ᳫ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᳫ, impl=[], extend=[], fields={}, methods={})}, main=)
Program(classDeclarations={ﵠ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ﵠ, impl=[], extend=[], fields={}, methods={ꥼ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᝎׇ᠌᮶), name=ꥼ, expression=)})}, main=0.5)
Program(classDeclarations={ౙ໌ᤣ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ౙ໌ᤣ, impl=[ￃූஂꧥ, ඟ꣤, Ἔ៝ꩌ], extend=[], fields={}, methods={}), ວ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ວ, impl=[], extend=[], fields={}, methods={Ⳳ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ଐ), name=Ⳳ, expression=Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=ﹱ, args=[])))}), ꩯ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꩯ, impl=[Ꞙ, ౘৌ], extend=[], fields={}, methods={ͻۜ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=$), name=ͻۜ, expression=Expression.HeadExpr(signalExpr=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=this), tail=DotExpression.FieldAssignExpr(receiver=Expression.HeadExpr(signalExpr=\157), fieldName=Ὑꫬၧ༹꯷, value=Expression.InstantiationExpr(name=ಀ਼ꨩᨛ, args=[])))))})}, main=Expression.LetExpr(mdf=IMM, name=ಽ, value=ꩺංꦻৣ, boundTo=Expression.TailExpr(signalExpr=ᜤ߰੮)))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=, tail=Expression.EmptySignalExpr()))
Program(classDeclarations={}, main=this)
Program(classDeclarations={ࠨ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ࠨ, impl=[], extend=[], fields={}, methods={Ⱕꪲ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᚅ), name=Ⱕꪲ, expression=Expression.TailExpr(signalExpr=this)), ￜ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=Ω), name=ￜ, expression=0.0)}), ꠸=Program.ClassDeclaration(isCapability=true, isInterface=false, name=꠸, impl=[], extend=[], fields={ⴛ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ዀ), name=ⴛ)}, methods={}), ꭿֿ‏ೖ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꭿֿ‏ೖ, impl=[], extend=[], fields={}, methods={}), ኊ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ኊ, impl=[], extend=[], fields={}, methods={ኀ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ὁ꧘፝ᨛ), name=ኀ, expression=DotExpression.FieldAccessExpr(receiver=Expression.InstantiationExpr(name=ᥛ, args=[ᮏ, Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=կ, args=[])), DotExpression.CallExpr(receiver=2, isLifted=false, methodName=கܲ᪘, arguments=[]), Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ແ, value=1, boundTo=Expression.TailExpr(signalExpr=187.0)))]), fieldName=ዮ))})}, main=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=ꧏ២, args=[]))))
Program(classDeclarations={}, main=10)
Program(classDeclarations={}, main=13.0)
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ଡ଼ୖ꤅, args=[]))
Program(classDeclarations={ۿ᳐=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ۿ᳐, impl=[], extend=[], fields={}, methods={})}, main=5)
Program(classDeclarations={}, main=6.751508330977696E21)
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=Ξ, value=this, boundTo=௹))
Program(classDeclarations={ꮝऻ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꮝऻ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=1))
Program(classDeclarations={}, main=)
Program(classDeclarations={ຍׁൗ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ຍׁൗ, impl=[], extend=[גּ෩, ף꫶ּ], fields={}, methods={}), ៛=Program.ClassDeclaration(isCapability=false, isInterface=false, name=៛, impl=[ܐ], extend=[], fields={ᚂ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=Åඃ), name=ᚂ)}, methods={ￍ⁬=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ꡣ꘥ࠪ), name=ￍ⁬, expression=0.0), 鼣=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ແ), name=鼣, expression=true), ഽ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=ૐ), name=ഽ, expression=𞹝\b)}), ർ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ർ, impl=[], extend=[ￃೀᝲ], fields={}, methods={})}, main=Expression.InstantiationExpr(name=יִ, args=[this]))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=600)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=true), tail=Expression.LetExpr(mdf=CAPSULE, name=ະ, value=Expression.LetExpr(mdf=IMM, name=ຜ᪓ೊ, value=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=DotExpression.FieldAssignExpr(receiver=Expression.HeadExpr(signalExpr=false), fieldName=ꨝ३, value=Expression.HeadExpr(signalExpr=DotExpression.CallExpr(receiver=Expression.EmptySignalExpr(), isLifted=false, methodName=ⷙ᪇, arguments=[]))))), boundTo=389), boundTo=this)))
Program(classDeclarations={ͼ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ͼ, impl=[ῃᜓ], extend=[], fields={}, methods={ℂ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ⳳ), name=ℂ, expression=Expression.HeadExpr(signalExpr=43685.0))}), ൎ꯭=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ൎ꯭, impl=[], extend=[], fields={ꣻ꠆݂᪇=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ᬥै༡઼), name=ꣻ꠆݂᪇), ꧼ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=Ԏ), name=ꧼ)}, methods={})}, main=Expression.SignalConstructionExpr(head=᚝, tail=this))
Program(classDeclarations={ꥠ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꥠ, impl=[], extend=[ꣳొ, ܐ], fields={}, methods={})}, main=3)
Program(classDeclarations={Բ҃ᤦᩞ࡚ਿ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Բ҃ᤦᩞ࡚ਿ, impl=[], extend=[ࠤૻ], fields={}, methods={})}, main=Expression.SignalConstructionExpr(head=694.0, tail=DotExpression.FieldAssignExpr(receiver=゗, fieldName=ៜܲ, value=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=Expression.SignalConstructionExpr(head=this, tail=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=this)))))))
Program(classDeclarations={ꪢ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ꪢ, impl=[], extend=[], fields={}, methods={ꬒ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=READ, isLifted=false, name=ゃ), name=ꬒ, expression=Expression.EmptySignalExpr())}), ה=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ה, impl=[], extend=[], fields={ￜ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ૹ), name=ￜ)}, methods={ඞ⵿=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=ￎ), name=ඞ⵿, expression=Expression.EmptySignalExpr())}), Ꙛ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ꙛ, impl=[], extend=[], fields={だ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᮯ), name=だ)}, methods={ᚫ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ጔ᥌२), name=ᚫ, expression=9506.0)})}, main=\5\f)
Program(classDeclarations={}, main=5)
Program(classDeclarations={먶=Program.ClassDeclaration(isCapability=true, isInterface=false, name=먶, impl=[], extend=[], fields={}, methods={ᱝೕ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=Ⴧ), name=ᱝೕ, expression=Expression.EmptySignalExpr()), ਫ਼=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=﹩), name=ਫ਼, expression=æ)}), ꬩ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꬩ, impl=[ڱ, ସ॓], extend=[], fields={}, methods={ᲆ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᳵ), name=ᲆ, expression=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=ૡ, value=DotExpression.CallExpr(receiver=0.0, isLifted=false, methodName=ㇳ, arguments=[Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=this, tail=Expression.EmptySignalExpr()), tail=)]), boundTo=Expression.LetExpr(mdf=IMM, name=ະ࡙, value=Expression.HeadExpr(signalExpr=Expression.SignalConstructionExpr(head=0, tail=Expression.EmptySignalExpr())), boundTo=н)), tail=Expression.TailExpr(signalExpr=8)))}), වؗၟ፟ઃꪲௗ᳘၄ୂ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=වؗၟ፟ઃꪲௗ᳘၄ୂ, impl=[], extend=[ꘝ॒], fields={}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ࠨ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ࠨ, impl=[], extend=[], fields={}, methods={ꢨ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᮯ), name=ꢨ, expression=144.03125), ݭ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᭇ᜴᳭ັ), name=ݭ, expression=this)})}, main=Expression.LetExpr(mdf=READ, name=ᅑ, value=, boundTo=this))
Program(classDeclarations={}, main=1921)
Program(classDeclarations={}, main=)
Program(classDeclarations={ℶ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ℶ, impl=[], extend=[], fields={ደ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ఛꩌෲ), name=ደ), ˈꚟ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ㆱ), name=ˈꚟ), ኹ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꛩ), name=ኹ), ꠎ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=Ό), name=ꠎ)}, methods={})}, main=DotExpression.FieldAssignExpr(receiver=Expression.HeadExpr(signalExpr=0), fieldName=নె਼೭၆༤, value=DotExpression.CallExpr(receiver=0.237, isLifted=false, methodName=ஹ⃥ꧥꪾ, arguments=[Expression.SignalConstructionExpr(head=ந, tail=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=\u8aAE\uud97a\uDDa1𑈿), tail=Expression.EmptySignalExpr()))])))
Program(classDeclarations={ˆࠗ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ˆࠗ, impl=[], extend=[], fields={ᡲஂ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=땴), name=ᡲஂ), òᯱ್=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ௐ᧒), name=òᯱ್)}, methods={ᠦᨙ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=Ό), name=ᠦᨙ, expression=Expression.InstantiationExpr(name=ຄ൫ூଃׁ, args=[])), ৠꠥꫫູ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⷔ၃), name=ৠꠥꫫູ, expression=Expression.LetExpr(mdf=IMM, name=ຽঃꠋ᠍ᤤ߭ᬄ, value=Expression.EmptySignalExpr(), boundTo=⶷)), ਫ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=Ͷ9), name=ਫ, expression=49), ኵৣ꯭ᳳ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᠳ), name=ኵৣ꯭ᳳ, expression=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=DotExpression.FieldAssignExpr(receiver=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=⁀, value=this, boundTo=1)), fieldName=ຊ, value=DotExpression.CallExpr(receiver=false, isLifted=true, methodName=Ϳ૫, arguments=[Expression.EmptySignalExpr(), this, , Expression.EmptySignalExpr(), Expression.LetExpr(mdf=IMM, name=Ὶেೖ, value=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr()))), tail=Expression.LetExpr(mdf=IMM, name=૱, value=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=ㄪූ)), boundTo=0.5))), tail=0.308), boundTo=Expression.EmptySignalExpr())])), tail=Expression.LetExpr(mdf=MUT, name=ͽౖؗၱ, value=\f, boundTo=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=ꟷ, value=Expression.HeadExpr(signalExpr=this), boundTo=Expression.HeadExpr(signalExpr=true)), tail=Expression.HeadExpr(signalExpr=false)))), tail=Expression.LetExpr(mdf=IMM, name=ఽ, value=Expression.TailExpr(signalExpr=false), boundTo=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ৎ, value=888.0, boundTo=Expression.HeadExpr(signalExpr=Expression.EmptySignalExpr()))))))))}), ಐ႔=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ಐ႔, impl=[], extend=[], fields={}, methods={}), সೌິ᠋ׂۢꪰૈ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=সೌິ᠋ׂۢꪰૈ, impl=[], extend=[], fields={}, methods={}), ኖ࡚=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ኖ࡚, impl=[], extend=[], fields={}, methods={}), ౘ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ౘ, impl=[], extend=[攔ை], fields={}, methods={}), ￍ්ૻ༤=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ￍ්ૻ༤, impl=[ଲᢆ, ଚ, ꚕ, ֏], extend=[], fields={}, methods={៛ၠ১ۧ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=ⲋ), name=៛ၠ১ۧ, expression=)}), ﬧૌꩃు=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ﬧૌꩃు, impl=[], extend=[ྈ], fields={}, methods={}), ῼ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ῼ, impl=[], extend=[], fields={}, methods={}), ⱏ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⱏ, impl=[], extend=[ૡ゚゙໊, ῶ], fields={}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=this)
Program(classDeclarations={ᝆꢀ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᝆꢀ, impl=[], extend=[], fields={}, methods={ຫฺੇ꪿ஂᢩೆ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=ₑ), name=ຫฺੇ꪿ஂᢩೆ, expression=𑜰\001\uuuuuB88C\\), ჯັ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ὕꦂඃ഻୬), name=ჯັ, expression=false), ۦ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ￋ), name=ۦ, expression=ೠ), ዀ၈=Program.Method(mdf=MUT, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ৎ), name=ዀ၈, expression=this), ₽=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=ⶊஂ), name=₽, expression=this), ʹ꧲=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=Ì᳐), name=ʹ꧲, expression=Expression.InstantiationExpr(name=ფ, args=[0.0625])), ಯ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ਸ਼), name=ಯ, expression=this)})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={έົۨੵି၇ៀ᱀=Program.ClassDeclaration(isCapability=false, isInterface=false, name=έົۨੵି၇ៀ᱀, impl=[ᢟ, ﹲ, ՙ], extend=[], fields={ꛢ᳭߂=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ਯ), name=ꛢ᳭߂), ￥=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=R), name=￥), ﬕ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=གྷ઼᭗᭰), name=ﬕ), ꠄ᪳=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=டᮨ), name=ꠄ᪳), ພᨘ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ஃ), name=ພᨘ)}, methods={})}, main=Expression.HeadExpr(signalExpr=true))
Program(classDeclarations={ລෳᩕۭ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ລෳᩕۭ, impl=[ଡ଼, ῳ, ꪊඃ߁], extend=[], fields={ꔱ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ᰆܑ), name=ꔱ), ວ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ল), name=ວ)}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ᰖ්⃕￺ေ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᰖ්⃕￺ေ, impl=[], extend=[ຄ], fields={}, methods={}), ꪻ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꪻ, impl=[], extend=[], fields={}, methods={})}, main=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr()))
Program(classDeclarations={〵=Program.ClassDeclaration(isCapability=true, isInterface=false, name=〵, impl=[], extend=[], fields={ꙁ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ੳ༷), name=ꙁ)}, methods={ଡ଼=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=︴), name=ଡ଼, expression=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=)))}), ຄ࿆꣦=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ຄ࿆꣦, impl=[], extend=[], fields={}, methods={ꪱ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ಀ᠋), name=ꪱ, expression=ཪ), ପ؅᠋=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=យ), name=ପ؅᠋, expression=)})}, main=this)
Program(classDeclarations={ℂׂ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ℂׂ, impl=[], extend=[], fields={}, methods={}), ⸯ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ⸯ, impl=[], extend=[], fields={}, methods={})}, main=)
Program(classDeclarations={ꪽ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꪽ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=960.0))
Program(classDeclarations={ἲꩃিੑ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ἲꩃিੑ, impl=[], extend=[ᝤ༹݂̐, ゝꚟᝲֿ, ஐॢ, ㆠૢেഃ, 〺᳭ꩃꢀ], fields={}, methods={}), יִ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=יִ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={Ὸᤷꢀ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ὸᤷꢀ, impl=[ٯੑ], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={ﭘୌ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ﭘୌ, impl=[], extend=[ᶺᝳ], fields={}, methods={})}, main=)
Program(classDeclarations={ਐ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ਐ, impl=[], extend=[], fields={}, methods={}), ࠋ഻〫࠙ޯ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ࠋ഻〫࠙ޯ, impl=[], extend=[], fields={₽=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Ὢۛຼॖ‏ꠂ), name=₽)}, methods={}), ൎ５ᝳം=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ൎ５ᝳം, impl=[], extend=[ఎௗ], fields={}, methods={}), ஞ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ஞ, impl=[], extend=[], fields={ഌ᱉=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ঽ), name=ഌ᱉), ຊౖ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=‿), name=ຊౖ)}, methods={})}, main=Expression.InstantiationExpr(name=ⴅꦁ࠙ଂృ, args=[Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ઇ, value=18, boundTo=Expression.SignalConstructionExpr(head=1.4609375, tail=0))), Expression.InstantiationExpr(name=হైે, args=[]), 209]))
Program(classDeclarations={}, main=0)
Program(classDeclarations={}, main=this)
Program(classDeclarations={￠=Program.ClassDeclaration(isCapability=false, isInterface=true, name=￠, impl=[], extend=[], fields={}, methods={}), ퟴ﻿ా=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ퟴ﻿ా, impl=[ᾅ], extend=[], fields={ℚ͏=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ใ), name=ℚ͏), ዂ=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ท), name=ዂ)}, methods={}), ኣꥏ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ኣꥏ, impl=[], extend=[], fields={ඓఁ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=Ⴭ), name=ඓఁ), ៗૄ=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=ᳮ), name=ៗૄ)}, methods={ዀ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ߵ), name=ዀ, expression=Expression.EmptySignalExpr()), ಈ؜=Program.Method(mdf=READ, returnType=Program.Type(mdf=READ, isLifted=false, name=ຖ), name=ಈ؜, expression=true)})}, main=this)
Program(classDeclarations={}, main=ౠ)
Program(classDeclarations={ꚏ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ꚏ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=11))
Program(classDeclarations={ꟻ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꟻ, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(name=Ａ, args=[]))
Program(classDeclarations={Όࠫ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Όࠫ, impl=[], extend=[], fields={}, methods={})}, main=Expression.TailExpr(signalExpr=true))
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=DotExpression.CallExpr(receiver=true, isLifted=false, methodName=ℇ੪ೈஂ, arguments=[])))
Program(classDeclarations={}, main=52224.0)
Program(classDeclarations={ዀ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ዀ, impl=[], extend=[￥່, ꭞ], fields={}, methods={}), ළৃ০༷ꠂ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ළৃ০༷ꠂ, impl=[], extend=[], fields={A=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Ⴙౢ༹ঃൗො), name=A)}, methods={}), ቝ꙯꧓=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ቝ꙯꧓, impl=[], extend=[௹᷾], fields={}, methods={}), ப=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ப, impl=[], extend=[⁔, ዾ, ᦔઁ], fields={}, methods={})}, main=DotExpression.CallExpr(receiver=3, isLifted=true, methodName=ਤᮭ, arguments=[]))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ໄ, value=Expression.EmptySignalExpr(), boundTo=DotExpression.FieldAccessExpr(receiver=true, fieldName=ﬡ1)))
Program(classDeclarations={}, main=)
Program(classDeclarations={Ꮶู=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ꮶู, impl=[], extend=[], fields={ೡ=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=ꡨਿ), name=ೡ), ꪱ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ହꚞৣ̦༵), name=ꪱ), ︳ٰ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ܐ), name=︳ٰ), Ⴧีං=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ウ), name=Ⴧีං), ប=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꧭཱུᯧ⃓ᩣ), name=ប), ﭘ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ଥ), name=ﭘ), ꠈ=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=y), name=ꠈ), ㄸۧ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᳯ), name=ㄸۧ)}, methods={})}, main=this)
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ⷞ꘦ꫫ, value=ꟻ, boundTo=Expression.EmptySignalExpr()))
Program(classDeclarations={}, main=࿍𝋴)
Program(classDeclarations={פּ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=פּ, impl=[], extend=[], fields={}, methods={})}, main=50000.0)
Program(classDeclarations={អ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=អ, impl=[], extend=[], fields={}, methods={}), ㆺ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ㆺ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=3.0)
Program(classDeclarations={ⴒ꤂ྙ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⴒ꤂ྙ, impl=[], extend=[ଽ༙౭, ລ], fields={}, methods={}), ನ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ನ, impl=[], extend=[ங], fields={}, methods={}), ਪ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ਪ, impl=[], extend=[], fields={}, methods={}), ͼ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ͼ, impl=[], extend=[ΐ, ຊ], fields={}, methods={}), ଢ଼=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ଢ଼, impl=[], extend=[ꩨ, ₪, ⁿ, ᳫஂంꯤೆ3, ௐோꩃꥈ๗, ೡ, ᣍ᪶࠙྇߇ೃ￺, ઍ, ꣻ], fields={}, methods={})}, main=ꩣ)
Program(classDeclarations={}, main=219.0)
Program(classDeclarations={གྷ꠆=Program.ClassDeclaration(isCapability=false, isInterface=false, name=གྷ꠆, impl=[], extend=[], fields={}, methods={}), ＿=Program.ClassDeclaration(isCapability=false, isInterface=true, name=＿, impl=[], extend=[ￄ, ࢸꩍూ߁᥌⵿, ਏ, 〹઼ே໙ঁ๖ั], fields={}, methods={})}, main=)
Program(classDeclarations={ರ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ರ, impl=[ꮉᝒ], extend=[], fields={}, methods={})}, main=ಽ)
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=\uucA41))
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr()))
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=勵, args=[Expression.TailExpr(signalExpr=Expression.EmptySignalExpr())]))
Program(classDeclarations={Ꙓೢ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ꙓೢ, impl=[૱ୢ, ᮯ, סּ], extend=[], fields={ഭ෮᩻=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ᢪ), name=ഭ෮᩻)}, methods={ꚇ፞᭑=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ຢ), name=ꚇ፞᭑, expression=Expression.LetExpr(mdf=IMM, name=ꣵ႘્, value=, boundTo=ቱ)), ꗻ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=false, name=ௐ࡚), name=ꗻ, expression=Expression.LetExpr(mdf=IMM, name=ℇ, value=0, boundTo=5)), ᏼ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ঽ), name=ᏼ, expression=𑲐ഒ\"), ઇꙸୗ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꕾ܏̬), name=ઇꙸୗ, expression=Expression.TailExpr(signalExpr=this)), ᦽ૽ꨭ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᜐ), name=ᦽ૽ꨭ, expression=true)}), ᜇ੍̓=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᜇ੍̓, impl=[Ὕ], extend=[], fields={}, methods={ૡ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ⷀ⃘), name=ૡ, expression=Expression.EmptySignalExpr()), ﺒ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=အ), name=ﺒ, expression=Expression.SignalConstructionExpr(head=true, tail=Expression.HeadExpr(signalExpr=this))), ꬢᝓ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ܫྩ), name=ꬢᝓ, expression=3875), µ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ࠂ), name=µ, expression=this), ῂ༘=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=ꤻઁ), name=ῂ༘, expression=Expression.LetExpr(mdf=READ, name=ᜑ, value=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ຍ, value=Expression.EmptySignalExpr(), boundTo=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=169)))), boundTo=this)), ഏꢻꩍ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⶴ), name=ഏꢻꩍ, expression=this), ॐꦽ઼=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᇖ), name=ॐꦽ઼, expression=1), ᦑൊ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=ຈ), name=ᦑൊ, expression=Expression.SignalConstructionExpr(head=DotExpression.CallExpr(receiver=1, isLifted=false, methodName=Ν, arguments=[Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=ﾬ, args=[Expression.LetExpr(mdf=IMM, name=ౠ಼, value=\3, boundTo=DotExpression.CallExpr(receiver=true, isLifted=false, methodName=Ᾱ, arguments=[Expression.HeadExpr(signalExpr=Expression.EmptySignalExpr())]))]), tail=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=CAPSULE, name=々￻, value=7, boundTo=Expression.LetExpr(mdf=IMM, name=ኝ, value=Expression.SignalConstructionExpr(head=DotExpression.CallExpr(receiver=DotExpression.CallExpr(receiver=Expression.InstantiationExpr(name=ꘫਃౢ, args=[Expression.InstantiationExpr(name=ಭឺ, args=[]), Expression.LetExpr(mdf=IMM, name=ⲽ, value=Expression.LetExpr(mdf=IMM, name=ෂ, value=Expression.LetExpr(mdf=IMM, name=מּ, value=Expression.HeadExpr(signalExpr=this), boundTo=0.0), boundTo=0.0609283447265625), boundTo=\5)]), isLifted=true, methodName=ꬣിු, arguments=[]), isLifted=true, methodName=ᢂ, arguments=[Expression.HeadExpr(signalExpr=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=), tail=3584.0)), Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=))), Expression.HeadExpr(signalExpr=5.0)]), tail=1.125), boundTo=Expression.LetExpr(mdf=IMM, name=ഽౕᤧ, value=Expression.LetExpr(mdf=IMM, name=ᠡ, value=Expression.InstantiationExpr(name=ኲൄ્, args=[]), boundTo=Expression.EmptySignalExpr()), boundTo=DotExpression.FieldAssignExpr(receiver=this, fieldName=ၒ, value=Expression.InstantiationExpr(name=ᢉ, args=[]))))), tail=Expression.HeadExpr(signalExpr=)))), Expression.SignalConstructionExpr(head=true, tail=DotExpression.FieldAssignExpr(receiver=false, fieldName=ｃ, value=this))]), tail=)), ﬠः=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꪨ), name=ﬠः, expression=DotExpression.FieldAccessExpr(receiver=DotExpression.FieldAccessExpr(receiver=DotExpression.FieldAccessExpr(receiver=0.0, fieldName=ᳰ゚༵॓), fieldName=ᢥ), fieldName=ຍౌ))})}, main=0.0)
Program(classDeclarations={}, main=)
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=ᏽꣅ)))
Program(classDeclarations={ⁱ༾ె઼︮ா᪄=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ⁱ༾ె઼︮ா᪄, impl=[], extend=[], fields={ຢ়=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=ൖ), name=ຢ়)}, methods={})}, main=Expression.InstantiationExpr(name=ॐ, args=[Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=\n, tail=Expression.TailExpr(signalExpr=false)), tail=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=Ὂ⃯ꢁ, value=Expression.TailExpr(signalExpr=ᪧᰵৗ), boundTo=false)))), Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=false), Expression.TailExpr(signalExpr=Expression.EmptySignalExpr()), true]))
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=350.0))
Program(classDeclarations={ᬆ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᬆ, impl=[Ᾱᮦ, ᥲ, ᦲ, ꬥ, ₖၞ], extend=[], fields={}, methods={ͱ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ℸ॔ⷠ⁢ັ), name=ͱ, expression=5.0E80), ꫥ୩઼=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=$), name=ꫥ୩઼, expression=true)}), ቖ⃡=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ቖ⃡, impl=[], extend=[], fields={ऽෲׁ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ᾢ), name=ऽෲׁ), ㄼ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=า꘨ു), name=ㄼ)}, methods={}), ꜞ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ꜞ, impl=[ꪱ], extend=[], fields={}, methods={}), ｯ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ｯ, impl=[], extend=[], fields={}, methods={})}, main=\b)
Program(classDeclarations={ይ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ይ, impl=[], extend=[ᬒ, ஞஂॣ], fields={}, methods={})}, main=DotExpression.CallExpr(receiver=DotExpression.FieldAccessExpr(receiver=Expression.SignalConstructionExpr(head=this, tail=Expression.InstantiationExpr(name=ꪻ, args=[])), fieldName=ඳܰ), isLifted=false, methodName=₽࠭, arguments=[]))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ࡨࣕ, value=𐍻, boundTo=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=1.0468599035683593E287)))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=true, tail=ῥ))
Program(classDeclarations={ⴰ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⴰ, impl=[], extend=[ℎ, ग़], fields={}, methods={}), ⶵ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⶵ, impl=[], extend=[ະੋᤢೊ], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=)))
Program(classDeclarations={ˑﬞ࡛ׄ９৬=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ˑﬞ࡛ׄ９৬, impl=[ၥ⵿ૣຸ], extend=[], fields={ઐ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ℤ), name=ઐ)}, methods={ⁿ༹꣖=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=false, name=ኯ), name=ⁿ༹꣖, expression=Expression.LetExpr(mdf=IMM, name=ꥆ̼, value=true, boundTo=Expression.InstantiationExpr(name=ªׂ, args=[Expression.LetExpr(mdf=READ, name=ᮮೣ, value=Expression.LetExpr(mdf=IMM, name=ὖ, value=ힰ, boundTo=𑗞), boundTo=Expression.LetExpr(mdf=IMM, name=ℨ, value=Expression.EmptySignalExpr(), boundTo=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=ᳮ, value=Expression.LetExpr(mdf=READ, name=ಆ, value=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=ੴ, value=DotExpression.CallExpr(receiver=Expression.InstantiationExpr(name=ៗ, args=[Expression.TailExpr(signalExpr=0)]), isLifted=false, methodName=ᤌ, arguments=[ଽ゚ᢩੑ, 40.0]), boundTo=Expression.InstantiationExpr(name=ᴇ, args=[])), tail=224.0), boundTo=Expression.InstantiationExpr(name=Ꞥׁ᭫, args=[])), boundTo=false), tail=0))), 13.375, Έ]))), অۚ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=த), name=অۚ, expression=), ｅ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=ῲ), name=ｅ, expression=Expression.LetExpr(mdf=CAPSULE, name=ՙ, value=416.0, boundTo=DotExpression.FieldAssignExpr(receiver=Expression.TailExpr(signalExpr=5506.0), fieldName=ﬃ, value=Expression.LetExpr(mdf=IMM, name=ꡯ, value=\uccd3𐎟🧋🪃, boundTo=Expression.EmptySignalExpr())))), ℌꯦી꘧ꤨ᳒ᜓ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=Ⳳ), name=ℌꯦી꘧ꤨ᳒ᜓ, expression=Expression.LetExpr(mdf=IMM, name=ˬ᷃, value=this, boundTo=Expression.TailExpr(signalExpr=false))), ₶=Program.Method(mdf=MUT, returnType=Program.Type(mdf=MUT, isLifted=false, name=ퟗ), name=₶, expression=), ၦ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ண⵿), name=ၦ, expression=Expression.InstantiationExpr(name=ৡ⃡, args=[])), ㄧ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=false, name=＄), name=ㄧ, expression=𑊎\udF10𐄇), ㆥັᮀ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=Ⰳྕୗ), name=ㆥັᮀ, expression=Expression.TailExpr(signalExpr=#અ)), ꬤ઼=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ꪗ), name=ꬤ઼, expression=Expression.LetExpr(mdf=IMM, name=ங়ࣨ, value=12, boundTo=true)), ଢ଼=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ਇ), name=ଢ଼, expression=this), ᬰ້໊ႆི᪵ࠣ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=ᩅ᭲), name=ᬰ້໊ႆི᪵ࠣ, expression=this), ꧏ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=ਏ), name=ꧏ, expression=this)})}, main=15)
Program(classDeclarations={ⶳ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ⶳ, impl=[], extend=[], fields={}, methods={ᛰ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ಕిั﻿ۧ), name=ᛰ, expression=אָܑᝒ᪉), ߴ̃᠓=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=እౌ), name=ߴ̃᠓, expression=this)})}, main=2186)
Program(classDeclarations={ﹲ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ﹲ, impl=[], extend=[], fields={ﷷၭ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ᢄ), name=ﷷၭ)}, methods={})}, main=Expression.HeadExpr(signalExpr=false))
Program(classDeclarations={}, main=false)
Program(classDeclarations={ᚅ༹࠙=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᚅ༹࠙, impl=[ଌ], extend=[], fields={ບ꤀ᢆઁ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ࠤ࡛ꪾ૽), name=ບ꤀ᢆઁ), ྉ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ᮮᜳྜྷᯩ), name=ྉ)}, methods={ﬦ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=MUT, isLifted=false, name=ᎂ), name=ﬦ, expression=ၡ﻿ꦶꠋ), ㆊ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ॳ), name=ㆊ, expression=0)}), ᝊ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᝊ, impl=[], extend=[], fields={}, methods={})}, main=true)
Program(classDeclarations={ὒ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ὒ, impl=[ヽ], extend=[], fields={}, methods={}), ច=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ច, impl=[], extend=[ኴ, ۿೕ], fields={}, methods={}), ꬅ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꬅ, impl=[], extend=[], fields={}, methods={}), ꮣౣൗ܏ꪰ‪=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꮣౣൗ܏ꪰ‪, impl=[ਉ], extend=[], fields={}, methods={}), ﹩=Program.ClassDeclaration(isCapability=true, isInterface=false, name=﹩, impl=[ᮈ], extend=[], fields={}, methods={ⁿੑ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=֏ॣ), name=ⁿੑ, expression=)}), ྋ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ྋ, impl=[], extend=[ŧ഼༷ೈۡඃ], fields={}, methods={})}, main=ྋ⃩)
Program(classDeclarations={ᝰ૪ઃ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᝰ૪ઃ, impl=[], extend=[], fields={}, methods={}), ਝ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ਝ, impl=[], extend=[], fields={ሽ៩ꪸे=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ງ), name=ሽ៩ꪸे)}, methods={ꢓ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᛴ), name=ꢓ, expression=19), ￗୁ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=סּ‭), name=ￗୁ, expression=Expression.HeadExpr(signalExpr=false)), ᶖꙸ꫁ঃ߆ౣ़ꣃ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=꠸ꩍ), name=ᶖꙸ꫁ঃ߆ౣ़ꣃ, expression=DotExpression.FieldAssignExpr(receiver=ꕣ, fieldName=ᜀ, value=0.0)), ڨ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ຈ), name=ڨ, expression=DotExpression.FieldAssignExpr(receiver=this, fieldName=ꝯ, value=176))})}, main=ໜ)
Program(classDeclarations={ꠙ᳭=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꠙ᳭, impl=[], extend=[], fields={}, methods={}), ଲ〫፝ઃ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ଲ〫፝ઃ, impl=[], extend=[], fields={ヤົ꘡ੋે߰=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ａ), name=ヤົ꘡ੋે߰)}, methods={ఽ༷=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ঞ), name=ఽ༷, expression=54272)}), ᰢ௨҆=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᰢ௨҆, impl=[], extend=[], fields={ῷ៝=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ⴭ), name=ῷ៝), ꬃૢ߯ꚟ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=וּᝲ), name=ꬃૢ߯ꚟ), ኻ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ౙ᩼), name=ኻ), ៗී=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=૱), name=ៗී)}, methods={ᦝ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=க), name=ᦝ, expression=400)}), ቝ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ቝ, impl=[], extend=[ᜱ꫁, ª, ຍ༵, ὲ], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=ۻ઼ࠖ࠙ྖٰٰ, args=[Expression.SignalConstructionExpr(head=false, tail=true)])))
Program(classDeclarations={ၮ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ၮ, impl=[], extend=[], fields={}, methods={})}, main=0.546)
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(receiver=ᾟଃ, fieldName=$))
Program(classDeclarations={ଉ઼=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ଉ઼, impl=[], extend=[], fields={}, methods={}), ൠꢀ3=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ൠꢀ3, impl=[], extend=[], fields={}, methods={}), ۋঁ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ۋঁ, impl=[], extend=[ෆૻ܏], fields={}, methods={})}, main=31)
Program(classDeclarations={}, main=\')
Program(classDeclarations={ఊి=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ఊి, impl=[], extend=[], fields={}, methods={}), ྋং=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ྋং, impl=[], extend=[], fields={}, methods={ᚲ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=⁔), name=ᚲ, expression=Expression.LetExpr(mdf=IMM, name=ꣻ, value=false, boundTo=\')), ͼ〪꘧೦=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⅉ᯦ොׄ), name=ͼ〪꘧೦, expression=77040.0), Ωꧥ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=MUT, isLifted=false, name=ಜ), name=Ωꧥ, expression=false), ऽ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᳮ), name=ऽ, expression=DotExpression.FieldAccessExpr(receiver=0, fieldName=ଦၘ))}), ᪧ꤫=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᪧ꤫, impl=[ͳ], extend=[], fields={}, methods={ﻆ઼=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⳬ), name=ﻆ઼, expression=false), Ꙛ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ￇॣၭૢ), name=Ꙛ, expression=Expression.InstantiationExpr(name=דּ, args=[DotExpression.FieldAccessExpr(receiver=Expression.InstantiationExpr(name=ቌ, args=[0]), fieldName=ൎ)])), ꣻ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ச), name=ꣻ, expression=0.234375), 䪷಼=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=MUT, isLifted=false, name=ꩅ), name=䪷಼, expression=Expression.HeadExpr(signalExpr=1))})}, main=ﻣ)
Program(classDeclarations={ꜚ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꜚ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=true)
Program(classDeclarations={ꠟ᜴᳭༙߯꫁=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꠟ᜴᳭༙߯꫁, impl=[], extend=[], fields={}, methods={})}, main=70)
Program(classDeclarations={লຼ๖ᜒ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=লຼ๖ᜒ, impl=[], extend=[ὕၘ, ৲, Ὓ, ﬀ], fields={}, methods={})}, main=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=ܐ, value=this, boundTo=Expression.EmptySignalExpr()), tail=0.0))
Program(classDeclarations={}, main=0)
Program(classDeclarations={ٯ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ٯ, impl=[ᙵ], extend=[], fields={ઽ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=Ù᮹᱆), name=ઽ)}, methods={})}, main=Expression.HeadExpr(signalExpr=this))
Program(classDeclarations={}, main=\145)
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ꞔ᷼, value=଱﩮\t, boundTo=this))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=సૣ᱃ܑ, value=Expression.SignalConstructionExpr(head=true, tail=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=15.0))), boundTo=DotExpression.FieldAccessExpr(receiver=, fieldName=Ἔ)))
Program(classDeclarations={⁔=Program.ClassDeclaration(isCapability=false, isInterface=true, name=⁔, impl=[], extend=[ὀ, ꮕੋ྇⳯, ꬪ߰, ꘪ⃑ၳؙ, ꞓ, ࠨꦸၤ, ૱], fields={}, methods={}), ℕ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ℕ, impl=[], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=DotExpression.FieldAssignExpr(receiver=Expression.HeadExpr(signalExpr=7382.0), fieldName=ꣶၱ, value=Expression.InstantiationExpr(name=ௐ, args=[]))), tail=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=0))))
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ト, args=[]))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=READ, name=ΐ༵, value=Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=ℸឹ, args=[39, Expression.LetExpr(mdf=IMM, name=ֆ, value=Expression.LetExpr(mdf=IMM, name=Ͷ᠒, value=3.0E-79, boundTo=ºં꠆), boundTo=DotExpression.CallExpr(receiver=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=_ಿ, value=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=Expression.SignalConstructionExpr(head=false, tail=DotExpression.FieldAssignExpr(receiver=false, fieldName=ᢄ༹ꪰ⳱ᩝ, value=8))), tail=Expression.TailExpr(signalExpr=ղ៤੯)), boundTo=Expression.LetExpr(mdf=IMM, name=ꣽஂ, value=Expression.HeadExpr(signalExpr=𞺋), boundTo=Expression.SignalConstructionExpr(head=0, tail=Expression.InstantiationExpr(name=ວ, args=[])))))), isLifted=false, methodName=ﵗ, arguments=[Expression.EmptySignalExpr()])), Expression.InstantiationExpr(name=ꜟ, args=[0.75]), ])), boundTo=true))
Program(classDeclarations={ߺ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ߺ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=µೣ, args=[])))
Program(classDeclarations={ᱤ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᱤ, impl=[], extend=[ഋ಼્ꪾั], fields={}, methods={}), ꤿܑׄⷽୣ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꤿܑׄⷽୣ, impl=[], extend=[Ⱒ଼ۣૅ], fields={}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ⷒ, args=[100.0, this, ]))
Program(classDeclarations={Ͷ៑=Program.ClassDeclaration(isCapability=true, isInterface=false, name=Ͷ៑, impl=[], extend=[], fields={}, methods={Ά=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ఉ), name=Ά, expression=true), લు=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ଽೕׁ), name=લు, expression=DotExpression.CallExpr(receiver=0, isLifted=true, methodName=ᵱ, arguments=[]))}), み=Program.ClassDeclaration(isCapability=false, isInterface=false, name=み, impl=[], extend=[], fields={ⷛੑ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=煮ᮂ), name=ⷛੑ), Ç­෨໌=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ᥘ᧑༿҃), name=Ç­෨໌), ۦ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꬂ), name=ۦ), ῆၱ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ៗ), name=ῆၱ), Ɦ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Ⴧ), name=Ɦ)}, methods={})}, main=Expression.HeadExpr(signalExpr=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=﹍٨ꪳ, value=ೞం, boundTo=true), tail=this)))
Program(classDeclarations={ⅈ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⅈ, impl=[], extend=[Ｚൄ], fields={}, methods={}), ﬔ༷=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ﬔ༷, impl=[], extend=[], fields={}, methods={}), ℾ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ℾ, impl=[], extend=[], fields={}, methods={})}, main=)
Program(classDeclarations={יִ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=יִ, impl=[], extend=[], fields={}, methods={}), ਸٜ꫁ୌ﻿=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ਸٜ꫁ୌ﻿, impl=[〸], extend=[], fields={ຜ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ଲ), name=ຜ)}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=ꣽ, value=Expression.LetExpr(mdf=IMM, name=ᤖ, value=Expression.EmptySignalExpr(), boundTo=0.5), boundTo=Expression.EmptySignalExpr()))
Program(classDeclarations={ᡇ᠎５࡚=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᡇ᠎５࡚, impl=[], extend=[ᇩ, יִੇੵꪳ, ਙၱਁ], fields={}, methods={})}, main=Expression.TailExpr(signalExpr=101))
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=ꕱ, args=[])))
Program(classDeclarations={ͱ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ͱ, impl=[], extend=[], fields={}, methods={}), ℨ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ℨ, impl=[ꩺ, ᾌ], extend=[], fields={}, methods={ꫂ௩ᰪࠩે༹ༀ꠆꫁ী=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ৼ), name=ꫂ௩ᰪࠩે༹ༀ꠆꫁ী, expression=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=Expression.InstantiationExpr(name=ࡢ᳭, args=[])))}), ⷔ꣰=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ⷔ꣰, impl=[], extend=[], fields={}, methods={ⶐ゙᭰=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ᎉۭෛ), name=ⶐ゙᭰, expression=DotExpression.FieldAccessExpr(receiver=DotExpression.CallExpr(receiver=Expression.InstantiationExpr(name=ஃ, args=[true, true]), isLifted=false, methodName=Ԏ, arguments=[]), fieldName=ᥴި)), ﬀࣰ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=︳7), name=ﬀࣰ, expression=Expression.SignalConstructionExpr(head=DotExpression.FieldAccessExpr(receiver=2, fieldName=￠⳯), tail=389))})}, main=this)
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=0.021484375)
Program(classDeclarations={}, main=18)
Program(classDeclarations={ᭅ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᭅ, impl=[], extend=[], fields={ጔుࠪ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ﷂᝒ), name=ጔుࠪ), ၰൈ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=እၢ〭၅), name=ၰൈ), ম=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꫝ), name=ম)}, methods={}), Ν=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ν, impl=[ⶮ, ꛘ, ⵯ], extend=[], fields={}, methods={ۺ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ㇾ਼؜ꠋೢ), name=ۺ, expression=Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=true, tail=Expression.TailExpr(signalExpr=))))})}, main=Expression.TailExpr(signalExpr=ꩂ〪))
Program(classDeclarations={ⳳ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ⳳ, impl=[གᯬ᳛], extend=[], fields={ￖ=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=ℤೣ), name=ￖ), ᙻੵᜳ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ཌྷᨘ), name=ᙻੵᜳ)}, methods={})}, main=)
Program(classDeclarations={Х=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Х, impl=[], extend=[], fields={}, methods={}), ༀ೦=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ༀ೦, impl=[], extend=[], fields={µ=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ꬋႍ⃜), name=µ), ᨊꚞ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᱬ), name=ᨊꚞ)}, methods={ಎ=Program.Method(mdf=READ, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ꥢ), name=ಎ, expression=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=ꭢ, args=[]), tail=true))})}, main=false)
Program(classDeclarations={}, main=)
Program(classDeclarations={}, main=)
Program(classDeclarations={Ὕຼ᱓=Program.ClassDeclaration(isCapability=true, isInterface=false, name=Ὕຼ᱓, impl=[], extend=[], fields={ᦩ=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ౙ), name=ᦩ), ˋ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ײꩃ᪅࿆), name=ˋ), ⴭ્ে=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ޱ්), name=ⴭ્ে), ᳮ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=촄⵿), name=ᳮ), ᰏ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ৎ­), name=ᰏ)}, methods={Ⳬෲ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=false, name=ઽੵॎ), name=Ⳬෲ, expression=Expression.TailExpr(signalExpr=)), ェ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ৰੑ), name=ェ, expression=Expression.SignalConstructionExpr(head=DotExpression.CallExpr(receiver=this, isLifted=true, methodName=ᥱ, arguments=[300.0, 609, Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=ⷞ, args=[Expression.SignalConstructionExpr(head=, tail=๜᪊)]), tail=Expression.InstantiationExpr(name=ஃౣ, args=[])))), tail=4.9794186826571916E181)), Expression.HeadExpr(signalExpr=Expression.EmptySignalExpr())]), tail=\f\uF19c)), ꘪ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ﹲ), name=ꘪ, expression=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr())), ⳍ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ױꩽᝳؚ), name=ⳍ, expression=false)}), Ἓ᪈ྃ︅=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ἓ᪈ྃ︅, impl=[], extend=[], fields={}, methods={}), ੳｔ໘ꥇ଼᳸ꪰᨙ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ੳｔ໘ꥇ଼᳸ꪰᨙ, impl=[ⳳ৮゚], extend=[], fields={ܨ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꪱꪰ), name=ܨ)}, methods={})}, main=Expression.InstantiationExpr(name=ᴎ᭗⵿ၴ, args=[]))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=ඹ֧, args=[])))
Program(classDeclarations={ῑऺ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ῑऺ, impl=[], extend=[ￅౄ಼, ල่], fields={}, methods={})}, main=false)
Program(classDeclarations={}, main=8)
Program(classDeclarations={}, main=true)
Program(classDeclarations={ٮ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ٮ, impl=[], extend=[සٰ], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=))
Program(classDeclarations={}, main=0.625)
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ቝ்=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ቝ், impl=[], extend=[], fields={ⷐ￺ၢ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ݪ୬ൣꦽ), name=ⷐ￺ၢ), ਇ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ﹱ꧲), name=ਇ)}, methods={})}, main=)
Program(classDeclarations={ꬋැꪾ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꬋැꪾ, impl=[], extend=[ﬓꦁ, Ὑ, ῲ, ൔ], fields={}, methods={})}, main=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr()))
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.EmptySignalExpr())))
Program(classDeclarations={ୡ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ୡ, impl=[], extend=[ꪶଃ, ྋூۨৃ੍꘧, Ꙡ], fields={}, methods={})}, main=Expression.InstantiationExpr(name=ㇰ, args=[]))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=248, tail=true))
Program(classDeclarations={ዅꯣ1=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ዅꯣ1, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(name=ᥢ, args=[Expression.TailExpr(signalExpr=DotExpression.CallExpr(receiver=Expression.EmptySignalExpr(), isLifted=true, methodName=ည, arguments=[])), Expression.SignalConstructionExpr(head=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ކၠઁᮂ, value=, boundTo=Expression.EmptySignalExpr())), tail=Expression.InstantiationExpr(name=ৡੂੑ, args=[])), Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=ఈ, args=[]), tail=this), Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=හ༢, args=[]))), Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr()))]))
Program(classDeclarations={য=Program.ClassDeclaration(isCapability=false, isInterface=true, name=য, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=ኙࣦື, value=ꫂ, boundTo=Expression.SignalConstructionExpr(head=false, tail=this)))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ι, value=this, boundTo=Expression.EmptySignalExpr()))
Program(classDeclarations={}, main=DotExpression.FieldAssignExpr(receiver=true, fieldName=ຽௗॢᮂ્, value=this))
Program(classDeclarations={Ⴛ᷾=Program.ClassDeclaration(isCapability=true, isInterface=false, name=Ⴛ᷾, impl=[ꧢ], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=0))
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=אַ, value=this, boundTo=Expression.LetExpr(mdf=READ, name=ᭋ, value=Expression.LetExpr(mdf=IMM, name=Þ, value=Expression.EmptySignalExpr(), boundTo=1), boundTo=Expression.HeadExpr(signalExpr=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=MUT, name=ᥳ੍, value=Expression.LetExpr(mdf=IMM, name=ଢ଼, value=Expression.InstantiationExpr(name=ኀ, args=[]), boundTo=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr()), tail=Expression.TailExpr(signalExpr=this))), boundTo=this), tail=Expression.EmptySignalExpr()))))))
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ꦙ๘ఀ҆⁩ྗۧ, args=[ܣ, DotExpression.CallExpr(receiver=false, isLifted=true, methodName=ၹୖ, arguments=[false]), Expression.LetExpr(mdf=IMM, name=ඹఀ, value=Expression.HeadExpr(signalExpr=false), boundTo=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=400044))]))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=DotExpression.FieldAccessExpr(receiver=2, fieldName=ଲഀৄꯧ꯭ႇ), tail=0), tail=this))
Program(classDeclarations={Ϳ꧀=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ϳ꧀, impl=[], extend=[], fields={}, methods={}), ꠃ⁫᱄ൈ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꠃ⁫᱄ൈ, impl=[], extend=[], fields={}, methods={}), ࠁ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ࠁ, impl=[ⷆ, Άᬃ᪑ᬂਃ‪ූੋ, ￕ͖, ﭣ], extend=[], fields={}, methods={ஈ꣒ೈ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ὖ), name=ஈ꣒ೈ, expression=this), ᪧ༨=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=false, name=ꣽໍෳ), name=ᪧ༨, expression=this), ຫ༡=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ⁿꙷ), name=ຫ༡, expression=Expression.HeadExpr(signalExpr=this)), ኌ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ૹ), name=ኌ, expression=22.5)}), ءઁꩃ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ءઁꩃ, impl=[], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(head=ⷘ༢, tail=0))
Program(classDeclarations={}, main=true)
Program(classDeclarations={ⶤ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ⶤ, impl=[], extend=[], fields={}, methods={}), ༀ᳭=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ༀ᳭, impl=[], extend=[], fields={}, methods={}), ￍິૣ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ￍິૣ, impl=[], extend=[థᮁ‮۟], fields={}, methods={}), ᝏ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᝏ, impl=[], extend=[ቒ, ଭ], fields={}, methods={}), ͺ࡙=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ͺ࡙, impl=[], extend=[], fields={}, methods={})}, main=6)
Program(classDeclarations={}, main=ῄౢ)
Program(classDeclarations={}, main=14.3125)
Program(classDeclarations={ஜ᤻꫁=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ஜ᤻꫁, impl=[ⵂ, ҷ], extend=[], fields={⁀=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ㅎ৯), name=⁀), ᩃ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ቓꙶ᪗ׇ), name=ᩃ), ৼ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ὓ႙), name=ৼ), ℿ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ꪽ), name=ℿ)}, methods={ᴑᤲ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ⴲ꤫ෳᝓ), name=ᴑᤲ, expression=this), ꩺ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=MUT, isLifted=false, name=Ἑᤨ), name=ꩺ, expression=DotExpression.CallExpr(receiver=0, isLifted=false, methodName=ꤷِ᪽, arguments=[]))}), پ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=پ, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(name=ⶏୣ, args=[]))
Program(classDeclarations={}, main=DotExpression.FieldAssignExpr(receiver=true, fieldName=Ῑ, value=404))
Program(classDeclarations={ຄ၇=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ຄ၇, impl=[ﹷ᧓, ＄, ὔ൯଼], extend=[], fields={}, methods={ࢰ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=Ά᷇), name=ࢰ, expression=Expression.LetExpr(mdf=IMM, name=Ἑၴၢꦂັ؜, value=Expression.EmptySignalExpr(), boundTo=Expression.EmptySignalExpr())), ꤥ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=MUT, isLifted=false, name=ල༾), name=ꤥ, expression=true)}), ল᩿=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ল᩿, impl=[], extend=[], fields={}, methods={ใ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ힿો), name=ใ, expression=Expression.HeadExpr(signalExpr=true)), ῇ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⸯ), name=ῇ, expression=Expression.TailExpr(signalExpr=false))})}, main=7.0E-4)
Program(classDeclarations={}, main=)
Program(classDeclarations={}, main=false)
Program(classDeclarations={ଲꩌ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ଲꩌ, impl=[], extend=[], fields={}, methods={}), ᚏ‌ꪲ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᚏ‌ꪲ, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(name=￠︇ᩕੁ, args=[7, this, Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=ᆆࣻ꫁, args=[Expression.EmptySignalExpr(), 1.7788713781538284E170]), tail=500.0)]))
Program(classDeclarations={ಀ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ಀ, impl=[], extend=[], fields={ಀ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ॠ), name=ಀ), ⰸ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ઑୈ), name=ⰸ)}, methods={ꗙ്=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ໆೢॊ), name=ꗙ്, expression=ᇵ), 卣᠑᳝=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꫝᰭ), name=卣᠑᳝, expression=0), ﰈৗꠋꤨ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⴧ), name=ﰈৗꠋꤨ, expression=ଐຶ), ﵼᬃٗ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ٮꠋ), name=ﵼᬃٗ, expression=Expression.TailExpr(signalExpr=סּ))})}, main=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ဿ߫, value=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=ᦊᮂ꣐, value=Expression.SignalConstructionExpr(head=, tail=Expression.EmptySignalExpr()), boundTo=340), tail=Ήᬃ), tail=Expression.TailExpr(signalExpr=)), boundTo=Expression.LetExpr(mdf=IMM, name=ՙׁ, value=Expression.LetExpr(mdf=IMM, name=ᨵ, value=15, boundTo=this), boundTo=DotExpression.CallExpr(receiver=৲ۧۙ, isLifted=false, methodName=ퟄ, arguments=[])))))
Program(classDeclarations={}, main=)
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=㪚꣐ꯧ, value=Expression.EmptySignalExpr(), boundTo=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=ቘ, value=DotExpression.FieldAssignExpr(receiver=this, fieldName=শ, value=Expression.LetExpr(mdf=IMM, name=ᤜ, value=㫧, boundTo=true)), boundTo=DotExpression.CallExpr(receiver=Expression.InstantiationExpr(name=ச᠐, args=[]), isLifted=true, methodName=ਏ, arguments=[1.0, 0.875])), tail=Expression.EmptySignalExpr()), tail=Expression.TailExpr(signalExpr=)))))
Program(classDeclarations={ဿ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ဿ, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=)
Program(classDeclarations={}, main=5)
Program(classDeclarations={︴ၠᨘ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=︴ၠᨘ, impl=[બ], extend=[], fields={Ⴧ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ષେۧೈ᧒), name=Ⴧ)}, methods={ਵ‪ົᤤ଼᭙=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=Ꞵ), name=ਵ‪ົᤤ଼᭙, expression=Expression.TailExpr(signalExpr=0.0))}), ᜠ‎ේၤஂುิ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᜠ‎ේၤஂುิ, impl=[], extend=[ഐ឵ꦂꥍ꣄ೣ, ສ᩺, ㆣ], fields={}, methods={})}, main=true)
Program(classDeclarations={ଽ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ଽ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=Expression.SignalConstructionExpr(head=0.0, tail=ௐꯣ)))
Program(classDeclarations={Ӏৢၲ‮܏=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Ӏৢၲ‮܏, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(name=ઽৌ, args=[177.0]))
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=))
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(receiver=ઝ, fieldName=ලੀ))
Program(classDeclarations={ᳬ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᳬ, impl=[], extend=[יִঃ়], fields={}, methods={})}, main=Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=ￜ, args=[])))
Program(classDeclarations={ࢥ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ࢥ, impl=[ᜪ֡ᬂ], extend=[], fields={}, methods={ޱ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=true, name=ૹ), name=ޱ, expression=1), ঐᢅೢ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ꞙ), name=ঐᢅೢ, expression=50)}), ਆ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ਆ, impl=[], extend=[], fields={}, methods={}), ꫛ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ꫛ, impl=[], extend=[], fields={}, methods={})}, main=0)
Program(classDeclarations={ꠇੵ᷾꘦=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꠇੵ᷾꘦, impl=[], extend=[], fields={}, methods={}), ਛ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ਛ, impl=[], extend=[ຖ꪿ႃ, ຊ, ﰍ1ౌ߀ེ॑ு҇, ቛ, հ, અ, ๅ], fields={}, methods={})}, main=1)
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=شܑ, args=[\f]))
Program(classDeclarations={ℤ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ℤ, impl=[], extend=[], fields={ষꪳᩕ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=㽗⁫ꙴ), name=ষꪳᩕ), ῑ=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=ೡ), name=ῑ), ۯ᭔̴=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=朗ଁୈꪰ), name=ۯ᭔̴), ᳵ꙯ꢀܑ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ٯ), name=ᳵ꙯ꢀܑ), ᛶ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=qꥊ๎), name=ᛶ), ວ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ମั), name=ວ), ヿ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ቘ), name=ヿ), ℑੵ᪺େ៣=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ය), name=ℑੵ᪺େ៣)}, methods={ॐ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ਖ᳭௮ை), name=ॐ, expression=Expression.HeadExpr(signalExpr=DotExpression.FieldAccessExpr(receiver=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ꞧ, value=true, boundTo=Expression.LetExpr(mdf=IMM, name=ᢧꦂௗ, value=90.0, boundTo=this)))), fieldName=ￂ))), ⴭੑ᳭=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ຈႆ), name=ⴭੑ᳭, expression=Expression.TailExpr(signalExpr=true)), ۅ߉ൗ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=$​꛱), name=ۅ߉ൗ, expression=56028)})}, main=false)
Program(classDeclarations={ຍ፝=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ຍ፝, impl=[], extend=[ঢ༹꘧, ꬑ], fields={}, methods={}), ࡥꚞꚟୢ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ࡥꚞꚟୢ, impl=[], extend=[ﶤு, ە⳱, ཁ], fields={}, methods={})}, main=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=ⴭ, args=[Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=)), DotExpression.FieldAccessExpr(receiver=ኌ᱉, fieldName=ꣻᬶ)]))))))
Program(classDeclarations={}, main=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ໆ, value=Expression.InstantiationExpr(name=ꪹ゙, args=[0.0]), boundTo=5.1062874466998867E216)))
Program(classDeclarations={؋ꩼ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=؋ꩼ, impl=[ᝍꪲଃ​ꥋଃ꣘ై᱔ؔ, ಣᢅ, ⶼ, ߺ᱘࿆܏༵ී], extend=[], fields={}, methods={})}, main=false)
Program(classDeclarations={ຫ­ၙৌ᱖៣꙯ꚞᝦ﻿=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ຫ­ၙৌ᱖៣꙯ꚞᝦ﻿, impl=[], extend=[], fields={}, methods={})}, main=1.1503324881278773E290)
Program(classDeclarations={ၡীꦃ࣫᪕=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ၡীꦃ࣫᪕, impl=[], extend=[ℇᤲ়ꙷꠋ༷], fields={}, methods={}), ՙ೮=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ՙ೮, impl=[], extend=[], fields={ૠ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=_), name=ૠ), ۻ၈=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꫀ੨ܶ), name=ۻ၈)}, methods={ண=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ਅ), name=ண, expression=Expression.EmptySignalExpr()), ￎ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ͽ), name=ￎ, expression=DotExpression.FieldAssignExpr(receiver=, fieldName=々, value=4))}), က໔ᩗ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=က໔ᩗ, impl=[ͷ⁬, ຄ, ኼ೦ඃ﻿ౢऻ౯], extend=[], fields={ℑ୫=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ﺣ), name=ℑ୫)}, methods={Ὑ꧔ੵ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ࢷ), name=Ὑ꧔ੵ, expression=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr())), ꮤ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ࢸ), name=ꮤ, expression=3.19), ℛ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=MUT, isLifted=false, name=瓩ීᢆ), name=ℛ, expression=ᔘႆ), এ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ℂ߃), name=এ, expression=DotExpression.CallExpr(receiver=, isLifted=true, methodName=ྋ, arguments=[DotExpression.FieldAssignExpr(receiver=this, fieldName=ႎ, value=\6)])), Ὀꪰꩍ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ቑֿ), name=Ὀꪰꩍ, expression=ᪧూ᷼)})}, main=Expression.HeadExpr(signalExpr=Expression.EmptySignalExpr()))
Program(classDeclarations={ݖ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ݖ, impl=[ஐ], extend=[], fields={ⴭ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ߏ), name=ⴭ), ꫀႃ᠎⃡ႉ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᱠ゚ᷪꦿ), name=ꫀႃ᠎⃡ႉ)}, methods={})}, main=Expression.SignalConstructionExpr(head=, tail=0.1201171875))
Program(classDeclarations={}, main=ᧃꫮ꯬᱓़)
Program(classDeclarations={}, main=)
Program(classDeclarations={ଢ଼=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ଢ଼, impl=[], extend=[ↇ], fields={}, methods={})}, main=this)
Program(classDeclarations={ঐ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ঐ, impl=[], extend=[ᮯ‫ᩞꙻ], fields={}, methods={}), Όꢁ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=Όꢁ, impl=[], extend=[ῃၳ], fields={}, methods={})}, main=this)
Program(classDeclarations={ⸯ۟=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⸯ۟, impl=[], extend=[ஙၣ], fields={}, methods={})}, main=3)
Program(classDeclarations={ஏᝒੱ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ஏᝒੱ, impl=[], extend=[], fields={ﶶෳ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ᝮ), name=ﶶෳ)}, methods={}), Ẩ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ẩ, impl=[￠, ປ፞꫁], extend=[], fields={ᳱྏᩫ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=㰕︯), name=ᳱྏᩫ)}, methods={})}, main=205.0)
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ຊ᩿, value=31, boundTo=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.EmptySignalExpr()))))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=Ὕꨳੑၱె, value=7380, boundTo=Expression.TailExpr(signalExpr=this)), tail=0))
Program(classDeclarations={ⁿ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⁿ, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.FieldAssignExpr(receiver=this, fieldName=ῃ, value=11))
Program(classDeclarations={ୡᰴ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ୡᰴ, impl=[], extend=[ৠू༷ꪰ, סּꠥ], fields={}, methods={}), ͺ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ͺ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(mdf=IMM, name=Ὓ, value=940.0, boundTo=this))
Program(classDeclarations={}, main=0.0020427703857421875)
Program(classDeclarations={}, main=ର)
Program(classDeclarations={ɠ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ɠ, impl=[], extend=[], fields={}, methods={ᳪ᳐ၖ᮲᠎=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=డ), name=ᳪ᳐ၖ᮲᠎, expression=Expression.HeadExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=￦ꫯ, value=DotExpression.FieldAssignExpr(receiver=this, fieldName=ஏ꩐෮︨ᝒං, value=Expression.TailExpr(signalExpr=8)), boundTo=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=ꤼꪰꙹূꧥ଼ం))))), Ⴧ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⵯ), name=Ⴧ, expression=Expression.LetExpr(mdf=IMM, name=ꧏꫫਃெ, value=Expression.HeadExpr(signalExpr=0.0), boundTo=\udCc4\\𞣗\uub261\b𐮒)), ᣀꧥ෫=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ণ), name=ᣀꧥ෫, expression=t)}), ਇ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ਇ, impl=[ﬀ, 㝣, ℨ꙯ऺ, ៗ໕ি], extend=[], fields={ຊീ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=µ), name=ຊീ)}, methods={})}, main=Expression.InstantiationExpr(name=ర, args=[]))
Program(classDeclarations={ቓഃৢ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ቓഃৢ, impl=[], extend=[], fields={}, methods={})}, main=false)
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ળ༘, value=DotExpression.CallExpr(receiver=this, isLifted=true, methodName=ℭ, arguments=[]), boundTo=DotExpression.FieldAssignExpr(receiver=ꬆၞ, fieldName=ㆢ, value=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=READ, name=ઽ಼꠆, value=\b\b\5🠐𝪠, boundTo=\364)))))
Program(classDeclarations={}, main=8.0E33)
Program(classDeclarations={ຽ４=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ຽ４, impl=[], extend=[], fields={}, methods={ୱ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ޱ७ྲྀ᳭), name=ୱ, expression=), ￔޯೣ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ஆ), name=ￔޯೣ, expression=Expression.InstantiationExpr(name=ឝ, args=[])), ܣ꙽=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=READ, isLifted=false, name=ﶷੇॣ᳒߳ꩌె), name=ܣ꙽, expression=Expression.EmptySignalExpr()), ಭ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ວ), name=ಭ, expression=Expression.InstantiationExpr(name=懲⃡, args=[96, ]))})}, main=Expression.HeadExpr(signalExpr=true))
Program(classDeclarations={ଳைౖ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ଳைౖ, impl=[], extend=[], fields={}, methods={})}, main=῵)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=666999.75, tail=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=Expression.LetExpr(mdf=IMM, name=ᜂ؂ౣ, value=Expression.HeadExpr(signalExpr=DotExpression.FieldAssignExpr(receiver=ꣴ, fieldName=ˬ, value=Expression.EmptySignalExpr())), boundTo=Expression.InstantiationExpr(name=Ꜽ, args=[ൡ, Expression.EmptySignalExpr()]))), tail=Expression.EmptySignalExpr())), tail=DotExpression.CallExpr(receiver=5.90625, isLifted=false, methodName=ઇ֫꧑, arguments=[])))
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(receiver=Expression.HeadExpr(signalExpr=DotExpression.CallExpr(receiver=true, isLifted=true, methodName=ஜܑܷ࠙꧖, arguments=[Expression.InstantiationExpr(name=ಽ۟⳯ූ꠆ಁ᯲᳭, args=[])])), fieldName=ழ))
Program(classDeclarations={ჳ઼ᰩ઼=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ჳ઼ᰩ઼, impl=[ⸯ], extend=[], fields={}, methods={}), ဿ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ဿ, impl=[கꪾ, ⷝꫂෲ, ਹ], extend=[], fields={ၦ۵=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=褐), name=ၦ۵), ꩮࠗ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ⅎ), name=ꩮࠗ), ߴֳ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=¤‍ꧥ), name=ߴֳ)}, methods={ė=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ⳳ), name=ė, expression=Expression.SignalConstructionExpr(head=true, tail=this))})}, main=DotExpression.CallExpr(receiver=Expression.InstantiationExpr(name=ງ, args=[Expression.LetExpr(mdf=IMM, name=ߺ᠐়⵿᭭, value=ﮜ, boundTo=Expression.LetExpr(mdf=IMM, name=ￓ, value=Expression.EmptySignalExpr(), boundTo=Expression.TailExpr(signalExpr=Expression.SignalConstructionExpr(head=, tail=38)))), Expression.HeadExpr(signalExpr=Expression.EmptySignalExpr()), Expression.LetExpr(mdf=IMM, name=b්ૄᮂ, value=false, boundTo=3.0)]), isLifted=false, methodName=וั້⁫௬, arguments=[]))
Program(classDeclarations={}, main=ᜇ꫁ꯥࠧၟாࣲ)
Program(classDeclarations={ဿ൧﻿﻿̱๘࠙=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ဿ൧﻿﻿̱๘࠙, impl=[], extend=[], fields={}, methods={}), ᨢ᠗ꚟ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᨢ᠗ꚟ, impl=[], extend=[], fields={}, methods={ꪵ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=Δ), name=ꪵ, expression=Expression.LetExpr(mdf=IMM, name=ⴧิੈં᳒྆ൣ፟, value=this, boundTo=false)), ⶺ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=ᮏௗᤵᩜ), name=ⶺ, expression=ὖ)})}, main=Expression.SignalConstructionExpr(head=Expression.InstantiationExpr(name=ⴙ൧٣, args=[0]), tail=DotExpression.CallExpr(receiver=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr()), tail=Expression.LetExpr(mdf=CAPSULE, name=ၡൗੁ᠘, value=Expression.EmptySignalExpr(), boundTo=ۦ)), isLifted=false, methodName=ˢ, arguments=[])))
Program(classDeclarations={}, main=9.7173635072E10)
Program(classDeclarations={}, main=)
Program(classDeclarations={ኰ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ኰ, impl=[ꬭ഻], extend=[], fields={യోഃ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ᴝ゙), name=യోഃ)}, methods={Ͷ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=꠸؅০ೆ়), name=Ͷ, expression=DotExpression.FieldAssignExpr(receiver=false, fieldName=ணૌ, value=Expression.InstantiationExpr(name=ꧪ〯᭯, args=[7, , 322.0, this, Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=ⅿੑ, args=[ꬤٰ, this, Expression.TailExpr(signalExpr=ܔ), 𞄰\4]))]))), 〡಼ࠫ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ˮ), name=〡಼ࠫ, expression=DotExpression.CallExpr(receiver=true, isLifted=false, methodName=ᢜઁึ, arguments=[]))}), ᨂ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ᨂ, impl=[J, ꝕ, Ή], extend=[], fields={ꫲ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ױ), name=ꫲ), ꣳ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=Ｘ), name=ꣳ), ቱຸ=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=＿), name=ቱຸ), ざ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ൔାၠꩃୢࠥ୮), name=ざ)}, methods={এ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=ྌꠂெ), name=এ, expression=true)}), ۮꦀෛ৪=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ۮꦀෛ৪, impl=[ਐ๑ࠢ], extend=[], fields={}, methods={ၡ⁣=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ໜꚞ௦), name=ၡ⁣, expression=Expression.LetExpr(mdf=IMM, name=〱, value=Expression.HeadExpr(signalExpr=true), boundTo=14)), ͼ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ῇ᩠ৗ), name=ͼ, expression=Expression.EmptySignalExpr())}), எ૫=Program.ClassDeclaration(isCapability=false, isInterface=false, name=எ૫, impl=[﹩ੑ], extend=[], fields={}, methods={}), ஞ۬=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ஞ۬, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.FieldAccessExpr(receiver=Expression.HeadExpr(signalExpr=ൔ), fieldName=ة))
Program(classDeclarations={}, main=0)
Program(classDeclarations={}, main=this)
Program(classDeclarations={Ｈ꩘ైೈ꙯༡ෲ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ｈ꩘ైೈ꙯༡ෲ, impl=[], extend=[], fields={ঐ‌=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ೞ), name=ঐ‌)}, methods={_ؑ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ӻ᳐), name=_ؑ, expression=ꠉ), ൎో᠍⃛=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=સෙ), name=ൎో᠍⃛, expression=false), ﺴ᳴=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=︳ੵઁ⁧ᮂ), name=ﺴ᳴, expression=￡ᤢ)})}, main=true)
Program(classDeclarations={}, main=DotExpression.CallExpr(receiver=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=MUT, name=ᮯ­, value=Expression.InstantiationExpr(name=ꕜ, args=[this]), boundTo=Expression.LetExpr(mdf=IMM, name=ℂૉ಼ൗ, value=true, boundTo=364.7373046875)), tail=0), isLifted=true, methodName=ⶪ༷ꚞ, arguments=[]))
Program(classDeclarations={அ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=அ, impl=[ⴧ, ண], extend=[], fields={ㄪ‭=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ˮ੮), name=ㄪ‭)}, methods={})}, main=𝔋\32\t\uu8BdE)
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=￦))
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=0))
Program(classDeclarations={ᮙູ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᮙູ, impl=[], extend=[], fields={}, methods={})}, main=7405)
Program(classDeclarations={}, main=1764)
Program(classDeclarations={}, main=this)
Program(classDeclarations={ⴧ⃒ੇੀ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⴧ⃒ੇੀ, impl=[], extend=[], fields={}, methods={}), 횤꫁=Program.ClassDeclaration(isCapability=true, isInterface=false, name=횤꫁, impl=[], extend=[], fields={}, methods={ױ໔=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ⶶ), name=ױ໔, expression=Expression.TailExpr(signalExpr=this)), Ϫଃ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ẕ꩖), name=Ϫଃ, expression=173.0)}), ὶ͔=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ὶ͔, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ٯ᰷, value=Expression.HeadExpr(signalExpr=0.0), boundTo=true))
Program(classDeclarations={ྊ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ྊ, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=18)
Program(classDeclarations={ঽ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ঽ, impl=[], extend=[], fields={}, methods={})}, main=)
Program(classDeclarations={લ഼=Program.ClassDeclaration(isCapability=false, isInterface=true, name=લ഼, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=ఽྗ۠)
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ዀ, value=Expression.SignalConstructionExpr(head=ܞ, tail=Expression.TailExpr(signalExpr=2)), boundTo=Expression.TailExpr(signalExpr=)))
Program(classDeclarations={}, main=)
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ℕ, value=DotExpression.CallExpr(receiver=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=ࢶ᠌ꦀ)), isLifted=false, methodName=ஙౕ, arguments=[Expression.HeadExpr(signalExpr=DotExpression.CallExpr(receiver=Expression.EmptySignalExpr(), isLifted=true, methodName=ଶ, arguments=[Expression.EmptySignalExpr(), Expression.EmptySignalExpr()]))]), boundTo=Ὴᢆ))
Program(classDeclarations={}, main=Expression.LetExpr(mdf=IMM, name=ไ꫁, value=1, boundTo=Expression.HeadExpr(signalExpr=DotExpression.CallExpr(receiver=800.0, isLifted=true, methodName=ᱛ଼, arguments=[Expression.InstantiationExpr(name=ૐ, args=[\5\3]), Expression.HeadExpr(signalExpr=40000.0), Expression.EmptySignalExpr(), Expression.LetExpr(mdf=MUT, name=ʹ႐፟, value=0.0, boundTo=Expression.InstantiationExpr(name=ⁱꥊ១, args=[]))]))))
Program(classDeclarations={ޢ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ޢ, impl=[ẏ꯭ꙹႂ], extend=[], fields={Ή༵ૢᢩ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ⴭ፝ઁಃ), name=Ή༵ૢᢩ)}, methods={Ἑା=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=હ፝), name=Ἑା, expression=256.0), Ｙ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=MUT, isLifted=false, name=ꩢ), name=Ｙ, expression=this)}), ︴ั=Program.ClassDeclaration(isCapability=false, isInterface=false, name=︴ั, impl=[ຽ൬, ۿ, অ༩, Ὰ], extend=[], fields={}, methods={}), ꁷꧥ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ꁷꧥ, impl=[], extend=[], fields={}, methods={})}, main=ꩁ꙯)
Program(classDeclarations={}, main=0.0)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=﹎, value=Expression.SignalConstructionExpr(head=Expression.LetExpr(mdf=IMM, name=ⶒ, value=, boundTo=ˮ᱂ꩃັ᩷ꙹ), tail=Expression.HeadExpr(signalExpr=Expression.HeadExpr(signalExpr=50))), boundTo=Expression.TailExpr(signalExpr=Expression.EmptySignalExpr())), tail=3)), tail=9.859375))
Program(classDeclarations={ꪱ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꪱ, impl=[], extend=[], fields={ͽ᮹=Program.Field(type=Program.Type(mdf=READ, isLifted=false, name=ꓞ), name=ͽ᮹)}, methods={})}, main=Expression.HeadExpr(signalExpr=this))
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=true)
Program(classDeclarations={ਖ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ਖ, impl=[ඳ￺], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(head=8.0E79, tail=30))
Program(classDeclarations={ೱ〪=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ೱ〪, impl=[ꪱ୩], extend=[], fields={ᨊ=Program.Field(type=Program.Type(mdf=MUT, isLifted=false, name=ৡ), name=ᨊ), ꩺ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=؋), name=ꩺ), ꩂୋ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꥨৗ꯭ඃ), name=ꩂୋ), મ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=‿), name=મ)}, methods={ꭤ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ኲ), name=ꭤ, expression=Expression.LetExpr(mdf=READ, name=ꧬౢ, value=true, boundTo=DotExpression.FieldAssignExpr(receiver=91.0, fieldName=ድ, value=DotExpression.CallExpr(receiver=Expression.EmptySignalExpr(), isLifted=false, methodName=ቖ໘, arguments=[Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=ၡ, args=[DotExpression.FieldAssignExpr(receiver=Expression.InstantiationExpr(name=হ४ܹ﻿߈, args=[]), fieldName=푷゚꤬, value=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=Å, args=[])))), tail=Expression.HeadExpr(signalExpr=true)))]))])))), ਹ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=יִꥍੑ), name=ਹ, expression=DotExpression.FieldAssignExpr(receiver=2.5803824424981994E20, fieldName=ᰠ, value=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=\uu4828෦)), tail=3847.0)))})}, main=Expression.SignalConstructionExpr(head=0, tail=Expression.LetExpr(mdf=IMM, name=ӏ, value=DotExpression.CallExpr(receiver=false, isLifted=false, methodName=ఽ, arguments=[Expression.EmptySignalExpr()]), boundTo=DotExpression.FieldAccessExpr(receiver=Expression.SignalConstructionExpr(head=Expression.TailExpr(signalExpr=), tail=Expression.HeadExpr(signalExpr=0)), fieldName=ꭏ))))
Program(classDeclarations={ᨴ‮࿆ຼ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᨴ‮࿆ຼ, impl=[], extend=[], fields={}, methods={}), ൺ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ൺ, impl=[ඊ, ச], extend=[], fields={ؿ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=Ｕ), name=ؿ)}, methods={ඔ᮴=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ጔು), name=ඔ᮴, expression=), ⶢ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=CAPSULE, isLifted=false, name=ਔৗு), name=ⶢ, expression=Expression.EmptySignalExpr()), Ⴋ꛰=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ଳ), name=Ⴋ꛰, expression=9.527906273786277E39)})}, main=Expression.HeadExpr(signalExpr=0.0))
Program(classDeclarations={ดꢀ８=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ดꢀ８, impl=[], extend=[], fields={}, methods={})}, main=אַᢩ੮९ᬁ࡛)
Program(classDeclarations={බؗ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=බؗ, impl=[], extend=[Ⴭꪳ, ᝮ], fields={}, methods={}), ᦝ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᦝ, impl=[], extend=[], fields={ব⳱=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ࠤꙷึ), name=ব⳱)}, methods={ꩵ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ກ), name=ꩵ, expression=Expression.TailExpr(signalExpr=4)), Ὑۙ꫁߅=Program.Method(mdf=IMM, returnType=Program.Type(mdf=READ, isLifted=false, name=ᢚꫯ), name=Ὑۙ꫁߅, expression=false), ຍ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ຍං), name=ຍ, expression=DotExpression.FieldAssignExpr(receiver=ⶴ୪, fieldName=Ⰸ꩖, value=DotExpression.FieldAccessExpr(receiver=ￖୗ, fieldName=懲))), ᬭऺ=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ﷻ), name=ᬭऺ, expression=true)})}, main=Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=ℂ‪ၖଂ, args=[])))
Program(classDeclarations={}, main=Expression.InstantiationExpr(name=ଽ, args=[Expression.LetExpr(mdf=IMM, name=ꧼꦺ, value=0.0, boundTo=)]))
Program(classDeclarations={ไോ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ไോ, impl=[ꫴ], extend=[], fields={ಉ٥༤=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ˤ), name=ಉ٥༤)}, methods={})}, main=Expression.EmptySignalExpr())
Program(classDeclarations={}, main=true)
Program(classDeclarations={ኛ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ኛ, impl=[], extend=[], fields={}, methods={})}, main=2)
Program(classDeclarations={ࡋ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ࡋ, impl=[ᴿ], extend=[], fields={}, methods={ᏻ᭫=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ၿ9), name=ᏻ᭫, expression=294656.0), Ⴭ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ଋౢ), name=Ⴭ, expression=52)})}, main=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=໅𒑵)))
Program(classDeclarations={}, main=Expression.HeadExpr(signalExpr=this))
Program(classDeclarations={ຯ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ຯ, impl=[ᲇ۪, ℛ], extend=[], fields={ῶ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ꪽ), name=ῶ)}, methods={ℕઁ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=MUT, isLifted=false, name=ੴꢼ), name=ℕઁ, expression=ᳪ౪)})}, main=꠸ۧ᳛െ᳹)
Program(classDeclarations={}, main=154)
Program(classDeclarations={}, main=Expression.EmptySignalExpr())
Program(classDeclarations={ꡯಾ⁡ࠩ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ꡯಾ⁡ࠩ, impl=[ষꠂ́ၤ, ኲ༾᳑, ຄۭᨚ഻༹], extend=[], fields={}, methods={ꣵ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ᝮ), name=ꣵ, expression=Expression.HeadExpr(signalExpr=Expression.TailExpr(signalExpr=))), ኽ᳤=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꜜꠋॢ᧑), name=ኽ᳤, expression=Expression.HeadExpr(signalExpr=true))}), ö=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ö, impl=[], extend=[], fields={}, methods={}), ସ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ସ, impl=[], extend=[ఋ], fields={}, methods={}), ォ꣔ႍ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ォ꣔ႍ, impl=[ﬦீุ], extend=[], fields={}, methods={Ꮆ=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=false, name=ಀ), name=Ꮆ, expression=Expression.HeadExpr(signalExpr=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=Expression.SignalConstructionExpr(head=false, tail=DotExpression.FieldAssignExpr(receiver=Expression.HeadExpr(signalExpr=Expression.SignalConstructionExpr(head=this, tail=Expression.InstantiationExpr(name=ꩄ, args=[]))), fieldName=ൎ, value=DotExpression.CallExpr(receiver=Expression.HeadExpr(signalExpr=false), isLifted=false, methodName=Ⅺᳳਿꧥᩫၬᝒ៦, arguments=[]))), tail=DotExpression.FieldAccessExpr(receiver=false, fieldName=〆︮)), tail=this)))}), ᵘ۴=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ᵘ۴, impl=[], extend=[], fields={}, methods={ࠉ=Program.Method(mdf=MUT, returnType=Program.Type(mdf=IMM, isLifted=false, name=ૐ), name=ࠉ, expression=Expression.LetExpr(mdf=IMM, name=ﵜᩢ, value=false, boundTo=false))})}, main=Expression.InstantiationExpr(name=த, args=[]))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(head=\'\uuuuuB155\u2ace, tail=))
Program(classDeclarations={ޱ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ޱ, impl=[], extend=[], fields={ㅰ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ⶂ), name=ㅰ)}, methods={}), ຢ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ຢ, impl=[ꬠ], extend=[], fields={ଐ=Program.Field(type=Program.Type(mdf=IMM, isLifted=true, name=ஆ), name=ଐ)}, methods={র=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ఫ᪇), name=র, expression=Expression.InstantiationExpr(name=ꪵ, args=[])), ੴ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=〸), name=ੴ, expression=Expression.InstantiationExpr(name=ຄ, args=[3])), ᦑ⃰=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ퟧܺ), name=ᦑ⃰, expression=this), ጓ࡙ೈ⁢=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=true, name=ਹ), name=ጓ࡙ೈ⁢, expression=9.0)})}, main=Expression.SignalConstructionExpr(head=ಎ, tail=Expression.LetExpr(mdf=MUT, name=ᢀ, value=Σ, boundTo=5950)))
Program(classDeclarations={ਰ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ਰ, impl=[], extend=[], fields={}, methods={}), ⁱ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⁱ, impl=[], extend=[], fields={}, methods={}), ⸯྃ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ⸯྃ, impl=[], extend=[ዴ], fields={}, methods={}), ࠚ᳒=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ࠚ᳒, impl=[], extend=[], fields={}, methods={}), ꭥͪ᧒ં=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ꭥͪ᧒ં, impl=[], extend=[], fields={}, methods={ﵲ⁬=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ⶈ⃡), name=ﵲ⁬, expression=Expression.HeadExpr(signalExpr=Expression.InstantiationExpr(name=ﬔଂ゙༠ీ꧵, args=[]))), ൎऺั=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=false, name=ꬌஂ), name=ൎऺั, expression=Expression.LetExpr(mdf=IMM, name=ౠ, value=Expression.TailExpr(signalExpr=Expression.InstantiationExpr(name=נ᳥꫶ּૈ, args=[Expression.HeadExpr(signalExpr=this)])), boundTo=DotExpression.CallExpr(receiver=Expression.TailExpr(signalExpr=Expression.HeadExpr(signalExpr=Expression.EmptySignalExpr())), isLifted=true, methodName=ߺິ, arguments=[]))), ℙ౫=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ᢂ༷ே), name=ℙ౫, expression=Expression.TailExpr(signalExpr=DotExpression.CallExpr(receiver=this, isLifted=false, methodName=ⸯ, arguments=[Expression.HeadExpr(signalExpr=true)]))), ㇰ〬=Program.Method(mdf=CAPSULE, returnType=Program.Type(mdf=IMM, isLifted=true, name=ꪱৗ‬), name=ㇰ〬, expression=this)}), Ꭽ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=Ꭽ, impl=[], extend=[], fields={ᢥ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ℎ), name=ᢥ)}, methods={ᥨ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ℴࠥ໓), name=ᥨ, expression=Expression.HeadExpr(signalExpr=true)), ઊ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ଭೌ໓), name=ઊ, expression=Expression.EmptySignalExpr()), ዹᢅ=Program.Method(mdf=READ, returnType=Program.Type(mdf=READ, isLifted=false, name=ⅅ້ੑ໋༹ో), name=ዹᢅ, expression=)}), ઽ=Program.ClassDeclaration(isCapability=true, isInterface=false, name=ઽ, impl=[], extend=[], fields={}, methods={ௐ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ꨆꠋ߆), name=ௐ, expression=\103៞), ⱀ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=true, name=ව), name=ⱀ, expression=Expression.TailExpr(signalExpr=DotExpression.CallExpr(receiver=𑑠𞴾𞴾࿍\u3bCC, isLifted=false, methodName=ൖ, arguments=[])))})}, main=ꬬেୈ)
Program(classDeclarations={ㅁᝲ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ㅁᝲ, impl=[], extend=[], fields={}, methods={})}, main=)
Program(classDeclarations={ᝋ᳑ꧥ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᝋ᳑ꧥ, impl=[], extend=[], fields={}, methods={}), º=Program.ClassDeclaration(isCapability=false, isInterface=false, name=º, impl=[], extend=[], fields={}, methods={Ό=Program.Method(mdf=READ, returnType=Program.Type(mdf=IMM, isLifted=false, name=ﮌ), name=Ό, expression=this), ᐽᮩ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=MUT, isLifted=false, name=ځ), name=ᐽᮩ, expression=DotExpression.CallExpr(receiver=this, isLifted=false, methodName=யٰ⃔؜, arguments=[]))})}, main=Expression.HeadExpr(signalExpr=\uu3F6c\u9a49\"))
Program(classDeclarations={භ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=භ, impl=[], extend=[], fields={}, methods={ز=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ￜ), name=ز, expression=Expression.SignalConstructionExpr(head=Expression.EmptySignalExpr(), tail=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=Expression.TailExpr(signalExpr=this))))), ͷ=Program.Method(mdf=READ, returnType=Program.Type(mdf=MUT, isLifted=false, name=ೡᬃ็), name=ͷ, expression=true), ꪣᜓঃꠣ=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=യܑ), name=ꪣᜓঃꠣ, expression=this), ໄ᳐=Program.Method(mdf=IMM, returnType=Program.Type(mdf=IMM, isLifted=false, name=ળᜳ), name=ໄ᳐, expression=DotExpression.FieldAccessExpr(receiver=0.4375, fieldName=એ))}), ٮ=Program.ClassDeclaration(isCapability=false, isInterface=false, name=ٮ, impl=[], extend=[], fields={ଲᢩ=Program.Field(type=Program.Type(mdf=CAPSULE, isLifted=false, name=ⷒ), name=ଲᢩ), Ⴧ=Program.Field(type=Program.Type(mdf=IMM, isLifted=false, name=ⷝ), name=Ⴧ)}, methods={}), ˮ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ˮ, impl=[], extend=[], fields={}, methods={})}, main=false)
Program(classDeclarations={ቘ๙=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ቘ๙, impl=[], extend=[ꧬ], fields={}, methods={}), ᜤ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ᜤ, impl=[], extend=[ᾑ, ລ༹], fields={}, methods={}), ਈ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ਈ, impl=[], extend=[Ή१᱒, ଵ, ﹍­᠍], fields={}, methods={}), ਨꪰᩚ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ਨꪰᩚ, impl=[], extend=[ະ, Ⳬ‎‭, ཇᨘ], fields={}, methods={}), ଽ=Program.ClassDeclaration(isCapability=false, isInterface=true, name=ଽ, impl=[], extend=[], fields={}, methods={})}, main=ඹ)
