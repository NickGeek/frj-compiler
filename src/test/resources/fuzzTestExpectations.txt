Program(classDeclarations={֏ั=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=֏ั, impl=[], extend=[], fields={Ⲓ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=11), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=11), mdf=IMM, isLifted=false, name=ኸ), name=Ⲓ)}, methods={})}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=35), receiver=ￍ፟, fieldName=ၛ઼))
Program(classDeclarations={Q=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=45), isCapability=false, isInterface=true, name=Q, impl=[], extend=[દֿ, ⁔, ｂ], fields={}, methods={}), ᢪᳲ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ᢪᳲ, impl=[], extend=[], fields={}, methods={}), ꪼ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=127), isCapability=true, isInterface=false, name=ꪼ, impl=[], extend=[], fields={i=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=148), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=148), mdf=MUT, isLifted=false, name=ஞ݂), name=i)}, methods={ஃ଼๖=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=198), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=205), mdf=IMM, isLifted=true, name=ખ༨︣೯), name=ஃ଼๖, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=219), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=219), mdf=IMM, isLifted=true, name=﹩༥), name=ⷚ)], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=233), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=237), signalExpr=true), tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=256)))), ਙૺၟ꯭᥉ꪳ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=161), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=168), mdf=IMM, isLifted=true, name=ᦎ), name=ਙૺၟ꯭᥉ꪳ, args=[], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=187)))})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=281), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=288), head=this, tail=this)))
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=ⷃ))
Program(classDeclarations={ꬣ᳸=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ꬣ᳸, impl=[], extend=[], fields={ￜ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=31), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=31), mdf=IMM, isLifted=true, name=ॐ᪷ஂ), name=ￜ), ᜯ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=22), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=22), mdf=IMM, isLifted=false, name=￡ຼ), name=ᜯ)}, methods={})}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=61), receiver=true, fieldName=ቝ))
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=15), receiver=this, fieldName=ጒ៑ꪾꠂ))
Program(classDeclarations={ꩀ⵿ꩼ꯭ࠥ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=40), isCapability=false, isInterface=true, name=ꩀ⵿ꩼ꯭ࠥ, impl=[], extend=[], fields={}, methods={}), ૹᤢ۲=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ૹᤢ۲, impl=[], extend=[ꫲ, ৎ︁, ଆെ], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=68), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=75), signalExpr=0)))
Program(classDeclarations={ꇲ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=971), isCapability=true, isInterface=false, name=ꇲ, impl=[], extend=[], fields={ૹ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=992), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=992), mdf=IMM, isLifted=true, name=ꭱ), name=ૹ), ফ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1011), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1011), mdf=MUT, isLifted=false, name=Ⱨ꧖꯹ਃ࣠୦ௌ), name=ফ), ⰼ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1002), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1002), mdf=IMM, isLifted=false, name=ॶৌ), name=ⰼ)}, methods={}), Ⴭᤸࠥ၀॔ু්=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=1032), isCapability=true, isInterface=false, name=Ⴭᤸࠥ၀॔ু්, impl=[], extend=[], fields={}, methods={}), ײ᜴ׅ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=34), isCapability=false, isInterface=false, name=ײ᜴ׅ, impl=[ªꯥ], extend=[], fields={}, methods={ꠃে=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=212), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=219), mdf=IMM, isLifted=true, name=ღఀ), name=ꠃে, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=230), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=230), mdf=IMM, isLifted=false, name=ﴉ), name=ꝛිଂἠْ)], expression=2), 矓ܑ꩑=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=252), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=264), mdf=CAPSULE, isLifted=false, name=ꩺૣ), name=矓ܑ꩑, args=[], expression=0.4268798828125), ࠤ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=303), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=315), mdf=IMM, isLifted=true, name=ᳶ), name=ࠤ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=324), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=324), mdf=IMM, isLifted=true, name=ℭ), name=ॐ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=334), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=334), mdf=IMM, isLifted=true, name=ᱏ᭰), name=ꓪ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=345), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=345), mdf=IMM, isLifted=false, name=න), name=ꘫ౪)], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=357), name=ꦲ, args=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=365), name=ⰵ, args=[Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=373), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=377)), tail=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=396), receiver=false, isLifted=true, methodName=ઍ, arguments=[, false, this])), Expression.LetExpr(pos=ProgramNode.Position(line=1, col=434), mdf=IMM, name=শોᝒ၃, value=, boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=455), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=462), mdf=READ, name=ۿ, value=5, boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=485), signalExpr=true))))]), Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=517), name=ज़᪃ൗ, args=[]), \15, Expression.TailExpr(pos=ProgramNode.Position(line=1, col=543), signalExpr=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=613), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=550), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=567), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=557)), isLifted=true, methodName=ℇ, arguments=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=573), name=ﷱ, args=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=581), signalExpr=730)])])), fieldName=ၺ〭ు, value=))])), Ά=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=61), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=68), mdf=IMM, isLifted=false, name=ൎ), name=Ά, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=75), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=75), mdf=IMM, isLifted=true, name=ࡣ), name=ල), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=85), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=85), mdf=IMM, isLifted=false, name=ㇳ), name=ካ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=97), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=97), mdf=IMM, isLifted=true, name=ঊ࡙), name=ਏ〪)], expression=false), ફັ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=122), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=133), mdf=CAPSULE, isLifted=false, name=ゟꨴꢻ⵿۪૬), name=ફັ, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=159), signalExpr=this)), ಽ༩༷=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=179), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=191), mdf=IMM, isLifted=false, name=ࢶ଼), name=ಽ༩༷, args=[], expression=ꬋ), ᱺ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=637), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=649), mdf=CAPSULE, isLifted=false, name=Ὕீ), name=ᱺ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=665), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=665), mdf=IMM, isLifted=true, name=ᨊ༿ﬞ), name=ٲᬄ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=678), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=678), mdf=IMM, isLifted=false, name=⁔), name=ⱋ⳱౮ૢਂຼ১ୈ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=697), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=697), mdf=IMM, isLifted=true, name=ױﬞꩻ), name=ᾀೃ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=710), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=710), mdf=IMM, isLifted=false, name=ဿ), name=ⶾ؃ꤨึ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=721), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=721), mdf=IMM, isLifted=true, name=ໆ២), name=＄᳭)], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=736), signalExpr=0.8)), ⶪ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=756), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=763), mdf=IMM, isLifted=true, name=ﹱꣁ), name=ⶪ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=778), name=ℇ‿ၤ᥌ௗ, args=[])), ຍ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=798), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=805), mdf=IMM, isLifted=false, name=ￗ), name=ຍ, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=817), head=1.0, tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=828), name=〳ંంೖ, args=[Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=839), head=this, tail=true), Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=863), name=Έ, args=[DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=879), receiver=this, isLifted=true, methodName=ⷐ️ꩽ᜔᪸, arguments=[]), Expression.TailExpr(pos=ProgramNode.Position(line=1, col=896), signalExpr=this)])])))}), L=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=L, impl=[], extend=[], fields={Ꚓ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=21), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=21), mdf=IMM, isLifted=false, name=Ήꠂ़), name=Ꚓ)}, methods={}), ኽ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=933), isCapability=false, isInterface=false, name=ኽ, impl=[ᮯ], extend=[], fields={ॼ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=957), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=957), mdf=IMM, isLifted=true, name=ఉ᳭), name=ॼ)}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=1069)))
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=31), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=this, tail=তꢀු᳙), fieldName=ꪫᬃ))
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=֏))
Program(classDeclarations={ꤊେꥍ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ꤊେꥍ, impl=[ף], extend=[], fields={}, methods={})}, main=true)
Program(classDeclarations={}, main=1)
Program(classDeclarations={ⶠ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ⶠ, impl=[], extend=[], fields={}, methods={}), ꪱ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=45), isCapability=true, isInterface=false, name=ꪱ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={ꨃ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꨃ, impl=[], extend=[ଏ߈, ꜝൊֿᝒ], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=90)
Program(classDeclarations={}, main=𑈿೉\')
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=11), name=Ͷ, args=[Expression.LetExpr(pos=ProgramNode.Position(line=1, col=19), mdf=MUT, name=ᘝୖ, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=31), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=240), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=38), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=42), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=49), name=ᜱ⳯, args=[DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=91), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=58), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=65), head=true, tail=)), fieldName=﹩), Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=97), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=104), mdf=IMM, name=ದ༙ൃܑ, value=this, boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=127), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=131), name=װ, args=[]), tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=146), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=153), head=\104\uuuF47b𘠀ܐ\172\", tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=183), signalExpr=this))))))])), tail=15), isLifted=true, methodName=ࠨᤤ, arguments=[DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=255), receiver=true, isLifted=false, methodName=ᜐ᳭, arguments=[DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=266), receiver=, isLifted=true, methodName=ग़ు, arguments=[])]), this, Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=293), name=〲଼්᳴, args=[]), Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=311)), Expression.LetExpr(pos=ProgramNode.Position(line=1, col=321), mdf=IMM, name=ᭆ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=334), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=338), signalExpr=1), tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=354), mdf=IMM, name=ኚ༙, value=º໒, boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=370), mdf=IMM, name=ᚒ, value=\\, boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=387), head=, tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=397), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=401), signalExpr=this), tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=420), mdf=IMM, name=ꮠ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=431), mdf=CAPSULE, name=મൂ­꧵, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=449), mdf=IMM, name=ඎ࿆, value=false, boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=471))), boundTo=\"\n\\), boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=497), name=ῐ೭༩ꪷ߫, args=[]))))))), boundTo=ó)])), boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=550), name=ந୧, args=[]))]), tail=6.984919309616089E-9))
Program(classDeclarations={Ω=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=Ω, impl=[], extend=[ৡ], fields={}, methods={})}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=45), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=35)), isLifted=false, methodName=ゞ, arguments=[]))
Program(classDeclarations={ક=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ક, impl=[], extend=[], fields={}, methods={})}, main=\uFACe)
Program(classDeclarations={ἶⷹ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ἶⷹ, impl=[], extend=[], fields={}, methods={}), ⶴ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=14), isCapability=false, isInterface=true, name=ⶴ, impl=[], extend=[], fields={}, methods={}), ဧꦂۨ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=91), isCapability=false, isInterface=false, name=ဧꦂۨ, impl=[], extend=[], fields={}, methods={}), ᙽ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=31), isCapability=false, isInterface=true, name=ᙽ, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=135), receiver=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=119), receiver=60, isLifted=false, methodName=ૐಁ᳒ෳꤦꯤ, arguments=[]), fieldName=Ꮑ))
Program(classDeclarations={ળ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=69), isCapability=false, isInterface=true, name=ળ, impl=[], extend=[], fields={}, methods={}), ৳꙯=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=৳꙯, impl=[ᝦ], extend=[], fields={ﾴ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=36), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=36), mdf=IMM, isLifted=true, name=ଳৈૈ઼), name=ﾴ), ꧼ〯=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=49), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=49), mdf=IMM, isLifted=true, name=ቿ༘ಃᯧꦀꩽꥊ), name=ꧼ〯)}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=93), head=false, tail=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=143), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=106), head=true, tail=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=126), receiver=୉ກ, isLifted=true, methodName=ধ, arguments=[])), fieldName=ﬔ꘣්්۱ௗ⃔, value=7.0)))
Program(classDeclarations={ៜ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=147), isCapability=false, isInterface=true, name=ៜ, impl=[], extend=[], fields={}, methods={}), ؋ౣ၆ٰ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=؋ౣ၆ٰ, impl=[ꢈ, ῳ, ఆ, 〇], extend=[], fields={Ꭺ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=50), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=50), mdf=IMM, isLifted=true, name=ٮ), name=Ꭺ)}, methods={ꣽ᮵ௌ༾=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=100), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=107), mdf=IMM, isLifted=true, name=ഈ), name=ꣽ᮵ௌ༾, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=124), signalExpr=this)), ︴᧑=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=60), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=71), mdf=IMM, isLifted=false, name=ઽ), name=︴᧑, args=[], expression=40395)})}, main=0.0)
Program(classDeclarations={ꣷᩗၲ⳰ꧥ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꣷᩗၲ⳰ꧥ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=ৠ)
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=¢ꚞ­, args=[]))
Program(classDeclarations={}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=18), receiver=15.0, isLifted=true, methodName=ߴ, arguments=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=24), signalExpr=ι), ວ᮱]))
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=14), mdf=MUT, name=ᝬ, value=6.0, boundTo=)))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=ঽ⃐꙯ූ⃡ි)
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=﹏ꪷૈ᳸))
Program(classDeclarations={}, main=\75)
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=132), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ਮ᥍ꩼ, args=[ꧦ, DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=42), receiver=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=30), receiver=this, isLifted=false, methodName=ᲇ᳡, arguments=[]), isLifted=false, methodName=ಏ១໊೯, arguments=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=49), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=56), signalExpr=false)), Expression.TailExpr(pos=ProgramNode.Position(line=1, col=80), signalExpr=Ꮽ), this, Ꭰ𑦨, Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=112))])]), fieldName=ਸ਼܏ၣ໌))
Program(classDeclarations={৻￻=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=৻￻, impl=[Ό], extend=[], fields={ﶗ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=36), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=36), mdf=IMM, isLifted=true, name=ﹲേ), name=ﶗ)}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=57), name=쯸࿆, args=[]))
Program(classDeclarations={ꦭऺ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꦭऺ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=25), mdf=IMM, name=ᵔ, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=40), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=47), name=ῄ⳰, args=[this])), boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=87), receiver=910.25, isLifted=true, methodName=ˡి, arguments=[])))
Program(classDeclarations={ௐೖ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ௐೖ, impl=[], extend=[ꙉ, ႎꪸ, এ], fields={}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=127), name=ￎ, args=[DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=145), receiver=522, fieldName=ⷂ), this, Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=159))]))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={ভ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ভ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=24), mdf=IMM, name=Ʝ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=35), mdf=IMM, name=〸, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=42)), boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=52))), boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=64), head=ˬ, tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=73), head=false, tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=86))))))
Program(classDeclarations={ﬔົ⃛=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ﬔົ⃛, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=33), signalExpr=true))
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=78), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=14), head=0.0, tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=30), mdf=IMM, name=ἤ༘, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=40), mdf=IMM, name=ງ, value=ᱲ٘, boundTo=432.0), boundTo=2.0)), fieldName=ೠ4ૻූ⃑)))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=11), head=0, tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=20), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=24), name=ꫂ, args=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=32), name=ⷆ, args=[, Expression.LetExpr(pos=ProgramNode.Position(line=1, col=46), mdf=IMM, name=ጲ, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=55), name=ｔ, args=[0.0]), boundTo=)]), Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=88))]), tail=0.0)), tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=118), name=ଽ, args=[DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=166), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=126), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=130), signalExpr=Ί), tail=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=154), receiver=this, fieldName=ꞵꚟꙶ)), isLifted=true, methodName=ㇹ꣮, arguments=[Expression.LetExpr(pos=ProgramNode.Position(line=1, col=173), mdf=IMM, name=ℂ, value=this, boundTo=this)])])))
Program(classDeclarations={Ⳬ‮ొ᳙=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=Ⳬ‮ొ᳙, impl=[], extend=[], fields={เ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=36), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=36), mdf=IMM, isLifted=true, name=ꫛׂ), name=เ), ᰔଁં=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=24), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=24), mdf=IMM, isLifted=true, name=ใ), name=ᰔଁં)}, methods={ࠀ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=183), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=190), mdf=IMM, isLifted=true, name=ເ), name=ࠀ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=199), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=199), mdf=READ, isLifted=false, name=؋), name=ܟⷮꦴ)], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=217), signalExpr=this)), ℙ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=157), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=164), mdf=IMM, isLifted=false, name=ꧺ), name=ℙ, args=[], expression=ꠉை), $಼॑=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=47), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=54), mdf=IMM, isLifted=true, name=M), name=$಼॑, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=65), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=65), mdf=MUT, isLifted=false, name=〆ঁ៝ᮂ), name=ኝ઼્ۧ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=83), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=83), mdf=MUT, isLifted=false, name=ⶴᷥ), name=Ωꦴᮢ꫁), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=99), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=99), mdf=MUT, isLifted=false, name=Ϳ), name=ஃᰨ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=112), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=112), mdf=IMM, isLifted=false, name=ￄေ２ൈ), name=ﶳ)], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=126), name=יּ, args=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=134), name=￠᷄­, args=[])]))}), ⵯ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=240), isCapability=false, isInterface=true, name=ⵯ, impl=[], extend=[ꧣ, எު, ῴஂ෦], fields={}, methods={})}, main=ၽઁ)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=this, tail=true))
Program(classDeclarations={}, main=଍\uF2dF)
Program(classDeclarations={ⳬஂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=262), isCapability=true, isInterface=false, name=ⳬஂ, impl=[], extend=[], fields={ਲ਼ꚟ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=284), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=284), mdf=CAPSULE, isLifted=false, name=ⶼ), name=ਲ਼ꚟ)}, methods={ⅆ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=339), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=346), mdf=IMM, isLifted=true, name=ￎᝳූಂ᭙), name=ⅆ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=359), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=359), mdf=READ, isLifted=false, name=￡), name=ႎ༵), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=373), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=373), mdf=IMM, isLifted=true, name=ⱔ２), name=ꧽ)], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=387), signalExpr=ኲૹ🇦𞣇)), ˍ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=301), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=308), mdf=IMM, isLifted=true, name=ღ￺), name=ˍ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=323), name=ꣳ, args=[]))}), ጔ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=412), isCapability=false, isInterface=false, name=ጔ, impl=[], extend=[], fields={ߺ௬=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=436), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=436), mdf=IMM, isLifted=true, name=ꫝ૦ੵ), name=ߺ௬), ω꯱=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=422), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=422), mdf=READ, isLifted=false, name=ဇ), name=ω꯱)}, methods={}), ￥=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=452), isCapability=true, isInterface=false, name=￥, impl=[ᛶ], extend=[], fields={}, methods={ⶻᝳᤳ꤀=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=536), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=543), mdf=IMM, isLifted=false, name=ཀۢഀ), name=ⶻᝳᤳ꤀, args=[], expression=1168.0), ﹎=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=487), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=494), mdf=IMM, isLifted=false, name=ﬃꦂ), name=﹎, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=502), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=502), mdf=IMM, isLifted=false, name=Έ), name=ಀ)], expression=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=519), receiver=শ᱄, isLifted=true, methodName=ͼۢ۝ั, arguments=[]))}), ￕ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=611), isCapability=false, isInterface=true, name=ￕ, impl=[], extend=[ꭥ], fields={}, methods={}), 〵ꫭ꪿ഁᬹၭ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=〵ꫭ꪿ഁᬹၭ, impl=[ℕ꣦ꢀ݁ੑ, ヾ, ළঃ], extend=[], fields={ⁱ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=53), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=53), mdf=CAPSULE, isLifted=false, name=ᮮ), name=ⁱ), ๅ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=69), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=69), mdf=IMM, isLifted=false, name=ᢪ), name=ๅ)}, methods={ﺷ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=77), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=88), mdf=IMM, isLifted=true, name=ປ), name=ﺷ, args=[], expression=\u926c\043𑴺), Ϳ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=120), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=127), mdf=IMM, isLifted=false, name=ச), name=Ϳ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=139), name=ꫲ৪ၙ⳯, args=[]))}), ℤঁৗ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=733), isCapability=true, isInterface=false, name=ℤঁৗ, impl=[ਆୢ, Ὓֿᢆ꫁, ட], extend=[], fields={}, methods={}), ൎ᩿፟=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=161), isCapability=false, isInterface=true, name=ൎ᩿፟, impl=[], extend=[〩], fields={}, methods={}), ඟ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=577), isCapability=false, isInterface=true, name=ඟ, impl=[], extend=[ϩഁ, ⶀ⃮], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=792), mdf=IMM, name=ꘫৌ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=802), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=809), head=true, tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=821)))), boundTo=28))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=7, tail=6.0E29))
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=14), name=ឆ, args=[])))
Program(classDeclarations={ⳳ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ⳳ, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=24)))
Program(classDeclarations={}, main=8.526512829121202E-13)
Program(classDeclarations={ಖංٰ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=14), isCapability=true, isInterface=false, name=ಖංٰ, impl=[I, ポ᳹, ˡ᱙ൄ, රັৗ], extend=[], fields={}, methods={ꟿ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=68), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=75), mdf=IMM, isLifted=true, name=ഛ), name=ꟿ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=84), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=84), mdf=IMM, isLifted=false, name=Ｇૌ), name=ჶ〬), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=94), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=94), mdf=READ, isLifted=false, name=ዼ), name=ຳ)], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=110), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=117), mdf=CAPSULE, name=ꬎᮁ, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=143), name=ቓꠤ, args=[]), boundTo=0)))}), ۯꯩ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ۯꯩ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=Ѝႊൌ, args=[]))
Program(classDeclarations={હீ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=હீ, impl=[], extend=[], fields={ढ़਼ૣ್=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=22), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=22), mdf=IMM, isLifted=false, name=ꠊꢀ), name=ढ़਼ૣ್), ﹳ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=34), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=34), mdf=IMM, isLifted=true, name=Չၠ), name=ﹳ)}, methods={})}, main=𐴨𐒰𞹐)
Program(classDeclarations={}, main=)
Program(classDeclarations={ΉჍ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=197), isCapability=false, isInterface=true, name=ΉჍ, impl=[], extend=[ﬄ፞], fields={}, methods={}), $⃥ׄ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=227), isCapability=false, isInterface=true, name=$⃥ׄ, impl=[], extend=[ꚛ, Ⴧೢ, ⶮೋ, ᏹ, リ9, ࡠ, ࠨ], fields={}, methods={}), ℴ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=315), isCapability=true, isInterface=false, name=ℴ, impl=[ゟ], extend=[], fields={ₘ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=350), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=350), mdf=IMM, isLifted=false, name=ቜ), name=ₘ)}, methods={ࢨꦂ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=392), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=403), mdf=IMM, isLifted=true, name=ꡲ), name=ࢨꦂ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=413), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=413), mdf=IMM, isLifted=true, name=ㄦୣ), name=ዜ⃙︨ා༙۴), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=429), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=429), mdf=IMM, isLifted=true, name=ॿ᠕ᮭၞ), name=益꛱ෲ)], expression=false), ꠉ᜔=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=358), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=370), mdf=IMM, isLifted=true, name=ᛵ), name=ꠉ᜔, args=[], expression=)}), ℨ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=460), isCapability=false, isInterface=true, name=ℨ, impl=[], extend=[], fields={}, methods={}), ʖ٣ᜳ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ʖ٣ᜳ, impl=[ₐ], extend=[], fields={}, methods={〇=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=26), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=37), mdf=IMM, isLifted=true, name=ꪼ᷼ॆॢ), name=〇, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=49), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=49), mdf=IMM, isLifted=false, name=や්ֿ᷻෦), name=ᥕൗٰ‪ꦹꦶֿ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=71), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=71), mdf=IMM, isLifted=true, name=ὦ), name=Ɥ)], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=84), name=ວ, args=[]))}), ℬ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=103), isCapability=true, isInterface=false, name=ℬ, impl=[ᥳ᠋], extend=[], fields={ℂ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=139), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=139), mdf=IMM, isLifted=false, name=ﷰ), name=ℂ)}, methods={ᮮౖ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=151), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=166), mdf=IMM, isLifted=true, name=ᏹෟۧੑ౦), name=ᮮౖ, args=[], expression=true)})}, main=0)
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={떴=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=떴, impl=[], extend=[], fields={}, methods={})}, main=true)
Program(classDeclarations={ቝ2５᮶ఃః؜ു=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=907), isCapability=false, isInterface=true, name=ቝ2５᮶ఃః؜ു, impl=[], extend=[ꮀ], fields={}, methods={}), ꪱ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ꪱ, impl=[ᝌꣃ], extend=[], fields={}, methods={ẏꪴꚞ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=218), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=225), mdf=IMM, isLifted=false, name=ߴꪰ۫), name=ẏꪴꚞ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=236), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=236), mdf=IMM, isLifted=true, name=ꬔຼ), name=ⁱཻ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=248), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=248), mdf=IMM, isLifted=true, name=ॐ), name=ⴕ)], expression=this), ⵢ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=25), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=36), mdf=IMM, isLifted=false, name=Ω), name=ⵢ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=43), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=43), mdf=IMM, isLifted=true, name=ﷶிြ), name=Ì), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=55), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=55), mdf=IMM, isLifted=true, name=לּ), name=ᙻൣ)], expression=0.0), ᳫꦼ゙ਾၟ￹ౖ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=77), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=84), mdf=IMM, isLifted=false, name=ՙၨ૯ෙ), name=ᳫꦼ゙ਾၟ￹ౖ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=100), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=100), mdf=IMM, isLifted=true, name=ᨊ), name=ઽ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=110), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=110), mdf=IMM, isLifted=false, name=ꠎූ᱒), name=Ὓ)], expression=true), ສ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=132), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=139), mdf=IMM, isLifted=false, name=ᚙᨛ), name=ສ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=151), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=151), mdf=IMM, isLifted=false, name=₦༷ൈ), name=ଏ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=161), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=161), mdf=IMM, isLifted=true, name=ਸ਼), name=ﬢ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=171), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=171), mdf=IMM, isLifted=true, name=ﮊ᪂), name=￦), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=182), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=182), mdf=IMM, isLifted=true, name=ꘝ), name=ᦅං؃), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=194), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=194), mdf=IMM, isLifted=true, name=ῇ꘨ꧥ), name=ଈ)], expression=true), خ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=270), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=277), mdf=IMM, isLifted=true, name=ٲ), name=خ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=291), name=Ἤ〤ెຼ႗7, args=[Ὂ, Expression.TailExpr(pos=ProgramNode.Position(line=1, col=309), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=316), signalExpr=this)), ꩂ]))}), ᜑ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=422), isCapability=true, isInterface=false, name=ᜑ, impl=[Ᾱ], extend=[], fields={ג=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=457), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=457), mdf=IMM, isLifted=true, name=ණ), name=ג), ͷ꯬=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=467), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=467), mdf=MUT, isLifted=false, name=ᰆ഻), name=ͷ꯬), ꫀᯭേٙ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=481), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=481), mdf=CAPSULE, isLifted=false, name=ᪧ), name=ꫀᯭേٙ)}, methods={Ｑᢅೋ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=607), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=614), mdf=IMM, isLifted=true, name=〳), name=Ｑᢅೋ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=625), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=625), mdf=MUT, isLifted=false, name=Ω), name=ვ゙ׇ꣑᥈), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=641), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=641), mdf=READ, isLifted=false, name=Ꮄ), name=ꣽోٰொၞ)], expression=0), Éꣁ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=500), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=515), mdf=READ, isLifted=false, name=எ), name=Éꣁ, args=[], expression=this), ዻ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=542), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=554), mdf=IMM, isLifted=true, name=ቔ), name=ዻ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=563), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=563), mdf=IMM, isLifted=true, name=Ꝣ), name=Ⴧꪳ)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=577), mdf=IMM, name=Ο, value=ߺ᥎᧑ૢ, boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=594))))}), ਕ௦꫁=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=353), isCapability=false, isInterface=true, name=ਕ௦꫁, impl=[], extend=[ꪼ̽᠋], fields={}, methods={}), ￏਃ؜=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=672), isCapability=true, isInterface=false, name=ￏਃ؜, impl=[], extend=[], fields={}, methods={Ⴇৈ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=840), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=847), mdf=IMM, isLifted=false, name=ᝬ்ꙴꩃ︌), name=Ⴇৈ, args=[], expression=), ܐ⁤ၖോ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=695), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=702), mdf=IMM, isLifted=true, name=Ἵ), name=ܐ⁤ၖോ, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=719), head=, tail=this)), ﺃ้=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=742), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=749), mdf=IMM, isLifted=false, name=ꝺ), name=ﺃ้, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=761), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=761), mdf=IMM, isLifted=true, name=ᚬ), name=ໟ)], expression=ਜ਼), ೡૻ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=780), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=791), mdf=IMM, isLifted=true, name=ඬ), name=ೡૻ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=801), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=801), mdf=IMM, isLifted=false, name=ە), name=Ⱀິ᱑ౖೌ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=813), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=813), mdf=IMM, isLifted=false, name=ન), name=ￂꠂۢ)], expression=\"\n\1጖)}), 〦૿ⷲ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=874), isCapability=false, isInterface=false, name=〦૿ⷲ, impl=[ￚ߫ᜒ଼ೣ], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=949), head=this, tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=961), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=968), head=this, tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=980), mdf=IMM, name=ਏ৬, value=true, boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=999), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=1006), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=1013), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=1017), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=1024), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=1038), receiver=96, isLifted=false, methodName=ὐ۳8, arguments=[Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=1044), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=1048), signalExpr=true), tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=1067), name=¥, args=[]))]))), tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=1099), head=5.0, tail=ୋ)))))))))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=14), mdf=CAPSULE, name=ୡ༵ၟ, value=600.0, boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=43), name=⁔ꪰ, args=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=52), name=ꬩᷴ, args=[])]))))
Program(classDeclarations={}, main=\uuuuuDbcD᛹ኸ\4)
Program(classDeclarations={ಆ﻿=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ಆ﻿, impl=[], extend=[], fields={}, methods={Ⳳ᠍ఀ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=22), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=29), mdf=IMM, isLifted=true, name=ᳶ), name=Ⳳ᠍ఀ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=40), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=40), mdf=IMM, isLifted=false, name=Ѵຼে꠆꣪ꙺᤸ), name=ꠠ)], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=61), signalExpr=7.0))})}, main=ቜ໙)
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=this))
Program(classDeclarations={}, main=)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=39), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=11), signalExpr=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=27), receiver=false, fieldName=ߵꨮꪷ)), isLifted=true, methodName=ﬥ﻿ੋ᤻ൈ⃨, arguments=[]), tail=2))
Program(classDeclarations={ꧼꢀ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=669), isCapability=true, isInterface=false, name=ꧼꢀ, impl=[], extend=[], fields={ℇ༿ൣ⃧=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=691), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=691), mdf=IMM, isLifted=true, name=ਲ਼), name=ℇ༿ൣ⃧), ﬆ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=704), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=704), mdf=IMM, isLifted=true, name=ଐ⃡), name=ﬆ), ￥ꩌ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=715), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=715), mdf=IMM, isLifted=false, name=Ὑ), name=￥ꩌ)}, methods={︴꩘=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=724), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=736), mdf=READ, isLifted=false, name=ୱ), name=︴꩘, args=[], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=754)))}), ㆣ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=70), isCapability=false, isInterface=true, name=ㆣ, impl=[], extend=[Ⴭ, ὓꦺౖ], fields={}, methods={}), ᢁ﻿=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=162), isCapability=true, isInterface=false, name=ᢁ﻿, impl=[ᤙ], extend=[], fields={ສ܏=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=198), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=198), mdf=IMM, isLifted=false, name=ⴱੑ؜), name=ສ܏)}, methods={ༀ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=470), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=477), mdf=IMM, isLifted=true, name=લ), name=ༀ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=487), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=487), mdf=MUT, isLifted=false, name=〡︧), name=Ѥ᭯), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=501), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=501), mdf=CAPSULE, isLifted=false, name=ⶦੈ), name=ຊᰬ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=519), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=519), mdf=IMM, isLifted=false, name=ꩤ), name=ꜟ)], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=530), name=ᶕﬞ, args=[Expression.LetExpr(pos=ProgramNode.Position(line=1, col=539), mdf=MUT, name=ኳ, value=87305.0, boundTo=ኍ), Expression.LetExpr(pos=ProgramNode.Position(line=1, col=573), mdf=IMM, name=Ⳮ࠙ᜲ, value=this, boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=590), name=つං꣮, args=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=600), signalExpr=13.25), 0.0, ൖꚟ⁤ၖ])), ꣻ, ຂ])), ㆡ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=425), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=440), mdf=IMM, isLifted=false, name=ῲ), name=ㆡ, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=452), signalExpr=)), ꘔꪴ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=245), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=256), mdf=IMM, isLifted=true, name=ଡ଼౭ꢽ), name=ꘔꪴ, args=[], expression=false), ℸ᱖=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=209), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=220), mdf=IMM, isLifted=true, name=ວ), name=ℸ᱖, args=[], expression=0.0), ℬ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=283), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=298), mdf=MUT, isLifted=false, name=〇ऻ3), name=ℬ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=311), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=311), mdf=IMM, isLifted=true, name=＿ᩡ), name=ꣽ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=322), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=322), mdf=IMM, isLifted=true, name=௹), name=ఝ্ஂ)], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=337), head=12.0, tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=350)))), ৼ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=365), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=380), mdf=IMM, isLifted=true, name=ᢃ), name=ৼ, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=394), mdf=IMM, name=ꣽ༷ꚞ, value=3711, boundTo=))}), ಎ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ಎ, impl=[], extend=[], fields={}, methods={}), ᤅৢ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=104), isCapability=false, isInterface=false, name=ᤅৢ, impl=[], extend=[], fields={}, methods={ヿ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=115), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=130), mdf=IMM, isLifted=true, name=ᧁ), name=ヿ, args=[], expression=1.5446368976148174E-211)})}, main=11)
Program(classDeclarations={〆〫=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=〆〫, impl=[], extend=[], fields={}, methods={})}, main=ቜ)
Program(classDeclarations={}, main=ᢉ߀ৈꦼ༡)
Program(classDeclarations={Ὕ⃭҄=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=Ὕ⃭҄, impl=[Է꫶], extend=[], fields={ꫂ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=38), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=38), mdf=IMM, isLifted=false, name=Ϳ), name=ꫂ)}, methods={סּ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=46), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=57), mdf=IMM, isLifted=false, name=ｆܳ), name=סּ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=65), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=65), mdf=IMM, isLifted=false, name=ꠄ), name=શෲ॒ೋ߳)], expression=15.125), Ⴧ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=94), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=109), mdf=IMM, isLifted=true, name=ɷ), name=Ⴧ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=118), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=118), mdf=READ, isLifted=false, name=ª), name=Ꭓ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=131), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=131), mdf=IMM, isLifted=false, name=ꩵ), name=ఒٰꦀ)], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=144)))})}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=179), receiver=42, isLifted=false, methodName=ꁇꙶࠗ, arguments=[true]))
Program(classDeclarations={}, main=this)
Program(classDeclarations={ଏੇ߀ஂܸ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ଏੇ߀ஂܸ, impl=[], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=28), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=32), head=this, tail=), tail=ⵯ়༹២ໍꫭ))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ퟎ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=14), mdf=IMM, name=ধៀ, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=25), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=46), receiver=9.7421875, isLifted=false, methodName=އ, arguments=[this])), boundTo=this), boundTo=this))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=8.12247035053579E23, tail=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=38), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=28)), isLifted=true, methodName=ꠅ, arguments=[])))
Program(classDeclarations={ளֿેୗୗֿිෝ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ளֿેୗୗֿිෝ, impl=[], extend=[ഏઁ], fields={}, methods={})}, main=this)
Program(classDeclarations={ቐ᱀ਃ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=160), isCapability=false, isInterface=false, name=ቐ᱀ਃ, impl=[ˮ፝꙯4ꢷ, ዀ꧑ੈ], extend=[], fields={}, methods={}), ℳൊං១=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ℳൊං១, impl=[], extend=[], fields={}, methods={ᳰ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=120), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=127), mdf=IMM, isLifted=false, name=ᾼ), name=ᳰ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=134), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=134), mdf=IMM, isLifted=true, name=ㇰே), name=ർ)], expression=true), г=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=73), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=80), mdf=MUT, isLifted=false, name=ౠ), name=г, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=91), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=91), mdf=IMM, isLifted=true, name=Ͷઁ᳡ﬞ꧹꯴), name=ၦ)], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=109))), Ὓ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=13), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=24), mdf=IMM, isLifted=true, name=ລੂ⳰೧), name=Ὓ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=36), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=36), mdf=READ, isLifted=false, name=ٯ), name=ക)], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=52), name=ಸৈා, args=[0]))})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=206), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=213), signalExpr=)))
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=27))
Program(classDeclarations={ﹱ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ﹱ, impl=[], extend=[], fields={}, methods={})}, main=false)
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=૱, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=15), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=30), receiver=540.0, isLifted=true, methodName=ድ, arguments=[false])), boundTo=8.0))
Program(classDeclarations={〩૯=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=51), isCapability=false, isInterface=true, name=〩૯, impl=[], extend=[], fields={}, methods={}), ᮅ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ᮅ, impl=[ᝮੀၪ], extend=[], fields={ﮐ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=37), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=37), mdf=IMM, isLifted=true, name=ਚ༿), name=ﮐ)}, methods={}), ꪺ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=69), isCapability=false, isInterface=false, name=ꪺ, impl=[], extend=[], fields={ꫡ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=79), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=79), mdf=IMM, isLifted=false, name=৻଼), name=ꫡ), פּᮨ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=102), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=102), mdf=IMM, isLifted=true, name=ꬅౕ၃੍), name=פּᮨ), ⅎ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=92), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=92), mdf=IMM, isLifted=true, name=ࡢ), name=ⅎ)}, methods={ࠤ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=116), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=127), mdf=IMM, isLifted=false, name=ῳ꣬), name=ࠤ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=135), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=135), mdf=IMM, isLifted=true, name=ବ), name=ᣚ)], expression=true), ಎ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=157), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=172), mdf=IMM, isLifted=true, name=ₒ), name=ಎ, args=[], expression=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=219), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=186), head=, tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=196), signalExpr=true)), fieldName=ℭ))})}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=244), receiver=this, isLifted=true, methodName=Ό࠙០ෝઁ, arguments=[DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=262), receiver=this, fieldName=ༀ༘ᤩ, value=3)]))
Program(classDeclarations={}, main=this)
Program(classDeclarations={ହཷꢁ್͇=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ହཷꢁ್͇, impl=[], extend=[], fields={}, methods={}), ଏ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=21), isCapability=true, isInterface=false, name=ଏ, impl=[ᳶෑ, Ό], extend=[], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=71), mdf=IMM, name=ꘚ, value=Γ, boundTo=this))
Program(classDeclarations={֏=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=֏, impl=[], extend=[Ⰵౣ], fields={}, methods={}), ၦ᭳=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=29), isCapability=false, isInterface=false, name=ၦ᭳, impl=[ꪱ, ﹴູ], extend=[], fields={﹩=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=72), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=72), mdf=IMM, isLifted=true, name=ச᱑ᜳೖ), name=﹩), Έ᪄ꤩ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=59), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=59), mdf=IMM, isLifted=true, name=ﶽ᪱), name=Έ᪄ꤩ)}, methods={ⷆ⃡ஂൂ꩙ꠦ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=85), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=100), mdf=IMM, isLifted=true, name=ຫ), name=ⷆ⃡ஂൂ꩙ꠦ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=114), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=114), mdf=IMM, isLifted=false, name=ۻ꯭ೄ​़), name=ꭈᮭ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=127), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=127), mdf=IMM, isLifted=true, name=ૐ), name=ଲ࡙᥌)], expression=1)})}, main=ꪱ)
Program(classDeclarations={}, main=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=15), receiver=this, fieldName=ੳꠂ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=20))))
Program(classDeclarations={ቘ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ቘ, impl=[], extend=[], fields={}, methods={})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=24), signalExpr=true))
Program(classDeclarations={}, main=true)
Program(classDeclarations={ഽົ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ഽົ, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=113)))
Program(classDeclarations={ꫀ꩐=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꫀ꩐, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=25)))
Program(classDeclarations={ಔ౨=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ಔ౨, impl=[], extend=[ྋ૩], fields={}, methods={}), գ〫=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=30), isCapability=false, isInterface=true, name=գ〫, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=61), receiver=, isLifted=true, methodName=ꟺ, arguments=[]))
Program(classDeclarations={ꫂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꫂ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={￠=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=￠, impl=[], extend=[], fields={ೲ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=70), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=70), mdf=IMM, isLifted=true, name=ቯ), name=ೲ), 〼­=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=44), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=44), mdf=IMM, isLifted=true, name=צୢ￹), name=〼­), Ὑ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=21), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=21), mdf=IMM, isLifted=true, name=ጂૈ༙ꨶ), name=Ὑ), ＿ಃ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=57), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=57), mdf=IMM, isLifted=true, name=ⱕ꯷؜), name=＿ಃ), ߙ࿆=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=34), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=34), mdf=IMM, isLifted=false, name=ᝯၣ), name=ߙ࿆), ঽ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=10), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, isLifted=true, name=ῗ༷), name=ঽ), ঢ়=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=80), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=80), mdf=IMM, isLifted=false, name=ⵡ഻), name=ঢ়)}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=99), name=ᪧ, args=[]))
Program(classDeclarations={ൎﬞۧુ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ൎﬞۧુ, impl=[], extend=[ͺ], fields={}, methods={}), ﻺ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=31), isCapability=false, isInterface=false, name=ﻺ, impl=[ᰆᮁ], extend=[], fields={ℨၞࣵ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=56), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=56), mdf=IMM, isLifted=true, name=ࢻ᠍ᳳ࿆ྟ໊ᳳ), name=ℨၞࣵ), v‏=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=82), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=82), mdf=IMM, isLifted=true, name=Á᜴), name=v‏), ⁿ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=74), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=74), mdf=IMM, isLifted=false, name=ᡳ), name=ⁿ)}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=104), signalExpr=ౙஂૢꦃ߯))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ªၤ, value=5.633E-6, boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=31), head=this, tail=14720.0)))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={}, main=false)
Program(classDeclarations={Ⴭ҇=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=82), isCapability=false, isInterface=false, name=Ⴭ҇, impl=[], extend=[], fields={}, methods={}), ঽ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ঽ, impl=[ˌ, ኴ], extend=[], fields={Ꮗ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=50), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=50), mdf=IMM, isLifted=true, name=ႎ), name=Ꮗ), ￛၱ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=39), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=39), mdf=IMM, isLifted=true, name=Ⴡ), name=ￛၱ)}, methods={}), ゟꩃৈ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=63), isCapability=false, isInterface=true, name=ゟꩃৈ, impl=[], extend=[], fields={}, methods={})}, main=1)
Program(classDeclarations={}, main=10)
Program(classDeclarations={؋߫=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=24), isCapability=false, isInterface=false, name=؋߫, impl=[], extend=[], fields={ᚧ﻿ஂ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=35), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=35), mdf=IMM, isLifted=true, name=ஐ᷽), name=ᚧ﻿ஂ)}, methods={ઽຶੵ႔໌︌᪂ᳲ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=48), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=59), mdf=IMM, isLifted=false, name=ܥ), name=ઽຶੵ႔໌︌᪂ᳲ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=77), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=77), mdf=IMM, isLifted=false, name=￥), name=ꪺ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=85), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=85), mdf=IMM, isLifted=true, name=ৠ), name=ຯ)], expression=), ܐ଼=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=105), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=116), mdf=IMM, isLifted=true, name=టୈ҇), name=ܐ଼, args=[], expression=0)}), ヿ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ヿ, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=150)))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=டৢ꤬‮, value=204, boundTo=3))
Program(classDeclarations={ℒූ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=347), isCapability=false, isInterface=true, name=ℒූ, impl=[], extend=[琉්, ⶶੵೕ], fields={}, methods={}), ኾᝳ࠭=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=28), isCapability=false, isInterface=true, name=ኾᝳ࠭, impl=[], extend=[Ί, ൽ, ℴ], fields={}, methods={}), ൔ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ൔ, impl=[], extend=[ᠼ], fields={}, methods={}), ゕ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=210), isCapability=false, isInterface=false, name=ゕ, impl=[ⶩဳೄׅ], extend=[], fields={ລ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=237), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=237), mdf=IMM, isLifted=false, name=؋), name=ລ), എೊೣ਼᱆᧘=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=245), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=245), mdf=IMM, isLifted=true, name=ൟ҅ꤪۢ), name=എೊೣ਼᱆᧘)}, methods={ମﬞ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=263), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=278), mdf=IMM, isLifted=true, name=ꥠોꩌ꦳ࠪ꛰ఁ꩖), name=ମﬞ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=295), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=295), mdf=IMM, isLifted=false, name=য়), name=ퟬଁ)], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=311), head=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=322), receiver=35, fieldName=ড়ၙ), tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=329))))}), ՙ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=97), isCapability=false, isInterface=true, name=ՙ, impl=[], extend=[ᭋी, ዀැ, ℕ⃡, ꪆꦀ, ꤤ, ꚧ゚᥆, ࠤ, ꬕ़], fields={}, methods={})}, main=)
Program(classDeclarations={Ｑ്ࠪ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=Ｑ്ࠪ, impl=[], extend=[], fields={}, methods={}), ឯ઼්ྒྷ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=83), isCapability=false, isInterface=true, name=ឯ઼්ྒྷ, impl=[], extend=[ਲ਼්, ﷷꧥ഻႙], fields={}, methods={}), ᢞ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=15), isCapability=true, isInterface=false, name=ᢞ, impl=[ດ௮ઃ︍, 〳, ⳳ, ͱ, ࠨ۸ೋ೨ం੍ে, יּ༹], extend=[], fields={}, methods={}), Ά꠆=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=122), isCapability=false, isInterface=true, name=Ά꠆, impl=[], extend=[ቘ], fields={}, methods={}), ဿ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=202), isCapability=false, isInterface=true, name=ဿ, impl=[], extend=[], fields={}, methods={})}, main=0)
Program(classDeclarations={}, main=)
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=14), mdf=IMM, name=ॐ, value=ￚᤠ, boundTo=ಶࠖ)))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={}, main=0)
Program(classDeclarations={ௐ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ௐ, impl=[], extend=[ই꯸࿆ૼꩼᮀ⃡꪿], fields={}, methods={}), ࢻ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=35), isCapability=false, isInterface=true, name=ࢻ, impl=[], extend=[ໂᜓ], fields={}, methods={}), ଢ଼ᮁᤵ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=64), isCapability=false, isInterface=false, name=ଢ଼ᮁᤵ, impl=[ቋ, ຍ, ⳬ], extend=[], fields={}, methods={ꚹֿി꤬োો܏=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=98), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=105), mdf=IMM, isLifted=true, name=Ὓᮬ), name=ꚹֿി꤬োો܏, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=126), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=133), signalExpr=87.2))), ꪨ྇=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=158), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=169), mdf=MUT, isLifted=false, name=ᛶ￻ׇ), name=ꪨ྇, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=183), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=183), mdf=IMM, isLifted=false, name=Ὺ), name=ꤣ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=191), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=191), mdf=IMM, isLifted=true, name=ᢚ), name=ᤁⷷූ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=203), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=203), mdf=CAPSULE, isLifted=false, name=ᇘ), name=ࠨ)], expression=217.0), ﬅ༘ಁ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=234), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=245), mdf=READ, isLifted=false, name=ퟲྗ), name=ﬅ༘ಁ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=260), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=260), mdf=IMM, isLifted=true, name=Ɠ), name=ⷅ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=270), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=270), mdf=IMM, isLifted=false, name=_᧓), name=ኲ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=279), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=279), mdf=IMM, isLifted=true, name=ຕ), name=ꮜ)], expression=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=300), receiver=true, isLifted=false, methodName=ៜ〫ஂ‌߆, arguments=[]))}), ꧏ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=319), isCapability=false, isInterface=true, name=ꧏ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=390), signalExpr=㫬))
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=this))
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=14), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=21), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=28), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=35)))))))
Program(classDeclarations={ὑ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ὑ, impl=[ጔ, ꫀꠋ, ஹ], extend=[], fields={}, methods={ૐ︢=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=44), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=55), mdf=MUT, isLifted=false, name=ꣳ), name=ૐ︢, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=72), signalExpr=false)), ι=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=93), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=100), mdf=IMM, isLifted=true, name=ⅆ), name=ι, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=109), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=109), mdf=IMM, isLifted=false, name=ⶋ༹ۣྂ), name=ꬆᬀ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=121), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=121), mdf=MUT, isLifted=false, name=ף़්ּၣ), name=ਫ਼ં), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=137), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=137), mdf=IMM, isLifted=true, name=ಎ꫶੭֪႑), name=ꙧ᳭ే)], expression=32.0)})}, main=ͺ༵ុ)
Program(classDeclarations={ኦൄം=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ኦൄം, impl=[], extend=[], fields={}, methods={ᮇ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=12), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=24), mdf=IMM, isLifted=true, name=ῄ〪), name=ᮇ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=39), name=ৠި, args=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=48), signalExpr=), 𑄀, 51, false, DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=98), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=88)), fieldName=ࢴ)]))}), ᮊ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=113), isCapability=false, isInterface=true, name=ᮊ, impl=[], extend=[ℇꪸۘ], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=209), mdf=IMM, name=ꧾ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=218)), boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=228), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=232), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=236), head=🥳, tail=this), tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=259), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=266), signalExpr=ዄ))), tail=true)))
Program(classDeclarations={}, main=ﾤ)
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=27), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=false), fieldName=ਸ))
Program(classDeclarations={ೱ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ೱ, impl=[], extend=[ՙ꣐ຼ, ഽ᱄᠋], fields={}, methods={}), য়=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=99), isCapability=false, isInterface=true, name=য়, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=123), signalExpr=true))
Program(classDeclarations={}, main=944.0)
Program(classDeclarations={ඍ᜔꫁ꦃ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ඍ᜔꫁ꦃ, impl=[Ⳬ꣑ꦀ, ي, ⅎ, Ŝ꩓, Ⴭ], extend=[], fields={ৼ౫ॖූ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=70), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=70), mdf=IMM, isLifted=false, name=Ͷ), name=ৼ౫ॖූ), ꬆ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=100), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=100), mdf=READ, isLifted=false, name=ㄣ༡ෙ࿆᮱), name=ꬆ), ྊ႓=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=81), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=81), mdf=IMM, isLifted=false, name=ᝌ), name=ྊ႓), ۿᢩᩛ᥈=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=57), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=57), mdf=IMM, isLifted=true, name=Ά), name=ۿᢩᩛ᥈), ˮ᮸=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=90), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=90), mdf=IMM, isLifted=false, name=ၸ່), name=ˮ᮸), প=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=117), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=117), mdf=IMM, isLifted=true, name=Ὑ), name=প)}, methods={}), ゟ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=130), isCapability=false, isInterface=true, name=ゟ, impl=[], extend=[], fields={}, methods={})}, main=Infinity)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=12, tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=19), mdf=READ, name=ꬔၠ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=32)), boundTo=5.4E-69)))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ーᝲ߇, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=17), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=24), signalExpr=true)), boundTo=))
Program(classDeclarations={}, main=true)
Program(classDeclarations={ቔ᭕᱈=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ቔ᭕᱈, impl=[], extend=[ਉேఃး꙯േ, ৰ, ꥮৗ, ⱅྔꥉ, ՙ], fields={}, methods={})}, main=ͺ)
Program(classDeclarations={ۥോஂׂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ۥോஂׂ, impl=[], extend=[], fields={}, methods={}), ǣ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=960), isCapability=false, isInterface=false, name=ǣ, impl=[$᱔᪳, ꣵ, ᥳ, ஜ༷︢], extend=[], fields={ࡓၨಁꙸ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1000), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1000), mdf=IMM, isLifted=true, name=ຊ), name=ࡓၨಁꙸ), ꜙ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1013), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1013), mdf=IMM, isLifted=true, name=ኴ), name=ꜙ)}, methods={ῲ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=1023), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1034), mdf=READ, isLifted=false, name=ଈٰႏ), name=ῲ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1048), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1048), mdf=IMM, isLifted=true, name=ꫴ), name=ᨨ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1058), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1058), mdf=CAPSULE, isLifted=false, name=ᝧ꤈), name=ၚ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1075), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1075), mdf=IMM, isLifted=false, name=祕์꘧፝ࠗᢆׇ), name=₧ᬀࠩං), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1092), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1092), mdf=IMM, isLifted=false, name=ఴ), name=ӫ)], expression=2270)}), ந᳡ᬄ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=636), isCapability=false, isInterface=true, name=ந᳡ᬄ, impl=[], extend=[ଥ, ՙꫵꧥ￻, ພ], fields={}, methods={}), ᚖ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=677), isCapability=true, isInterface=false, name=ᚖ, impl=[ₒ], extend=[], fields={ｉ⁣୪=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=735), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=735), mdf=CAPSULE, isLifted=false, name=ⵯஂઃꩻ྇), name=ｉ⁣୪), დ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=712), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=712), mdf=IMM, isLifted=true, name=ঽୌ), name=დ), ഽ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=723), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=723), mdf=IMM, isLifted=true, name=ࠨ꧴ૌ), name=ഽ), ල=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=757), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=757), mdf=CAPSULE, isLifted=false, name=ಀ), name=ල)}, methods={ℿٰܑ໘ျ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=803), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=810), mdf=IMM, isLifted=false, name=ꞕ), name=ℿٰܑ໘ျ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=826), name=ඞັ, args=[])), दᳳ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=843), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=850), mdf=IMM, isLifted=true, name=ՙେᤴ), name=दᳳ, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=867), mdf=MUT, name=ᢍ, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=878), signalExpr=true), boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=897), signalExpr=ꩀ))), ۻ᮸=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=773), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=780), mdf=IMM, isLifted=false, name=ಽ༵), name=ۻ᮸, args=[], expression=this)}), Ἐ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=259), isCapability=true, isInterface=false, name=Ἐ, impl=[த, ℐ꩓༵], extend=[], fields={ມ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=300), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=300), mdf=MUT, isLifted=false, name=ௐ᥎), name=ມ), ࠨ᳭=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=313), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=313), mdf=IMM, isLifted=false, name=ܩ), name=ࠨ᳭)}, methods={ᨁ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=597), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=604), mdf=IMM, isLifted=false, name=ධᤣ), name=ᨁ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=612), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=612), mdf=IMM, isLifted=false, name=ఏ), name=ૡ႐)], expression=11), ϙ᭭=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=322), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=329), mdf=IMM, isLifted=false, name=ڨࣧ), name=ϙ᭭, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=338), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=338), mdf=IMM, isLifted=true, name=_), name=ଡ଼), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=348), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=348), mdf=IMM, isLifted=false, name=Ⴭූ), name=ˮ)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=360), mdf=IMM, name=ப, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=372), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=379), mdf=MUT, name=ꟽໍ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=391), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=395), name=ⴭෲͅ, args=[]), tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=412))), boundTo=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=462), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=426), head=this, tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=438), signalExpr=26)), fieldName=ಽਂ၉))), boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=579), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=474), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=481), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=488), mdf=IMM, name=Ὓ︆, value=false, boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=508), mdf=IMM, name=ኳ், value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=520)), boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=530), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=534), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=541))), tail=true))))), isLifted=true, methodName=ℙ፟߆, arguments=[])))}), হ꠆=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=131), isCapability=false, isInterface=true, name=হ꠆, impl=[], extend=[ꭞ], fields={}, methods={}), ⰽ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=114), isCapability=false, isInterface=true, name=ⰽ, impl=[], extend=[], fields={}, methods={}), ਫ਼=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=921), isCapability=false, isInterface=false, name=ਫ਼, impl=[ঐ], extend=[], fields={ⷞ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=945), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=945), mdf=IMM, isLifted=true, name=ࢧꠂຸ), name=ⷞ)}, methods={})}, main=)
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=this)
Program(classDeclarations={ታ8ၱ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ታ8ၱ, impl=[], extend=[ಳ⃐, ⸯ࿆, ଢ଼ꠧ­૾៩], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=51), mdf=IMM, name=ሳ۪േ, value=true, boundTo=this))
Program(classDeclarations={}, main=0.9375)
Program(classDeclarations={დ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=86), isCapability=true, isInterface=false, name=დ, impl=[], extend=[], fields={}, methods={ꓑ꣐ꨬ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=218), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=233), mdf=IMM, isLifted=false, name=ଛ), name=ꓑ꣐ꨬ, args=[], expression=true), நꧥ￺ֿ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=142), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=153), mdf=IMM, isLifted=true, name=ꓰ), name=நꧥ￺ֿ, args=[], expression=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=210), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=170), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=193), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=177), name=ຳׄ, args=[]), isLifted=true, methodName=ᨓ, arguments=[])), fieldName=ﷴૉ)), ᥖ꫶්໊­১༙=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=256), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=263), mdf=IMM, isLifted=true, name=ඐ), name=ᥖ꫶්໊­১༙, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=278), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=278), mdf=IMM, isLifted=true, name=ힻ၄), name=ℛັ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=290), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=290), mdf=IMM, isLifted=true, name=ˬึ), name=ጪ)], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=304), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=308), signalExpr=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=324), receiver=false, fieldName=ڝ)), tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=334), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=338), name=ໜ્᱇, args=[Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=348))]), tail=35.0))), ຍ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=107), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=122), mdf=IMM, isLifted=false, name=װ), name=ຍ, args=[], expression=0.0)}), ꬖ᳒ၣ਼=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꬖ᳒ၣ਼, impl=[], extend=[], fields={}, methods={}), এ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=62), isCapability=false, isInterface=false, name=এ, impl=[], extend=[], fields={Թ៝ꦀ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=72), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=72), mdf=IMM, isLifted=false, name=ㄑ౬), name=Թ៝ꦀ)}, methods={}), _=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=383), isCapability=false, isInterface=false, name=_, impl=[], extend=[], fields={}, methods={})}, main=)
Program(classDeclarations={}, main=꧿\')
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=𞹗׫, tail=))
Program(classDeclarations={ㇸໟ᳸=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ㇸໟ᳸, impl=[], extend=[], fields={າᤢ︉=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=12), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=12), mdf=IMM, isLifted=true, name=ㇴ), name=າᤢ︉)}, methods={}), ল഼ొ໕=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=27), isCapability=false, isInterface=true, name=ল഼ొ໕, impl=[], extend=[ສ, Ꙃ], fields={}, methods={}), ᦰႌ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=333), isCapability=true, isInterface=false, name=ᦰႌ, impl=[ؼꠂ᷵ྲ⵿, ﬂ], extend=[], fields={ຊꯤࣛ၃=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=389), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=389), mdf=READ, isLifted=false, name=ᜭ), name=ຊꯤࣛ၃), ৻ຸ̽=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=377), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=377), mdf=IMM, isLifted=true, name=ኇ), name=৻ຸ̽)}, methods={ኗ୍=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=462), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=473), mdf=MUT, isLifted=false, name=ￖ୭), name=ኗ୍, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=486), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=486), mdf=IMM, isLifted=true, name=ף්ּ), name=⁔)], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=500), signalExpr=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=555), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=507), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=511), signalExpr=9.0E-4), tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=532), signalExpr=this)), fieldName=ꀑꯣ௯؁))), ﮬꪷ￻ᬻ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=405), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=416), mdf=IMM, isLifted=true, name=〸ꚟ์ັ), name=ﮬꪷ￻ᬻ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=431), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=431), mdf=IMM, isLifted=true, name=﹩), name=η)], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=444), name=ᯋꩃᰪ, args=[]))})}, main=4.5102810375396984E-17)
Program(classDeclarations={ዋ๑꙯=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ዋ๑꙯, impl=[], extend=[ߋັု, ቛ], fields={}, methods={})}, main=3108.5)
Program(classDeclarations={ಽၞၪ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ಽၞၪ, impl=[], extend=[ᳪ], fields={}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=37), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=41), mdf=IMM, name=ⴍۚ, value=60.0, boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=63), name=ᥳ, args=[])), tail=\"))
Program(classDeclarations={ஐ⳯꧔ັ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ஐ⳯꧔ັ, impl=[], extend=[], fields={}, methods={}), ｕꦂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=119), isCapability=true, isInterface=false, name=ｕꦂ, impl=[], extend=[], fields={}, methods={}), ꩿ҇=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=55), isCapability=false, isInterface=false, name=ꩿ҇, impl=[], extend=[], fields={Ꮭົഁ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=66), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=66), mdf=IMM, isLifted=true, name=ఎꦃ), name=Ꮭົഁ)}, methods={ໆ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=79), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=86), mdf=IMM, isLifted=true, name=ਸ), name=ໆ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=95), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=95), mdf=IMM, isLifted=true, name=ইె), name=ꫀ)], expression=ⶬ්)}), ⁿꢹ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=41), isCapability=false, isInterface=false, name=ⁿꢹ, impl=[], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=151), head=0.0, tail=111))
Program(classDeclarations={ꬓ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ꬓ, impl=[ᾷৈ᱗᪕۫, ₲], extend=[], fields={ꬄৣ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=32), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=32), mdf=IMM, isLifted=false, name=ⅅ⵿), name=ꬄৣ)}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=56)))
Program(classDeclarations={ℂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ℂ, impl=[], extend=[], fields={}, methods={ￛ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=52), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=67), mdf=READ, isLifted=false, name=ༀ), name=ￛ, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=84), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=91), signalExpr=ꠖ))), ͷࣣ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=21), mdf=IMM, isLifted=true, name=￦), name=ͷࣣ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=36), name=ｯ, args=[]))}), ወ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=216), isCapability=true, isInterface=false, name=ወ, impl=[ළ, ዊ, ർັৈ, ⳮ], extend=[], fields={ⅱၳ᧗=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=281), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=281), mdf=IMM, isLifted=false, name=ಸ), name=ⅱၳ᧗), ૡᝳୖ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=265), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=265), mdf=READ, isLifted=false, name=ఘྲྀ), name=ૡᝳୖ)}, methods={}), 々゚༵=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=115), isCapability=false, isInterface=true, name=々゚༵, impl=[], extend=[], fields={}, methods={}), ᯟ҄ꠧ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=187), isCapability=false, isInterface=false, name=ᯟ҄ꠧ, impl=[ⶲ], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=301), head=0.0, tail=this))
Program(classDeclarations={ᾯ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ᾯ, impl=[ꪵ᳷], extend=[], fields={}, methods={})}, main=26.0)
Program(classDeclarations={ၐ୍ຼ⃮྇=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ၐ୍ຼ⃮྇, impl=[], extend=[ꫀ႗], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=99), signalExpr=this))
Program(classDeclarations={ॐ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=50), isCapability=false, isInterface=false, name=ॐ, impl=[ﶄ, Ⱇ୪ᢩ], extend=[], fields={ꜗෳࣔ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=80), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=80), mdf=MUT, isLifted=false, name=ꠄಂొ༾ؖ), name=ꜗෳࣔ)}, methods={ⵯᷯ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=98), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=105), mdf=IMM, isLifted=true, name=ᱏೕࣵേ), name=ⵯᷯ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=118), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=118), mdf=IMM, isLifted=true, name=ဗ), name=נּꦼ)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=132), mdf=READ, name=ⷎେ, value=true, boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=154), name=ଐ⳱, args=[]))), ၥ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=173), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=180), mdf=IMM, isLifted=true, name=ॳ༙), name=ၥ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=190), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=190), mdf=IMM, isLifted=true, name=ℰ), name=ꧫ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=200), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=200), mdf=IMM, isLifted=true, name=ˣ), name=ꪵ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=210), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=210), mdf=IMM, isLifted=false, name=〳゙︤), name=ᝮ഼), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=225), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=225), mdf=IMM, isLifted=true, name=ၡ), name=ᝤ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=235), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=235), mdf=IMM, isLifted=true, name=ঢ়), name=ஏ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=245), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=245), mdf=IMM, isLifted=true, name=ࢦၗ෦ৄ႖), name=ቘ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=259), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=259), mdf=IMM, isLifted=false, name=ᤎ), name=꠸)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=274), mdf=IMM, name=ᬎ꯲, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=286), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=293), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=300), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=316), receiver=1, isLifted=true, methodName=ꪼ, arguments=[true])))), boundTo=false))}), 볏ే=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=볏ే, impl=[], extend=[], fields={ຂ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=22), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=22), mdf=IMM, isLifted=false, name=ꦡ഻), name=ຂ), ଢ଼=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=35), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=35), mdf=IMM, isLifted=true, name=Òޯ્), name=ଢ଼)}, methods={})}, main=this)
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={}, main=\uuE88d)
Program(classDeclarations={ᎅ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ᎅ, impl=[], extend=[], fields={ᝑ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=78), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=78), mdf=IMM, isLifted=true, name=ₜ২᪷ৢ), name=ᝑ), ʹ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=21), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=21), mdf=IMM, isLifted=true, name=Ϳ᜔ೇ), name=ʹ), শ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=66), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=66), mdf=IMM, isLifted=true, name=фౣ༩), name=শ), ᢪ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=44), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=44), mdf=IMM, isLifted=true, name=ꨓෲ), name=ᢪ), ₣᳢=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=55), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=55), mdf=IMM, isLifted=true, name=ῴ), name=₣᳢), ˮ഻=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=33), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=33), mdf=IMM, isLifted=true, name=Ꞷ), name=ˮ഻), ꫝ᪗=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=91), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=91), mdf=CAPSULE, isLifted=false, name=Ꙕ), name=ꫝ᪗)}, methods={৲۳ೆꧥ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=222), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=233), mdf=IMM, isLifted=true, name=ᜎ), name=৲۳ೆꧥ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=245), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=245), mdf=IMM, isLifted=true, name=ถଁ), name=Ώ)], expression=this), ꭞၤ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=140), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=147), mdf=IMM, isLifted=true, name=ࢷ), name=ꭞၤ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=157), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=157), mdf=IMM, isLifted=false, name=ಐׂોெࠧ), name=ຄೋ)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=173), mdf=IMM, name=ᜰܰⷥ, value=𐫧\uA6f8\74, boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=199), signalExpr=1000000.0))), ῆ༡=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=108), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=115), mdf=IMM, isLifted=true, name=Ⲉ᯳ۨꩃ), name=ῆ༡, args=[], expression=0.8)})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=278), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=285), mdf=READ, name=ᳫ⁢, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=299), name=ￚ, args=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=307), name=ൽ, args=[])]), boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=327), head=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=336), receiver=ঋ, fieldName=ῡູ๖, value=ꞑৈெං), tail=1))))
Program(classDeclarations={}, main=2.14697265625)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=11), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=15), name=য়꣡, args=[]), tail=this), tail=this))
Program(classDeclarations={ೠ഼෯᩠꫶ࠦ⁫ᤫ⵿᷊=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ೠ഼෯᩠꫶ࠦ⁫ᤫ⵿᷊, impl=[ଢ଼­, ဍ, ꩺဴ꧷ꫵ꫁], extend=[], fields={ᜐ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=98), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=98), mdf=IMM, isLifted=true, name=ଜ), name=ᜐ), ຂ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=69), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=69), mdf=MUT, isLifted=false, name=ꤾⷾ), name=ຂ), Ʇꪾ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=57), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=57), mdf=IMM, isLifted=true, name=য়ൣ), name=Ʇꪾ), ಝ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=82), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=82), mdf=CAPSULE, isLifted=false, name=ഐ), name=ಝ)}, methods={ㇶ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=162), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=169), mdf=IMM, isLifted=false, name=শ), name=ㇶ, args=[], expression=ᥲ), ꜙ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=108), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=115), mdf=IMM, isLifted=true, name=ࠚॣ), name=ꜙ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=125), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=125), mdf=IMM, isLifted=false, name=സႇׁૄা), name=ⱶ)], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=144), signalExpr=))})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=197)))
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=\uu02Fa))
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=14), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=21), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=25), mdf=CAPSULE, name=ᎄ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=41), mdf=IMM, name=ࢨ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=54)), boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=64), mdf=IMM, name=ꧤ᳭, value=, boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=80), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=84), name=ႎ༿, args=[ꠊ]), tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=103), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=110), signalExpr=true))))), boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=141), name=ꫜ᭬ᝓ᪖⁦, args=[1.1184241181749551E180, 15.0, DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=182), receiver=ᢎ, fieldName=ಽ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=186), signalExpr=4))])), tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=214), mdf=MUT, name=ዅ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=226)), boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=236), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=243), name=ꬷ, args=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=251), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=258), name=ꩇ, args=[Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=266))])), this])))))))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=Ῥ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=17), head=972660.0, tail=មꩍ), boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=49), signalExpr=this)))
Program(classDeclarations={ᳮ༵=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=19), isCapability=true, isInterface=false, name=ᳮ༵, impl=[Ϊৗ], extend=[], fields={}, methods={}), ಎୖே=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ಎୖே, impl=[], extend=[], fields={}, methods={})}, main=60.0)
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=14.0, tail=false))
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=14), mdf=IMM, name=ଷ්ૄ, value=true, boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=33), head=true, tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=45), name=ઽᬄஂඃꧥ๘ֿ, args=[Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=59)), DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=85), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=69), name=ºꩃ, args=[]), isLifted=true, methodName=ഏ, arguments=[য়۴]), Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=102)), 41])))))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={ㄣ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ㄣ, impl=[ಳ, 䶳꧓], extend=[], fields={}, methods={}), µૣ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=43), isCapability=false, isInterface=false, name=µૣ, impl=[], extend=[], fields={}, methods={}), ۮ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=57), isCapability=false, isInterface=true, name=ۮ, impl=[], extend=[ᜆ], fields={}, methods={})}, main=ⴭ꧷ெ)
Program(classDeclarations={ᡦ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ᡦ, impl=[], extend=[], fields={ጶᯪ꙯=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=20), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=20), mdf=READ, isLifted=false, name=ಀ), name=ጶᯪ꙯), ஊ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=10), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, isLifted=true, name=ꪩ), name=ஊ)}, methods={ထ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=111), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=123), mdf=MUT, isLifted=false, name=ۿ), name=ထ, args=[], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=139))), 充=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=35), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=42), mdf=IMM, isLifted=true, name=ൎ), name=充, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=51), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=51), mdf=IMM, isLifted=true, name=ᮮົۤੁ), name=Ͳ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=64), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=64), mdf=IMM, isLifted=true, name=ኋ᱘ෳ෪), name=ꩆ)], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=80), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=87), signalExpr=true))), ˊ༘꣘ၣ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=255), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=270), mdf=IMM, isLifted=false, name=ݾꦁু), name=ˊ༘꣘ၣ, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=287), head=ஓੂⷷ, tail=3)), ₮=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=150), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=157), mdf=IMM, isLifted=true, name=ךּ), name=₮, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=166), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=166), mdf=IMM, isLifted=true, name=ଽ), name=ߺೕꠋೇ)], expression=false), ৎ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=192), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=199), mdf=CAPSULE, isLifted=false, name=ѳ), name=ৎ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=214), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=214), mdf=IMM, isLifted=true, name=ᛰ), name=ౡ᷽‎), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=226), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=226), mdf=READ, isLifted=false, name=Ή៝ꣀ), name=ፊꪾऻ)], expression=0)}), ᬑো〮ୃ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=398), isCapability=false, isInterface=true, name=ᬑো〮ୃ, impl=[], extend=[ფ, $ᢩꩍ۠], fields={}, methods={}), º=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=315), isCapability=false, isInterface=true, name=º, impl=[], extend=[], fields={}, methods={})}, main=)
Program(classDeclarations={}, main=5.0E8)
Program(classDeclarations={ףּ౪=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ףּ౪, impl=[], extend=[], fields={ꩺꦼ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=22), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=22), mdf=IMM, isLifted=true, name=Ӊ), name=ꩺꦼ)}, methods={ꪱ︦=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=33), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=45), mdf=READ, isLifted=false, name=ೞ๐), name=ꪱ︦, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=59), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=59), mdf=IMM, isLifted=true, name=ସ), name=ಜ)], expression=this)})}, main=Đਂৗ)
Program(classDeclarations={ᡖ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=633), isCapability=true, isInterface=false, name=ᡖ, impl=[ൟ], extend=[], fields={Ꙍูၞ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=668), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=668), mdf=IMM, isLifted=true, name=ꪝ), name=Ꙍูၞ), ⸯႇົ᷽=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=680), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=680), mdf=IMM, isLifted=false, name=ޱ), name=ⸯႇົ᷽), ၯۣ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=691), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=691), mdf=IMM, isLifted=true, name=ᳱ୩଼︦), name=ၯۣ)}, methods={ர=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=742), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=753), mdf=IMM, isLifted=true, name=ୱ), name=ர, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=762), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=762), mdf=IMM, isLifted=true, name=ڶၪ), name=ꙑั೨︇້࡛᳴া)], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=783))), ⁱ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=705), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=712), mdf=IMM, isLifted=true, name=ਫ), name=ⁱ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=726), name=ｏ, args=[]))}), Ꞛꨪ꫁=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=Ꞛꨪ꫁, impl=[], extend=[], fields={ኴ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=22), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=22), mdf=IMM, isLifted=false, name=ꫦ), name=ኴ), ℇ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=12), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=12), mdf=IMM, isLifted=true, name=ஜ), name=ℇ), ᱏ༩꤫ྂ์=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=30), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=30), mdf=IMM, isLifted=true, name=ᝮ), name=ᱏ༩꤫ྂ์)}, methods={Ἴ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=197), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=209), mdf=IMM, isLifted=true, name=ꬒൌᳳૂ᪑െ໗), name=Ἴ, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=229), mdf=IMM, name=ऋᢩ, value=this, boundTo=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=265), receiver=1.820327936E9, fieldName=ഽ᮲ꩍ))), ꩉ꛱ৗ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=274), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=286), mdf=IMM, isLifted=false, name=ⳳੵ), name=ꩉ꛱ৗ, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=301), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=308), mdf=MUT, name=ꬒ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=319), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=323), head=, tail=256.0), tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=346), name=ᢁ, args=[ཇ, Expression.TailExpr(pos=ProgramNode.Position(line=1, col=359), signalExpr=Ř), ꧏ᪃ූ, 0, this])), boundTo=8941))), ۿ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=44), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=51), mdf=IMM, isLifted=true, name=ㇿ؃಼), name=ۿ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=62), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=62), mdf=IMM, isLifted=true, name=ୟ), name=ꪌ꛱᪲)], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=77), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=103), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=84), signalExpr=this), isLifted=false, methodName=ࠤﬞ, arguments=[this, Ά਼, Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=122), signalExpr=ᱩੌ), Expression.LetExpr(pos=ProgramNode.Position(line=1, col=139), mdf=IMM, name=ধ, value=this, boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=173), receiver=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=165), receiver=ㆍෑꪲూ༷, fieldName=শ), isLifted=true, methodName=ἢ꠆, arguments=[]))])))}), ፇੵ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=426), isCapability=false, isInterface=false, name=ፇੵ, impl=[ᲈ], extend=[], fields={ಀ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=459), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=459), mdf=READ, isLifted=false, name=ι), name=ಀ), ﻙ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=451), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=451), mdf=IMM, isLifted=false, name=Ὓ), name=ﻙ), ਪ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=495), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=495), mdf=IMM, isLifted=false, name=ঢ়ꠂ), name=ਪ), ಽ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=481), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=481), mdf=IMM, isLifted=true, name=ℿׂ҅ೕං), name=ಽ), ꟿ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=472), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=472), mdf=IMM, isLifted=false, name=ힵࣰ), name=ꟿ)}, methods={ꩊ౫᧒꫁ꠋି=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=508), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=523), mdf=IMM, isLifted=true, name=ᪧ゚), name=ꩊ౫᧒꫁ꠋି, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=543), mdf=IMM, name=ହ଼゚᠖, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=553), signalExpr=20.0), boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=573), head=this, tail=ꪯֿ܏))), ⷆ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=599), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=606), mdf=IMM, isLifted=true, name=Ꝫၫ), name=ⷆ, args=[], expression=true)})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=804), mdf=IMM, name=ￎ༙ྗ, value=this, boundTo=true))
Program(classDeclarations={ￛ഼᪒=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=283), isCapability=true, isInterface=false, name=ￛ഼᪒, impl=[ቜ], extend=[], fields={}, methods={ޱ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=320), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=327), mdf=IMM, isLifted=false, name=ష), name=ޱ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=334), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=334), mdf=IMM, isLifted=true, name=ᥴ), name=ꪼꦂ꛱), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=346), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=346), mdf=IMM, isLifted=false, name=ꑩ), name=줴), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=358), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=358), mdf=IMM, isLifted=true, name=ᱏೌ４), name=ப), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=370), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=370), mdf=CAPSULE, isLifted=false, name=ꠁ), name=ꨖੑ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=387), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=387), mdf=IMM, isLifted=true, name=ꬂ‍‏ႌ), name=ꤵٙᤨ᠓ે), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=404), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=404), mdf=IMM, isLifted=false, name=ಏ), name=ｏ܏༵), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=414), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=414), mdf=IMM, isLifted=true, name=탡꘧௯), name=ޱၤ)], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=430), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=437), mdf=IMM, name=ଢ଼, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=446), head=ఀ, tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=457), name=ⶴ, args=[14.0, Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=476), head=ᢦ, tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=485), mdf=IMM, name=Ϳ, value=ᦰ୬⃩, boundTo=this))])), boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=526), name=ᚱ᧙, args=[]))))}), ꦉᩛ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ꦉᩛ, impl=[אָ], extend=[], fields={؋ೢ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=39), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=39), mdf=IMM, isLifted=true, name=ⸯऺ), name=؋ೢ), ᶐ༹ௗᬁঁ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=25), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=25), mdf=IMM, isLifted=true, name=ꣴ), name=ᶐ༹ௗᬁঁ)}, methods={ꬡୃ༵᪽ൣ᱀༹২=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=51), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=62), mdf=IMM, isLifted=true, name=ⷉೆ), name=ꬡୃ༵᪽ൣ᱀༹২, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=79), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=79), mdf=CAPSULE, isLifted=false, name=ఽ), name=ࠚ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=95), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=95), mdf=IMM, isLifted=false, name=שׁ), name=װ⵿), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=108), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=108), mdf=IMM, isLifted=false, name=ዀ), name=ൎଁ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=117), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=117), mdf=CAPSULE, isLifted=false, name=Ὅ૿ஂ႕܏), name=Ⴧੵ)], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=142), name=ऱၭٰၤꦵ, args=[false, DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=200), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=163), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=170), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=174)), tail=true)), isLifted=false, methodName=ð๔, arguments=[Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=205), head=this, tail=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=238), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=217), name=ዯ়, args=[1]), isLifted=false, methodName=₮, arguments=[]))]), 163.37890625]))})}, main=)
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=14), signalExpr=19.0)))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=0.0, tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=24), mdf=IMM, name=ᢂ, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=43), name=Ί܏᧕, args=[࣓]), boundTo=)))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=11), signalExpr=), tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=28), mdf=IMM, name=ㄷ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=38), mdf=READ, name=લ, value=4.9437286957443935E-203, boundTo=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=80), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=70)), fieldName=৻ꨩ꣬֓)), boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=91), name=₺໒, args=[]))))
Program(classDeclarations={ℂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ℂ, impl=[], extend=[], fields={}, methods={ಽꤧ્=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=21), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=36), mdf=IMM, isLifted=false, name=ﾺ៝), name=ಽꤧ્, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=51), name=ꧻ๐ႋᬶ, args=[]))}), ℇ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=73), isCapability=false, isInterface=true, name=ℇ, impl=[], extend=[], fields={}, methods={}), ऽ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=90), isCapability=false, isInterface=false, name=ऽ, impl=[], extend=[], fields={מּ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=100), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=100), mdf=IMM, isLifted=true, name=ꣽ), name=מּ)}, methods={ၦ᪼=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=288), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=299), mdf=IMM, isLifted=true, name=Ⴧ), name=ၦ᪼, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=309), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=309), mdf=IMM, isLifted=false, name=Ό), name=ℌ༵ܶ⳰๖ᬼ༷ᬁဴۚࠦ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=327), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=327), mdf=IMM, isLifted=true, name=ˡۧ߉), name=אַ3ॢ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=341), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=341), mdf=IMM, isLifted=true, name=〸), name=Ἓັᜳ)], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=356), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=360), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=364), head=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=375), receiver=꬗, fieldName=ວꪾ, value=87.0), tail=Infinity), tail=3), tail=ℕ)), Ͷ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=432), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=443), mdf=IMM, isLifted=false, name=ဇීႋᜲ), name=Ͷ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=453), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=453), mdf=MUT, isLifted=false, name=ቝ), name=շ)], expression=this), ꩋ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=110), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=117), mdf=IMM, isLifted=false, name=௹ா꫶), name=ꩋ, args=[], expression=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=138), receiver=బ؄२, isLifted=true, methodName=แꪰ7ົ౬ಾ, arguments=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=149), signalExpr=42.4), Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=171), head=false, tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=184), head=0.04, tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=196), mdf=IMM, name=ᨑ⃧７, value=, boundTo=))), Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=228), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=232), name=ﹲ, args=[]), tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=247), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=251)), tail=true)), æ]))})}, main=true)
Program(classDeclarations={ꦛ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ꦛ, impl=[], extend=[], fields={}, methods={})}, main=41.0)
Program(classDeclarations={ኇ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=52), isCapability=false, isInterface=false, name=ኇ, impl=[], extend=[], fields={}, methods={ⁿܑ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=142), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=154), mdf=IMM, isLifted=false, name=ಸ), name=ⁿܑ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=162), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=162), mdf=IMM, isLifted=true, name=ꬪꫮ), name=ৎꙺ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=174), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=174), mdf=CAPSULE, isLifted=false, name=௹), name=Ίဳ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=191), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=191), mdf=READ, isLifted=false, name=꠸᪖), name=ℇೖ૧)], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=210), name=ףּ, args=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=218), name=ﷵ, args=[])])), ᨯఁ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=585), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=596), mdf=CAPSULE, isLifted=false, name=ೲꠥ), name=ᨯఁ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=613), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=613), mdf=IMM, isLifted=true, name=ꪶᮁ८༹ྯ᱔￺ৣ෮), name=ᱛꦀ૦⁣), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=634), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=634), mdf=IMM, isLifted=false, name=ਲ਼ਂ꣣), name=ᝢ)], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=647), name=ਚ, args=[])), ⶋꩻ಼=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=62), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=73), mdf=IMM, isLifted=false, name=ຄ྆ີ), name=ⶋꩻ಼, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=84), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=84), mdf=IMM, isLifted=true, name=ￛૈ), name=ױൣୈၭ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=98), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=98), mdf=CAPSULE, isLifted=false, name=ቋ਼ᷜ), name=ￗۨ)], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=120), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=127)))), ːꠂొ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=387), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=398), mdf=IMM, isLifted=false, name=ලஂঁ), name=ːꠂొ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=409), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=409), mdf=IMM, isLifted=true, name=ￍ), name=ᨀ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=419), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=419), mdf=IMM, isLifted=false, name=ーꢀ), name=ꢓꦂ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=429), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=429), mdf=IMM, isLifted=true, name=எೕೖ), name=ￎ゚ৗ)], expression=ᢌ), ℨ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=452), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=459), mdf=IMM, isLifted=false, name=〳), name=ℨ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=466), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=466), mdf=IMM, isLifted=true, name=ႎ꯰⁨ࠩ), name=؋), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=479), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=479), mdf=IMM, isLifted=true, name=য়᮴߲ୂி), name=ꫧ)], expression=58), ﹩=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=283), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=290), mdf=IMM, isLifted=false, name=ࠨﬞ꯬), name=﹩, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=299), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=299), mdf=IMM, isLifted=true, name=Ӎ), name=Ζ᳞)], expression=this), פּை=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=239), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=250), mdf=IMM, isLifted=true, name=ⲁ〫), name=פּை, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=261), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=261), mdf=IMM, isLifted=true, name=৲), name=ߖੑꪷ)], expression=), Ҫ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=510), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=517), mdf=IMM, isLifted=false, name=ꧡຼ), name=Ҫ, args=[], expression=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=539), receiver=false, fieldName=ၡ, value=\uuuuB2de␧\016\r\uuuuue7FC\uu3C32)), ᱞ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=322), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=333), mdf=IMM, isLifted=true, name=ヲ), name=ᱞ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=342), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=342), mdf=IMM, isLifted=false, name=ಏ), name=ஃֿ﻿), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=352), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=352), mdf=CAPSULE, isLifted=false, name=ⶮꚟ), name=ੳ᧐ੁોׂ)], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=376)))}), ᤏ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ᤏ, impl=[], extend=[], fields={}, methods={})}, main=1)
Program(classDeclarations={ກᮀះ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ກᮀះ, impl=[ꠊ], extend=[], fields={}, methods={})}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=69), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=47), signalExpr=1000.0), isLifted=false, methodName=ವୗಃ᭓, arguments=[Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=76), signalExpr=true), Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=95), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=102), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=119), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=109)), isLifted=true, methodName=ဿꢀ, arguments=[]))), ꭨ, Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=148))]))
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=14), mdf=IMM, name=ῼ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=23)), boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=33)))))
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=14), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=78), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=21), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=28), head=220909.0, tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=47), head=ၒຼ꣐, tail=11))), isLifted=true, methodName=എؕ܏, arguments=[]))))
Program(classDeclarations={}, main=0)
Program(classDeclarations={ຫ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ຫ, impl=[], extend=[ວ, ꠑ], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=8.0)
Program(classDeclarations={}, main=ꣻ)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=11)), tail=\u9F2a))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=false, tail=ㅌ))
Program(classDeclarations={ℤⷥ﻿=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ℤⷥ﻿, impl=[], extend=[એ꤫], fields={}, methods={})}, main=0)
Program(classDeclarations={ସၴૈ〮=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ସၴૈ〮, impl=[], extend=[], fields={}, methods={})}, main=false)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=11), signalExpr=this), tail=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=55), receiver=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=42), receiver=79, isLifted=true, methodName=֏, arguments=[]), fieldName=ཊః൯)))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=11), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=15), mdf=IMM, name=ፊ, value=false, boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=34), signalExpr=this)), tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=55))), tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=69), head=𑴋\57΢🡠, tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=85), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=92), head=this, tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=104), mdf=IMM, name=ༀௗ༹, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=113)), boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=123), mdf=IMM, name=ⸯ১, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=140)), boundTo=false)))))))
Program(classDeclarations={ῳ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=143), isCapability=false, isInterface=false, name=ῳ, impl=[Ἕ], extend=[], fields={ᜂꩃ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=167), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=167), mdf=IMM, isLifted=false, name=ࡄ᭕), name=ᜂꩃ)}, methods={}), ࠤ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=36), isCapability=false, isInterface=false, name=ࠤ, impl=[], extend=[], fields={Λꩻൗؐ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=46), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=46), mdf=IMM, isLifted=false, name=ￓꦺ), name=Λꩻൗؐ), Ⴭ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=58), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=58), mdf=IMM, isLifted=true, name=יִ), name=Ⴭ)}, methods={ᾰෛັ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=68), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=79), mdf=CAPSULE, isLifted=false, name=யꪸ᧖྆᱀᱕⃘ᝲ꠆܏۠ၙ), name=ᾰෛັ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=107), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=107), mdf=IMM, isLifted=true, name=ϲ), name=ൾꦀ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=118), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=118), mdf=IMM, isLifted=false, name=ꬉ), name=ลꥦ꫁)], expression=this)}), ﭶ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ﭶ, impl=[], extend=[], fields={}, methods={}), ᜠູꠋ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=17), isCapability=false, isInterface=true, name=ᜠູꠋ, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=187)))
Program(classDeclarations={Ⴭ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=Ⴭ, impl=[], extend=[], fields={ಭ꩕ꠣ᳭=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=29), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=29), mdf=IMM, isLifted=false, name=ᭆ០), name=ಭ꩕ꠣ᳭), ಽె=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=10), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=10), mdf=CAPSULE, isLifted=false, name=ᳩ೮໓), name=ಽె), ª=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=41), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=41), mdf=CAPSULE, isLifted=false, name=ぶ), name=ª)}, methods={ঐ᜴᳭꩗ᩕ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=57), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=64), mdf=READ, isLifted=false, name=A­), name=ঐ᜴᳭꩗ᩕ, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=86), signalExpr=ᏻ))}), ࠤׇัᢅ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=106), isCapability=false, isInterface=false, name=ࠤׇัᢅ, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=129), name=Ūᢆ۫, args=[­, າ, DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=159), receiver=this, isLifted=false, methodName=µ, arguments=[Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=163), signalExpr=true), this, this, this]), Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=211), head=, tail=this)]))
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ቑ, args=[false]))
Program(classDeclarations={ゟ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ゟ, impl=[ຽ, ಐ්ીৣੇ, ꧏ, 윔ꩌ, $], extend=[], fields={ኤ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=45), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=45), mdf=IMM, isLifted=true, name=ຝ), name=ኤ)}, methods={ꮲ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=97), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=104), mdf=IMM, isLifted=true, name=‿), name=ꮲ, args=[], expression=0.0), ஜྐ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=125), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=132), mdf=IMM, isLifted=false, name=ｏ), name=ஜྐ, args=[], expression=_), Έ҃=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=55), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=70), mdf=READ, isLifted=false, name=ꩊྎ), name=Έ҃, args=[], expression=𝕀)})}, main=40.0)
Program(classDeclarations={ῶ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=383), isCapability=true, isInterface=false, name=ῶ, impl=[ⷂ៝], extend=[], fields={}, methods={ᭋ᳥=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=419), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=430), mdf=MUT, isLifted=false, name=ꬭ), name=ᭋ᳥, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=442), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=442), mdf=READ, isLifted=false, name=Ὃᬂ), name=ກ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=456), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=456), mdf=IMM, isLifted=false, name=Η), name=ᜄ)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=467), mdf=IMM, name=ೞ༿, value=0.0, boundTo=14))}), ᲆ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=610), isCapability=false, isInterface=false, name=ᲆ, impl=[ߤූൗၗ], extend=[], fields={}, methods={}), Ⴧ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=Ⴧ, impl=[], extend=[Ὕ, Ⳬֻ༹, ࠤ], fields={}, methods={}), ᦝ5１=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=504), isCapability=false, isInterface=false, name=ᦝ5１, impl=[נּᬸ᱆, ₓᤷ, ퟅ], extend=[], fields={ῐ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=541), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=541), mdf=IMM, isLifted=false, name=Ф꛰), name=ῐ), ൔૣෳ໓ⷷ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=550), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=550), mdf=IMM, isLifted=true, name=ᏸ), name=ൔૣෳ໓ⷷ), ︳=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=564), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=564), mdf=IMM, isLifted=false, name=డ), name=︳)}, methods={줕ႅੋັோઃ໕ઁ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=572), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=579), mdf=IMM, isLifted=false, name=ℱ), name=줕ႅੋັோઃ໕ઁ, args=[], expression=this)}), ՙ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=812), isCapability=false, isInterface=true, name=ՙ, impl=[], extend=[], fields={}, methods={}), Ι꤄=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=640), isCapability=false, isInterface=false, name=Ι꤄, impl=[], extend=[], fields={Ⳮ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=651), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=651), mdf=IMM, isLifted=true, name=ΰ), name=Ⳮ)}, methods={c=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=661), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=668), mdf=IMM, isLifted=false, name=ꜙ), name=c, args=[], expression=this), მ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=689), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=704), mdf=IMM, isLifted=true, name=ⶬ૮), name=მ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=714), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=714), mdf=IMM, isLifted=true, name=ꬨ), name=ቋ๙), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=725), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=725), mdf=IMM, isLifted=true, name=ꚛൈ), name=ἲ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=736), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=736), mdf=IMM, isLifted=false, name=₴), name=ࡢ)], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=747), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=751), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=758), signalExpr=6.359375)), tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=787), signalExpr=)))}), ⶼ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=853), isCapability=false, isInterface=false, name=ⶼ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=873), signalExpr=true))
Program(classDeclarations={}, main=4)
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=Լ, args=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=15), signalExpr=this), 𑙠]))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ම꠆, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=17), name=ꪵ⁨, args=[]), boundTo=ι))
Program(classDeclarations={ಷ೬=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=393), isCapability=false, isInterface=true, name=ಷ೬, impl=[], extend=[], fields={}, methods={}), თ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=თ, impl=[ጥேೆൌ], extend=[], fields={Έ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=38), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=38), mdf=READ, isLifted=false, name=ง᳭), name=Έ), ဿ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=52), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=52), mdf=CAPSULE, isLifted=false, name=Ἕ), name=ဿ)}, methods={த=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=68), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=83), mdf=IMM, isLifted=true, name=ೠ), name=த, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=92), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=92), mdf=IMM, isLifted=true, name=ࢪૣ), name=ભ)], expression=3)}), ﬗ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=175), isCapability=true, isInterface=false, name=ﬗ, impl=[Ｉᨗⷻ], extend=[], fields={ῼ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=223), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=223), mdf=IMM, isLifted=false, name=ຊ᭙ᮭ᧕), name=ῼ), ഽ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=212), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=212), mdf=IMM, isLifted=true, name=ᬤ︧), name=ഽ)}, methods={Ὑྛ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=296), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=303), mdf=CAPSULE, isLifted=false, name=ॠ಼), name=Ὑྛ, args=[], expression=ᬪ݇), Ⴢ᳒=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=234), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=241), mdf=IMM, isLifted=true, name=ዀ), name=Ⴢ᳒, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=251), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=251), mdf=IMM, isLifted=true, name=ߴ), name=ꞟั၈)], expression=0.0)}), ꣻᢩ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=118), isCapability=false, isInterface=true, name=ꣻᢩ, impl=[], extend=[ⳬ], fields={}, methods={}), ῼ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=335), isCapability=false, isInterface=true, name=ῼ, impl=[], extend=[ၜ, ᬧꠦ, ퟴ༾्⃧, ໃౣ࡙๔⃦꤈ၲ, ဩ, Ⲍ], fields={}, methods={})}, main=this)
Program(classDeclarations={ᨕ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=109), isCapability=false, isInterface=true, name=ᨕ, impl=[], extend=[ຽ], fields={}, methods={}), ୠ‌ꫵ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=38), isCapability=false, isInterface=true, name=ୠ‌ꫵ, impl=[], extend=[⁔়], fields={}, methods={}), ﺈ᳔ࠞៈ⃡=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=137), isCapability=true, isInterface=false, name=ﺈ᳔ࠞៈ⃡, impl=[ꣽ‮࡚, ￅᯪﬞꦂ], extend=[], fields={ꡅ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=194), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=194), mdf=IMM, isLifted=false, name=ೞೣᢆ), name=ꡅ), ኮឹ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=185), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=185), mdf=IMM, isLifted=false, name=ڸ), name=ኮឹ)}, methods={ઐ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=382), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=389), mdf=IMM, isLifted=true, name=ޕᷴ), name=ઐ, args=[], expression=false), Ꞩ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=204), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=216), mdf=IMM, isLifted=true, name=প઼), name=Ꞩ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=226), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=226), mdf=IMM, isLifted=true, name=ଽൈໍ), name=יִ)], expression=0), ꠊ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=333), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=344), mdf=IMM, isLifted=true, name=ᎏ︯⳱), name=ꠊ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=355), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=355), mdf=READ, isLifted=false, name=ℐ), name=ℓ)], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=371))), ઽ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=281), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=288), mdf=CAPSULE, isLifted=false, name=ऽ‏ྫྷు), name=ઽ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=306), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=306), mdf=IMM, isLifted=true, name=$഼ᷙ), name=Ⴄ)], expression=0.0), ᾞ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=249), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=256), mdf=IMM, isLifted=false, name=ঐ൭ꣂఀ), name=ᾞ, args=[], expression=false)}), ચ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ચ, impl=[ஓ], extend=[], fields={}, methods={}), ୟ゙꠆=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=69), isCapability=true, isInterface=false, name=ୟ゙꠆, impl=[], extend=[], fields={ຊꩍ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=92), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=92), mdf=IMM, isLifted=true, name=ᏼ᠎ꩃੵ), name=ຊꩍ)}, methods={})}, main=23269.0)
Program(classDeclarations={￠=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=17), isCapability=false, isInterface=false, name=￠, impl=[ዃ൯], extend=[], fields={Ꚅ︬⃛=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=51), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=51), mdf=IMM, isLifted=true, name=ᶁୀ), name=Ꚅ︬⃛), ೞྍ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=42), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=42), mdf=IMM, isLifted=false, name=த), name=ೞྍ)}, methods={ῃ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=64), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=71), mdf=IMM, isLifted=true, name=ந), name=ῃ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=85), name=ຢ᪙, args=[])), ۿೋ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=102), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=117), mdf=IMM, isLifted=true, name=ⳗ4᭔ਃꠦ), name=ۿೋ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=131), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=131), mdf=IMM, isLifted=false, name=ꓖ), name=ໜ)], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=142), name=ᦇ, args=[441]))}), Ὀ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=Ὀ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=177), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=184), signalExpr=ᜥͧ)))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={ௐ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=36), isCapability=true, isInterface=false, name=ௐ, impl=[ৼ], extend=[], fields={લ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=104), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=104), mdf=READ, isLifted=false, name=ࠚ４ෞ), name=લ), ꘪ᮱=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=71), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=71), mdf=IMM, isLifted=true, name=ᝰ), name=ꘪ᮱), ￥=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=82), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=82), mdf=IMM, isLifted=false, name=ﵰꦼ), name=￥), ၒੌ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=119), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=119), mdf=IMM, isLifted=true, name=ꧽ), name=ၒੌ), Ξ〭ೣ꧔=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=91), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=91), mdf=IMM, isLifted=true, name=ງ), name=Ξ〭ೣ꧔)}, methods={}), ᦳ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=169), isCapability=false, isInterface=false, name=ᦳ, impl=[Ὶ๖, ৡె, ˬ᥋꧀], extend=[], fields={ᮯꥏ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=224), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=224), mdf=IMM, isLifted=false, name=ᢁ), name=ᮯꥏ), ਭ഼࠭ೋ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=205), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=205), mdf=IMM, isLifted=true, name=ⴧྫꪷୣૈྏ૩), name=ਭ഼࠭ೋ)}, methods={ﵮꚟꯦ꩘=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=233), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=240), mdf=IMM, isLifted=true, name=ꣻ), name=ﵮꚟꯦ꩘, args=[], expression=this)}), ດ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=133), isCapability=false, isInterface=true, name=ດ, impl=[], extend=[ਐั, ꭜ࿆ઁᨙ], fields={}, methods={}), לּ꧑ຼ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=269), isCapability=false, isInterface=true, name=לּ꧑ຼ, impl=[], extend=[ꡲ꘡꫁, ֏], fields={}, methods={}), ዊ়᜴፝ၧ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ዊ়᜴፝ၧ, impl=[], extend=[ວ, ℿ], fields={}, methods={})}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=467), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=312), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=319), mdf=IMM, name=ਊꠂ, value=, boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=333), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=340), mdf=IMM, name=Ὕ, value=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=353), receiver=ח᭘, fieldName=ຈ), boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=359), name=னേ〪, args=[Expression.LetExpr(pos=ProgramNode.Position(line=1, col=369), mdf=IMM, name=ई, value=𑚹৅, boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=425), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=385), head=this, tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=397), signalExpr=𞥚𞋺\03)), isLifted=false, methodName=װ, arguments=[, Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=435))]))]))))), isLifted=false, methodName=Ѓ۬꩖ꤦᜓᢅ౧, arguments=[Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=477))]))
Program(classDeclarations={ⷌ़᳭ଃ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ⷌ़᳭ଃ, impl=[], extend=[], fields={}, methods={}), ⷅ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=141), isCapability=false, isInterface=true, name=ⷅ, impl=[], extend=[µ, আ], fields={}, methods={}), ᱍࣻ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=20), isCapability=true, isInterface=false, name=ᱍࣻ, impl=[], extend=[], fields={⁀=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=42), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=42), mdf=IMM, isLifted=false, name=ᏻൂ), name=⁀)}, methods={＿๎៝=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=51), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=63), mdf=IMM, isLifted=true, name=ສୣ), name=＿๎៝, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=75), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=75), mdf=CAPSULE, isLifted=false, name=ฆ), name=ᱝֿ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=92), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=92), mdf=IMM, isLifted=true, name=ῶ), name=Ⱖ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=102), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=102), mdf=MUT, isLifted=false, name=ꍢ༹૽ೢ), name=ˬ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=117), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=117), mdf=IMM, isLifted=true, name=ශਃ), name=ៜܻ)], expression=ⅇ)})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=293), name=ꩊೣ, args=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=302), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=309), head=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=354), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=313), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=317), signalExpr=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=330), receiver=, fieldName=ⴧ᪵ꯧਁࠞു)), tail=ꧯ), fieldName=ῥႂ), tail=7)), false]))
Program(classDeclarations={}, main=5000000.0)
Program(classDeclarations={ௐ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ௐ, impl=[ゝ, ຄ൬ꪸ, ஷ, ၡஂ, ό᱕], extend=[], fields={}, methods={Ὲ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=44), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=59), mdf=IMM, isLifted=false, name=ᇰ), name=Ὲ, args=[], expression=this)}), ᪧ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=83), isCapability=true, isInterface=false, name=ᪧ, impl=[], extend=[], fields={ⁿ᠌ઃ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=104), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=104), mdf=IMM, isLifted=true, name=ໞ), name=ⁿ᠌ઃ)}, methods={ꟼ́=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=116), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=131), mdf=IMM, isLifted=false, name=ࠅৈ), name=ꟼ́, args=[], expression=), ㅕ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=241), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=252), mdf=IMM, isLifted=true, name=Ἕ), name=ㅕ, args=[], expression=this), ဌ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=152), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=163), mdf=IMM, isLifted=true, name=ꧻ০), name=ဌ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=173), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=173), mdf=IMM, isLifted=false, name=⁔), name=ᮒ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=185), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=185), mdf=IMM, isLifted=false, name=ኳۡ), name=ౘꯦັ⵿), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=197), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=197), mdf=IMM, isLifted=true, name=ၡ), name=ኦ꤉ꩍ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=209), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=209), mdf=IMM, isLifted=true, name=Ᾱ), name=ʅ)], expression=\u02f0\uA5c5)})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=285)))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={ꮚ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ꮚ, impl=[], extend=[], fields={ힴি=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=31), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=31), mdf=IMM, isLifted=true, name=ᱏೆ), name=ힴি), অᢩ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=10), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, isLifted=true, name=ᾫ), name=অᢩ), ꬮ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=21), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=21), mdf=IMM, isLifted=true, name=Έ), name=ꬮ)}, methods={ᦕ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=43), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=55), mdf=IMM, isLifted=true, name=Ὕ়ුၘ), name=ᦕ, args=[], expression=229.0)})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=96), mdf=IMM, name=લූৗᷝେৗٰ, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=111), name=ᰆ৯ٰꪾຼၟ, args=[]), boundTo=ౠৢໍ))
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=12), receiver=ꪋ, fieldName=ቑ۸, value=ₖ))
Program(classDeclarations={Ͳെ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=77), isCapability=false, isInterface=true, name=Ͳെ, impl=[], extend=[Ɪꙺັ], fields={}, methods={}), ⁀〯=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=137), isCapability=false, isInterface=true, name=⁀〯, impl=[], extend=[], fields={}, methods={}), ଽ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ଽ, impl=[], extend=[ⵗ, פּ, ࢽଂ, ︴᳭], fields={}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=162), head=this, tail=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=190), receiver=0.7141571044921875, isLifted=true, methodName=ᏸ, arguments=[])))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=CAPSULE, name=ኳঃ꛰, value=10.0, boundTo=false))
Program(classDeclarations={Ｒ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=Ｒ, impl=[], extend=[ﹱૣ, ப], fields={}, methods={}), ⴂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=207), isCapability=false, isInterface=true, name=ⴂ, impl=[], extend=[ᓵ], fields={}, methods={}), ਨ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=56), isCapability=false, isInterface=true, name=ਨ, impl=[], extend=[], fields={}, methods={})}, main=416.625)
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={}, main=3.0)
Program(classDeclarations={ἳ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=31), isCapability=true, isInterface=false, name=ἳ, impl=[], extend=[], fields={ୱ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=52), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=52), mdf=IMM, isLifted=false, name=ਲ୯), name=ୱ)}, methods={}), ਛୖؒு=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ਛୖؒு, impl=[], extend=[ⶹ], fields={}, methods={}), ꓙ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=68), isCapability=true, isInterface=false, name=ꓙ, impl=[], extend=[], fields={ￎৌၞ︪=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=89), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=89), mdf=READ, isLifted=false, name=ⷈ؜), name=ￎৌၞ︪), ᕚ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=117), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=117), mdf=IMM, isLifted=false, name=ଐ), name=ᕚ), కॢ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=106), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=106), mdf=IMM, isLifted=false, name=ኸꙶ็), name=కॢ)}, methods={}), ꭞ៥ࠦ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=128), isCapability=false, isInterface=true, name=ꭞ៥ࠦ, impl=[], extend=[ᳵৗ], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=220), signalExpr=this))
Program(classDeclarations={}, main=𝔋)
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=this))
Program(classDeclarations={}, main=0)
Program(classDeclarations={}, main=false)
Program(classDeclarations={〱=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=28), isCapability=false, isInterface=true, name=〱, impl=[], extend=[], fields={}, methods={}), ￔ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ￔ, impl=[], extend=[ൔ], fields={}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=52)))
Program(classDeclarations={৻゙=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=৻゙, impl=[], extend=[], fields={}, methods={})}, main=ꬣ)
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ᬎ, args=[1.97001216E8, DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=36), receiver=0.0, fieldName=ₕ), Expression.LetExpr(pos=ProgramNode.Position(line=1, col=42), mdf=IMM, name=ͻ, value=Ω, boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=56), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=63), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=67), signalExpr=this), tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=86), name=ఉ, args=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=94), name=ⷄ, args=[]), this, Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=117))]))))]))
Program(classDeclarations={ﬓ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=163), isCapability=false, isInterface=false, name=ﬓ, impl=[], extend=[], fields={ળ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=173), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=173), mdf=IMM, isLifted=true, name=ₓꪴ), name=ળ)}, methods={ㄊ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=184), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=195), mdf=IMM, isLifted=true, name=Ⴧऺ᪁ୣ), name=ㄊ, args=[], expression=)}), ష=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ష, impl=[], extend=[ꩇ, ঽ, V], fields={}, methods={}), ન=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=341), isCapability=false, isInterface=false, name=ન, impl=[], extend=[], fields={}, methods={}), ၰ​=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=36), isCapability=false, isInterface=false, name=ၰ​, impl=[], extend=[], fields={}, methods={ᱯ۲=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=85), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=100), mdf=IMM, isLifted=false, name=ຫ), name=ᱯ۲, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=108), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=108), mdf=IMM, isLifted=true, name=Ｗ), name=נּ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=118), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=118), mdf=IMM, isLifted=false, name=ᰂ︢), name=ᳪ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=127), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=127), mdf=IMM, isLifted=true, name=ຳؗੀ), name=ಉ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=139), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=139), mdf=IMM, isLifted=false, name=ꕨ), name=ஒുⷷ)], expression=ணᝲᨚ), Ҡ؜=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=47), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=54), mdf=IMM, isLifted=false, name=ஊ), name=Ҡ؜, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=62), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=62), mdf=IMM, isLifted=true, name=ꦕࠧ), name=פּ)], expression=this)}), మ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=222), isCapability=false, isInterface=true, name=మ, impl=[], extend=[£꣔៝ᨗऻ᳒, Ⴧ], fields={}, methods={})}, main=15.671630859375)
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={ⷚ౬േ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=772), isCapability=false, isInterface=true, name=ⷚ౬േ, impl=[], extend=[], fields={}, methods={}), ﬗ᷐ັ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=791), isCapability=false, isInterface=false, name=ﬗ᷐ັ, impl=[], extend=[], fields={}, methods={ᭅ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=831), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=842), mdf=IMM, isLifted=true, name=ꝵ), name=ᭅ, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=856), mdf=IMM, name=ۦ, value=ற៝, boundTo=)), Ώ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=803), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=810), mdf=IMM, isLifted=true, name=ય), name=Ώ, args=[], expression=)}), ຍௗ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=58), isCapability=false, isInterface=false, name=ຍௗ, impl=[ᾨၞั, ꧠࣛ꘧ᰧౖׅꥋ, ౡ], extend=[], fields={}, methods={ၐᩛ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=158), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=169), mdf=IMM, isLifted=true, name=Ⰰ়), name=ၐᩛ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=185), name=ⷓ, args=[])), ୱ্༵૨ౢ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=99), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=106), mdf=IMM, isLifted=true, name=ဿ༵᪲ে), name=ୱ্༵૨ౢ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=122), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=122), mdf=IMM, isLifted=false, name=ᖺླྀ᭫ૢః࿆), name=ວ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=135), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=135), mdf=IMM, isLifted=false, name=ⴭ), name=דּ྇)], expression=0.0)}), ℂੀ၄=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=204), isCapability=false, isInterface=false, name=ℂੀ၄, impl=[], extend=[], fields={ࢶ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=216), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=216), mdf=IMM, isLifted=false, name=ꩮേ), name=ࢶ), ⴝੇ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=225), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=225), mdf=IMM, isLifted=true, name=ꪁ), name=ⴝੇ)}, methods={ℕꠋ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=449), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=456), mdf=IMM, isLifted=false, name=ၜ܏ꠂ), name=ℕꠋ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=466), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=466), mdf=IMM, isLifted=true, name=ᨂ), name=ϭ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=476), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=476), mdf=IMM, isLifted=false, name=ᎍ), name=ͼ)], expression=1.9327352832E11), ଳ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=362), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=369), mdf=IMM, isLifted=true, name=ఏੂ᳒), name=ଳ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=380), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=380), mdf=IMM, isLifted=true, name=ࠤ), name=ዖ༥ᢆꯩ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=393), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=393), mdf=IMM, isLifted=false, name=ப), name=ໂ)], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=404), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=408), mdf=IMM, name=ᦰො, value=true, boundTo=true), tail=ກ࡚)), ધ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=500), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=511), mdf=IMM, isLifted=false, name=ᤅໍ), name=ધ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=519), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=519), mdf=IMM, isLifted=true, name=ਆ꫁), name=ॱࠦ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=531), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=531), mdf=IMM, isLifted=false, name=Ⲻ), name=Ἤ྆ਿ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=545), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=545), mdf=IMM, isLifted=true, name=ὲ༿), name=ꦝֱ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=557), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=557), mdf=IMM, isLifted=true, name=ⳳ゙ᨘং), name=ߴ)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=573), mdf=IMM, name=Ή, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=582), head=false, tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=595), mdf=READ, name=ခ০ၱꥈ, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=611), name=＿, args=[Ꮙౢ॑, DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=633), receiver=ୖ, fieldName=ￋ)]), boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=644), mdf=MUT, name=ꣻ⃖ྼ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=657)), boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=667), head=this, tail=\50)))), boundTo=9.57874176E8)), ៜ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=236), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=251), mdf=IMM, isLifted=true, name=ලꩃୌٝৢ؜்ܑ), name=ៜ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=267), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=267), mdf=MUT, isLifted=false, name=ౚ), name=ᜭ௮)], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=283), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=290), mdf=IMM, name=ὕ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=301), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=305), mdf=IMM, name=ꤞ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=316)), boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=326))), tail=0), boundTo=0.002))), ˬᮩ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=717), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=728), mdf=IMM, isLifted=true, name=ႎꧥ), name=ˬᮩ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=739), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=739), mdf=IMM, isLifted=false, name=ኌ﻿ﬞ), name=ၡ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=749), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=749), mdf=IMM, isLifted=true, name=ⶂ), name=יּૢ)], expression=難)}), ㇽฺැ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ㇽฺැ, impl=[], extend=[], fields={}, methods={u=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=23), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=34), mdf=IMM, isLifted=false, name=Ώ), name=u, args=[], expression=0.0)})}, main=false)
Program(classDeclarations={}, main=500000.0)
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=1152.0)
Program(classDeclarations={}, main=ഏૣ)
Program(classDeclarations={ꫂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ꫂ, impl=[], extend=[], fields={}, methods={ꓼ෦હ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=10), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=25), mdf=IMM, isLifted=false, name=ᰏ߇), name=ꓼ෦હ, args=[], expression=false), ៗ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=238), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=245), mdf=IMM, isLifted=true, name=ਅཱꪸ), name=ៗ, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=261), mdf=IMM, name=ʹ, value=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=290), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=270), signalExpr=false), isLifted=true, methodName=أ, arguments=[]), boundTo=this)), ங=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=54), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=61), mdf=IMM, isLifted=true, name=ǧ܏ᮧ), name=ங, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=72), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=72), mdf=IMM, isLifted=true, name=ඉཷ໙), name=ਫ਼꣖٣๔), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=87), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=87), mdf=IMM, isLifted=false, name=ꣽ), name=ঢ়), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=95), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=95), mdf=READ, isLifted=false, name=Ύ), name=ᠤ࡛), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=109), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=109), mdf=IMM, isLifted=false, name=ஐ), name=ꣽ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=117), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=117), mdf=IMM, isLifted=false, name=ﷶ᳭ᨙ්), name=Ὃࠗ)], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=132), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=139), mdf=IMM, name=গࣘ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=150), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=157), signalExpr=false)), boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=181), name=Ό, args=[DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=194), receiver=ץ, isLifted=true, methodName=ೱ, arguments=[Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=200), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=207)))])]))))}), Ό=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=317), isCapability=false, isInterface=false, name=Ό, impl=[], extend=[], fields={Ͷ⳱ྟ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=337), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=337), mdf=IMM, isLifted=true, name=ꬎ), name=Ͷ⳱ྟ), ＿ׅ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=327), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=327), mdf=IMM, isLifted=false, name=ꩺ෫), name=＿ׅ), ଋ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=349), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=349), mdf=IMM, isLifted=false, name=ଽ༙᳷ٰ), name=ଋ)}, methods={µ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=360), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=367), mdf=IMM, isLifted=true, name=ꘚ), name=µ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=376), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=376), mdf=READ, isLifted=false, name=￦), name=ⷈ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=389), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=389), mdf=READ, isLifted=false, name=ꞵ꙯), name=ᢧ꫁᮲)], expression=false)})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=428)))
Program(classDeclarations={ℨ゙=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ℨ゙, impl=[], extend=[ῒ, ꢒ], fields={}, methods={}), ࠉ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=33), isCapability=false, isInterface=true, name=ࠉ, impl=[], extend=[ೲ, ꫳ۴ꥒౣ], fields={}, methods={})}, main=1.0)
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=this)
Program(classDeclarations={Ὀೇ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=Ὀೇ, impl=[], extend=[], fields={}, methods={ႁꠦཱུꪰ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=22), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=29), mdf=IMM, isLifted=false, name=ˢ੮̃), name=ႁꠦཱུꪰ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=41), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=41), mdf=IMM, isLifted=true, name=ℤ), name=Ⳳ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=51), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=51), mdf=IMM, isLifted=true, name=ၰ), name=ᆿ)], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=64), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=71), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=78), signalExpr=true))))})}, main=)
Program(classDeclarations={}, main=1.8874368E8)
Program(classDeclarations={ߺꪷົ۸ꦴੑ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ߺꪷົ۸ꦴੑ, impl=[], extend=[], fields={}, methods={ໜ፟=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=15), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=22), mdf=IMM, isLifted=true, name=ꔅ), name=ໜ፟, args=[], expression=true), ಛꠂ꙯=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=46), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=53), mdf=CAPSULE, isLifted=false, name=ೞି), name=ಛꠂ꙯, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=71), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=71), mdf=IMM, isLifted=true, name=﹍༙), name=ቋ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=82), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=82), mdf=IMM, isLifted=true, name=ºૢ഻ୋ઼), name=Ὑ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=96), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=96), mdf=IMM, isLifted=true, name=ꩺ৭ௗ), name=ಸ)], expression=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=120), receiver=false, isLifted=true, methodName=Ⴭൣ, arguments=[Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=127), head=this, tail=this), Expression.LetExpr(pos=ProgramNode.Position(line=1, col=151), mdf=IMM, name=ꜟ, value=255.0, boundTo=\'\f), ኡ, Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=189), head=0.66, tail=this)]))}), ⶍ᳴=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=287), isCapability=true, isInterface=false, name=ⶍ᳴, impl=[], extend=[], fields={ℽႂٰ࿆=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=309), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=309), mdf=IMM, isLifted=true, name=ᢪ), name=ℽႂٰ࿆)}, methods={ߺॗࠗ୩ೄ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=360), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=372), mdf=IMM, isLifted=true, name=Ꚓ), name=ߺॗࠗ୩ೄ, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=390), mdf=IMM, name=ℇ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=397), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=404), mdf=IMM, name=ၮ, value=448.0, boundTo=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=435), receiver=2.0, fieldName=투ᬺ, value=448.0))), boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=458), name=ສ, args=[this]))), 〇ೢ￻ﬞ፝=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=322), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=333), mdf=IMM, isLifted=true, name=Ꮔ), name=〇ೢ￻ﬞ፝, args=[], expression=this)}), ਫ᭐=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=234), isCapability=true, isInterface=false, name=ਫ᭐, impl=[ਲ਼ଃ〬, ﾠ, ꪵୗෲ꘦ܑ], extend=[], fields={}, methods={}), ῗ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=485), isCapability=true, isInterface=false, name=ῗ, impl=[ዄꨩ], extend=[], fields={}, methods={}), ៜ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=221), isCapability=false, isInterface=false, name=ៜ, impl=[], extend=[], fields={}, methods={})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=531), signalExpr=true))
Program(classDeclarations={ⴧ഻ׂೋ്༣=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ⴧ഻ׂೋ്༣, impl=[], extend=[], fields={ῐ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=29), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=29), mdf=MUT, isLifted=false, name=＄), name=ῐ), ײ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=41), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=41), mdf=IMM, isLifted=false, name=ᄡ), name=ײ), ￆު=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=15), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=15), mdf=IMM, isLifted=false, name=ℇᬁऻၧܑྡྷ), name=ￆު)}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=59), head=false, tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=72), head=1, tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=83), signalExpr=ⴎ))))
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=22))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={ⶊޫ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=180), isCapability=false, isInterface=false, name=ⶊޫ, impl=[], extend=[], fields={}, methods={}), ꠅ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ꠅ, impl=[], extend=[], fields={ൡ⃮ꤧс=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=21), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=21), mdf=IMM, isLifted=false, name=ຈ), name=ൡ⃮ꤧс)}, methods={ᰑྱྤ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=32), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=39), mdf=IMM, isLifted=true, name=ꫂ), name=ᰑྱྤ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=50), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=50), mdf=READ, isLifted=false, name=উ꫶ࠠ꯸), name=ഝ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=66), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=66), mdf=MUT, isLifted=false, name=ⷋୌᮧ), name=ዪ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=80), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=80), mdf=IMM, isLifted=true, name=〼), name=ⁿ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=90), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=90), mdf=READ, isLifted=false, name=〤), name=ذ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=103), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=103), mdf=IMM, isLifted=true, name=ਝ), name=ၥ۶), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=114), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=114), mdf=IMM, isLifted=true, name=ㄇ), name=לּ⃭), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=125), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=125), mdf=CAPSULE, isLifted=false, name=ܐ᭖), name=ꠃ)], expression=\uu7b18𑑝)}), ઽ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=163), isCapability=false, isInterface=true, name=ઽ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=201), mdf=IMM, name=হ, value=this, boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=218), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=225), mdf=IMM, name=ኋ, value=198, boundTo=ᢂྃꠥ))))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=ବௌ, tail=this))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=11), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=18))), tail=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=38), receiver=, fieldName=ℱ, value=2)))
Program(classDeclarations={ꬆಁ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ꬆಁ, impl=[], extend=[], fields={}, methods={ⷋꠂ꯭⁪5=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=11), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=26), mdf=CAPSULE, isLifted=false, name=ꣽ), name=ⷋꠂ꯭⁪5, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=45), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=45), mdf=IMM, isLifted=true, name=ퟎ), name=ˢີ૽⃡)], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=61), signalExpr=ఽ)), ಐ︮ેﬞ᭲꯬=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=191), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=202), mdf=IMM, isLifted=true, name=Cୣা؀), name=ಐ︮ેﬞ᭲꯬, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=224), head=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=263), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=228), name=ᲈꪰ, args=[true, this, 0]), fieldName=ߴࠞۧৌಁ), tail=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=283), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=273)), isLifted=true, methodName=ܐ, arguments=[]))), ｐᬃ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=78), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=85), mdf=READ, isLifted=false, name=ⅎ), name=ｐᬃ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=98), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=98), mdf=IMM, isLifted=true, name=ఽꯪූ), name=ᇋⷲ᩸ྮ᳑ై༹ꨩ೯᮵)], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=122))), රᳶූ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=133), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=144), mdf=IMM, isLifted=true, name=﹩), name=රᳶූ, args=[], expression=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=179), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=160), signalExpr=49), isLifted=false, methodName=ኍ, arguments=[]))})}, main=true)
Program(classDeclarations={〹=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=〹, impl=[লੇ⃧], extend=[], fields={ᾄ๓︌=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=37), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=37), mdf=IMM, isLifted=true, name=ﭱꩼ), name=ᾄ๓︌)}, methods={ﭢ8ั=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=170), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=177), mdf=IMM, isLifted=true, name=ச۵), name=ﭢ8ั, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=189), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=189), mdf=IMM, isLifted=false, name=ꠃ), name=ਏ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=197), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=197), mdf=IMM, isLifted=true, name=סּ), name=կੵ᮱᩷꙯ࠖ২)], expression=false), ᳪ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=119), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=126), mdf=MUT, isLifted=false, name=µ), name=ᳪ, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=142), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=149), signalExpr=0))), ઈ᠍꤃၂ಂ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=50), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=61), mdf=IMM, isLifted=true, name=ⶱ᪰ᜲꚞ), name=ઈ᠍꤃၂ಂ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=77), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=77), mdf=IMM, isLifted=true, name=ൽൢ), name=ຂֿ໔ׇꩌ)], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=95), signalExpr=7.555786372591432E23))}), ഽ᮹ೇ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=229), isCapability=true, isInterface=false, name=ഽ᮹ೇ, impl=[], extend=[], fields={વ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=267), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=267), mdf=IMM, isLifted=false, name=ℨೇঁൊ), name=વ), Ὑ୮ᬂึே=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=252), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=252), mdf=IMM, isLifted=true, name=ꨁೆ), name=Ὑ୮ᬂึே)}, methods={})}, main=)
Program(classDeclarations={}, main=this)
Program(classDeclarations={Ⰸ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=Ⰸ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=14), mdf=IMM, name=֏ꫯ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=24), signalExpr=1), boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=43)))))
Program(classDeclarations={}, main=0)
Program(classDeclarations={ꠌ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꠌ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=77), mdf=IMM, name=ⵯ᪑ꨬ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=86), mdf=IMM, name=৲꤭, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=96), name=ℂ, args=[, DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=118), receiver=this, isLifted=false, methodName=￥, arguments=[ਏ, false, 71, ]), 13, Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=162)), ꮻ, Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=177), head=28, tail=), ꧠ, 2]), boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=227), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=217)), isLifted=true, methodName=ዀ౯ಿ, arguments=[this, 0.0])), boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=257), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=264), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=271), mdf=IMM, name=ៗ҃꙯, value=false, boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=294)))))))
Program(classDeclarations={த༷=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=169), isCapability=true, isInterface=false, name=த༷, impl=[], extend=[], fields={}, methods={ꨠ᷿ࠢᯨꩌ൩ࠧႂ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=191), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=202), mdf=IMM, isLifted=false, name=ߎ꣘꣗꤁), name=ꨠ᷿ࠢᯨꩌ൩ࠧႂ, args=[], expression=false)}), ᢪ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=41), isCapability=false, isInterface=false, name=ᢪ, impl=[], extend=[], fields={ޱಁ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=51), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=51), mdf=IMM, isLifted=true, name=Ꮢ), name=ޱಁ), ㄱ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=70), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=70), mdf=IMM, isLifted=true, name=₮ං܏), name=ㄱ), ꭣ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=62), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=62), mdf=IMM, isLifted=false, name=õ), name=ꭣ)}, methods={ຢ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=120), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=127), mdf=IMM, isLifted=false, name=ꩩ), name=ຢ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=134), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=134), mdf=IMM, isLifted=true, name=ﬔॉ), name=ⶇ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=145), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=145), mdf=IMM, isLifted=false, name=ഽৣ), name=ᮮ)], expression=true), ꚍ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=82), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=93), mdf=IMM, isLifted=false, name=ⶒ᧐), name=ꚍ, args=[], expression=false)}), ꫝಃৢ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ꫝಃৢ, impl=[], extend=[], fields={Ωੋࣙଃ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=12), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=12), mdf=READ, isLifted=false, name=ﶯੋꥊ), name=Ωੋࣙଃ), ॾ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=30), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=30), mdf=IMM, isLifted=false, name=ヽ), name=ॾ)}, methods={}), 請೫=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=241), isCapability=false, isInterface=true, name=請೫, impl=[], extend=[ख़ꩌၣ۰, ⁔ೕᰰᝳ﻿８ᷰ, ঽ], fields={}, methods={})}, main=סּ)
Program(classDeclarations={ꬎ꛱െ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=616), isCapability=true, isInterface=false, name=ꬎ꛱െ, impl=[], extend=[], fields={ঢ়ୌ᳴=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=650), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=650), mdf=IMM, isLifted=true, name=$໊), name=ঢ়ୌ᳴), Ꞵ੭ྒྷ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=639), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=639), mdf=IMM, isLifted=false, name=ℓୣ), name=Ꞵ੭ྒྷ)}, methods={ܐ࡛=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=663), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=674), mdf=IMM, isLifted=true, name=ଡ଼), name=ܐ࡛, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=689), head=0, tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=698), mdf=IMM, name=ⵯ഼ೆ, value=Infinity, boundTo=\0))), ମৈ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=746), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=753), mdf=IMM, isLifted=true, name=גּ), name=ମৈ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=763), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=763), mdf=IMM, isLifted=true, name=ⴧ), name=ங᜔)], expression=0.0)}), ꠸꩖ූ꤁ꤧ۬=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=64), isCapability=false, isInterface=false, name=꠸꩖ූ꤁ꤧ۬, impl=[מּஂ, ଡ଼॒̄, ℇ], extend=[], fields={ⁿ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=104), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=104), mdf=IMM, isLifted=true, name=ਇ), name=ⁿ)}, methods={ঽৗ܏=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=114), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=121), mdf=IMM, isLifted=false, name=ౡ), name=ঽৗ܏, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=135), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=142), mdf=MUT, name=Ꙓᬀె᱓, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=156), mdf=IMM, name=ℾꩃ꯶゙༹᳒ྸ҇, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=170)), boundTo=ﬂ), boundTo=1))), ཁ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=331), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=343), mdf=IMM, isLifted=true, name=ௐ), name=ཁ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=352), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=352), mdf=IMM, isLifted=true, name=ៗ), name=ᘀ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=362), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=362), mdf=IMM, isLifted=true, name=ⴧ), name=ಏ)], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=375), signalExpr=ঢ়ׄௌ)), કു႗ဳ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=201), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=208), mdf=IMM, isLifted=true, name=લꥈ), name=કു႗ဳ, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=226), mdf=IMM, name=ꥀ༘, value=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=300), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=237), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=244), mdf=IMM, name=ྋׅ, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=255), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=262), signalExpr=4.0)), boundTo=this)), fieldName=ꪵ, value=false), boundTo=0.06))}), Ⴧ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=Ⴧ, impl=[‿], extend=[], fields={ቐ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=35), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=35), mdf=MUT, isLifted=false, name=ⷓ઼࿆), name=ቐ), ଢ଼꙽=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=49), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=49), mdf=IMM, isLifted=true, name=ޓ໒), name=ଢ଼꙽)}, methods={}), ὗꠥੑ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=397), isCapability=false, isInterface=false, name=ὗꠥੑ, impl=[ｓো, ஹ, ᢚ⵿], extend=[], fields={}, methods={ۮ‪ૈ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=486), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=493), mdf=IMM, isLifted=true, name=ၥୂொꩻ᳷ᝳ), name=ۮ‪ૈ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=509), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=509), mdf=IMM, isLifted=true, name=ە), name=ஐ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=519), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=519), mdf=IMM, isLifted=true, name=Å꙯᪲ົৣ़), name=Ⲭꠋ਼༵꙯)], expression=true), ꭡ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=550), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=562), mdf=IMM, isLifted=true, name=ᨁ༵), name=ꭡ, args=[], expression=ꧺ), ল=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=583), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=590), mdf=IMM, isLifted=true, name=き), name=ল, args=[], expression=this), ޱᢩ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=434), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=449), mdf=CAPSULE, isLifted=false, name=ꪱ), name=ޱᢩ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=465), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=465), mdf=IMM, isLifted=true, name=ۯ), name=ਊ༦ꪰ)], expression=ທ)})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=799)))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={}, main=this)
Program(classDeclarations={ૐ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=13), isCapability=true, isInterface=false, name=ૐ, impl=[], extend=[], fields={}, methods={}), Ⴧ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=Ⴧ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={ࠤ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ࠤ, impl=[ꜙ⵿ຼ៝ﵷְ], extend=[], fields={}, methods={}), Ω=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=72), isCapability=false, isInterface=true, name=Ω, impl=[], extend=[ⅅಁ, ৰ, ښ, ำၢ, Ὃ], fields={}, methods={}), ଏ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=43), isCapability=false, isInterface=true, name=ଏ, impl=[], extend=[ꪱ۰], fields={}, methods={})}, main=\34)
Program(classDeclarations={}, main=this)
Program(classDeclarations={হั=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=হั, impl=[], extend=[Ⴭ], fields={}, methods={})}, main=1)
Program(classDeclarations={}, main=\t𑶒𛰀)
Program(classDeclarations={ຊ᜴꧳ꩍ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ຊ᜴꧳ꩍ, impl=[], extend=[], fields={฿ⷨ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=24), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=24), mdf=CAPSULE, isLifted=false, name=ఢഃ⁫ોၘ), name=฿ⷨ)}, methods={})}, main=\u8edC\uu4A1E\uFBdE)
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={ⶉ྆ꪲ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ⶉ྆ꪲ, impl=[ၦ, ۥ], extend=[], fields={ㅵ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=58), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=58), mdf=IMM, isLifted=false, name=ﺍܑౖ５୍), name=ㅵ), ｕ᮸=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=41), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=41), mdf=CAPSULE, isLifted=false, name=ၡ), name=ｕ᮸)}, methods={ℬ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=70), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=77), mdf=IMM, isLifted=false, name=ܐࣱ), name=ℬ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=85), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=85), mdf=MUT, isLifted=false, name=ￚᮨ), name=ℨ)], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=101)))})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=122), name=ఏ, args=[Expression.LetExpr(pos=ProgramNode.Position(line=1, col=130), mdf=IMM, name=ꨆ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=142), mdf=IMM, name=ᳪ, value=1, boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=160), name=ኳ᭫, args=[])), boundTo=𞀀\t)]))
Program(classDeclarations={ヾ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ヾ, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=31), name=ൾ꤆, args=[0]))
Program(classDeclarations={ڻᝒܺ᷒=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ڻᝒܺ᷒, impl=[], extend=[ꭠ, ꩀ, ൎ], fields={}, methods={})}, main=false)
Program(classDeclarations={P߱=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=17), isCapability=false, isInterface=false, name=P߱, impl=[], extend=[], fields={}, methods={}), ៗ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=31), isCapability=false, isInterface=false, name=ៗ, impl=[逸็݉ᤶ, ঽ, ꠸ั], extend=[], fields={}, methods={ㇰ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=283), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=290), mdf=IMM, isLifted=false, name=ဆ), name=ㇰ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=297), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=297), mdf=IMM, isLifted=true, name=ঢ়ෛ), name=ߺ᳗ꠦ︇ܑ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=312), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=312), mdf=IMM, isLifted=true, name=ૐۙ⳰ࠝ), name=ℍ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=325), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=325), mdf=IMM, isLifted=false, name=ຮେ), name=ꬕ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=334), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=334), mdf=IMM, isLifted=true, name=ꬔၙଁৈ), name=ኳ)], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=350), name=ガ, args=[59, Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=368), name=ꪧၠ, args=[]), 10.0, Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=394), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=401), mdf=IMM, name=ꣳ, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=410), name=ꠙ, args=[]), boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=425), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=432), name=ഐ়߫ꢀꠋ, args=[Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=444), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=448), name=દ़౧, args=[]), tail=\uu4feB), ߒো]))))])), Ὓ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=103), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=115), mdf=MUT, isLifted=false, name=꠸), name=Ὓ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=126), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=126), mdf=IMM, isLifted=false, name=য়), name=చ)], expression=4000.0), ꣻ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=148), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=163), mdf=IMM, isLifted=false, name=এ), name=ꣻ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=170), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=170), mdf=MUT, isLifted=false, name=ۼ), name=ℕ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=182), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=182), mdf=READ, isLifted=false, name=ͷ), name=ਏ꯳), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=196), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=196), mdf=IMM, isLifted=false, name=ᾢ), name=ﹰ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=204), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=204), mdf=IMM, isLifted=true, name=ⷌೌ⃬), name=ៗ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=216), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=216), mdf=IMM, isLifted=true, name=Πꫮ), name=ঽ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=227), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=227), mdf=CAPSULE, isLifted=false, name=Å), name=வꩍৢྲ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=246), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=246), mdf=IMM, isLifted=false, name=〵ꩍ), name=הּೊᰳଃ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=258), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=258), mdf=IMM, isLifted=false, name=ᳩ), name=ಸ)], expression=8.0E79), ᩈ᮪֤꧔=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=67), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=74), mdf=IMM, isLifted=true, name=ড়ׇ⳰), name=ᩈ᮪֤꧔, args=[], expression=false)}), ꧫ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=512), isCapability=false, isInterface=true, name=ꧫ, impl=[], extend=[], fields={}, methods={}), ძ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=529), isCapability=false, isInterface=true, name=ძ, impl=[], extend=[], fields={}, methods={}), ꧏ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꧏ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=553), mdf=IMM, name=ໃ઼܏ᬃொᤴ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=565)), boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=575), signalExpr=ຍৌ)))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=11), mdf=IMM, name=ຯ, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=23), signalExpr=this), boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=42), name=¤, args=[])), tail=3))
Program(classDeclarations={ي=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ي, impl=[], extend=[], fields={}, methods={}), ⴭ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=124), isCapability=false, isInterface=true, name=ⴭ, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=157), receiver=false, fieldName=ㆃ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=161))))
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=14), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=21), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=28), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=35), mdf=IMM, name=ၦ, value=🂔\ud8bD, boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=71), receiver=0.7, isLifted=false, methodName=︴꘢, arguments=[0.072])))))))
Program(classDeclarations={ൿܑ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ൿܑ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=25), signalExpr=ਗ⁠))
Program(classDeclarations={ιࠦ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ιࠦ, impl=[], extend=[], fields={ୱඃ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=34), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=34), mdf=IMM, isLifted=false, name=ꠈ), name=ୱඃ), ͷ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=22), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=22), mdf=IMM, isLifted=true, name=Ⴤ९ா), name=ͷ)}, methods={}), ꘚ꘣=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=50), isCapability=false, isInterface=true, name=ꘚ꘣, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=ῃூ)
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ⶖꧥ൫꧓８⁨, value=77.0, boundTo=2085))
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ᚂٰৗฺ, args=[Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=18), head=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=32), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=22)), isLifted=false, methodName=Ͳ, arguments=[Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=36)), , true, 5, Expression.TailExpr(pos=ProgramNode.Position(line=1, col=71), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=78))), ඎ꘣᳒ॗ२ၢ্៝ൂ, 91, ၺ꧔ᢅ, Expression.LetExpr(pos=ProgramNode.Position(line=1, col=121), mdf=READ, name=ꪹ୯, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=134), name=ꣽ, args=[\u1BfF\u3Ac6, this]), boundTo=𝔖\uuuuuuuDEC2\uuC1F6𑰀), 0, 300362015]), tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=228), head=ઊ᳸, tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=238), head=6.0, tail=ॐᮥ௨))), Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=268), signalExpr=)]))
Program(classDeclarations={֏ꥊো=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=100), isCapability=false, isInterface=true, name=֏ꥊো, impl=[], extend=[], fields={}, methods={}), ᰜ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ᰜ, impl=[], extend=[], fields={}, methods={}), ⴣꥌ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=119), isCapability=false, isInterface=true, name=ⴣꥌ, impl=[], extend=[ꦨ, ὀ๗１༷, ꓰ, ﷇ], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=170), mdf=IMM, name=ວ, value=ਐং, boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=346), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=187), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=194), mdf=IMM, name=ॐ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=203), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=210), mdf=IMM, name=ࢼ, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=219), name=Ꞣ, args=[]), boundTo=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=317), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=234), name=ይ, args=[Expression.LetExpr(pos=ProgramNode.Position(line=1, col=242), mdf=IMM, name=ᜰ, value=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=268), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=253), name=ࠍ, args=[]), isLifted=false, methodName=ᤕ, arguments=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=272), name=ச, args=[]), ꧡၳ]), boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=298)))]), fieldName=ⅽൊ))), boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=328)))), isLifted=true, methodName=ꬊ, arguments=[])))
Program(classDeclarations={ˮం=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ˮం, impl=[꠸꫶᱓], extend=[], fields={}, methods={Ể၁༷ົ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=38), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=45), mdf=IMM, isLifted=false, name=ከᭂꩼ), name=Ể၁༷ົ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=57), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=57), mdf=MUT, isLifted=false, name=ਆ), name=ᢃ)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=72), mdf=IMM, name=ລꯣ, value=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=93), receiver=379, fieldName=ܐ), boundTo=157.0))}), ᝌ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=116), isCapability=false, isInterface=true, name=ᝌ, impl=[], extend=[ώ, ײᤥ], fields={}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=156), name=Ⳬ꤀༨, args=[]))
Program(classDeclarations={}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=19), receiver=0.0, isLifted=true, methodName=श, arguments=[]))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ꤍั, value=0, boundTo=સ))
Program(classDeclarations={}, main=0)
Program(classDeclarations={ˬଁ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=27), isCapability=false, isInterface=false, name=ˬଁ, impl=[], extend=[], fields={ⁿ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=38), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=38), mdf=MUT, isLifted=false, name=ණ꤇๎), name=ⁿ)}, methods={}), ᰙ꣧ᮁ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ᰙ꣧ᮁ, impl=[], extend=[], fields={ꪜ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=12), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=12), mdf=MUT, isLifted=false, name=ਇ), name=ꪜ)}, methods={})}, main=ᜤ)
Program(classDeclarations={跚꫶૧ഃ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=跚꫶૧ഃ, impl=[], extend=[ৎۡ᥉], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=40), mdf=MUT, name=བྷ௦, value=ꫳ, boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=57), mdf=CAPSULE, name=ᝰ໊, value=გྐ, boundTo=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=89), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=79)), fieldName=ำ, value=true))))
Program(classDeclarations={ༀ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=205), isCapability=false, isInterface=true, name=ༀ, impl=[], extend=[ᎉૢ, Ἷ], fields={}, methods={}), Ⴒ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=111), isCapability=false, isInterface=true, name=Ⴒ, impl=[], extend=[ಡ], fields={}, methods={}), ⶨ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=28), isCapability=false, isInterface=true, name=ⶨ, impl=[], extend=[ߴ, ቋ⃡2, ࢡ᳒, ˢ, ֏], fields={}, methods={}), ৼ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ৼ, impl=[], extend=[₺], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=303), mdf=IMM, name=ⱍ, value=4.0, boundTo=this))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={ᢄ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ᢄ, impl=[], extend=[], fields={}, methods={}), èᮀ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=39), isCapability=true, isInterface=false, name=èᮀ, impl=[ᦾ, ࠤ], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={ଳ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ଳ, impl=[៛ూ, ꨀ], extend=[], fields={}, methods={ቛ꠆=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=40), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=55), mdf=IMM, isLifted=false, name=ೞ), name=ቛ꠆, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=63), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=63), mdf=IMM, isLifted=false, name=ළ), name=ﲈ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=75), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=75), mdf=IMM, isLifted=true, name=ଓෞ), name=ᜂື᷾)], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=91), head=true, tail=0)), ⷛ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=114), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=121), mdf=IMM, isLifted=false, name=ⸯ), name=ⷛ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=128), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=128), mdf=IMM, isLifted=true, name=ᢪ᱁ႍۢ), name=ⵅ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=141), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=141), mdf=IMM, isLifted=false, name=ഢੀ), name=ະ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=150), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=150), mdf=IMM, isLifted=true, name=〼֖), name=ໆ)], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=164), signalExpr=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=196), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=171), head=false, tail=12), fieldName=ꜗ᭙⵿)))})}, main=this)
Program(classDeclarations={µൗ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=µൗ, impl=[], extend=[], fields={}, methods={})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=25), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=32), signalExpr=this)))
Program(classDeclarations={ᾂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ᾂ, impl=[וּ, Կ, ꭔ, ꬑ࿆᳐], extend=[], fields={இ᳭=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=38), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=38), mdf=IMM, isLifted=true, name=ᣝ), name=இ᳭)}, methods={ꘪၠ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=150), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=161), mdf=IMM, isLifted=true, name=ℕ࿆), name=ꘪၠ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=172), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=172), mdf=READ, isLifted=false, name=ˉ᧕ೊ), name=〵)], expression=true), ዀౖ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=49), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=56), mdf=IMM, isLifted=false, name=ວᩢ᳭), name=ዀౖ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=66), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=66), mdf=CAPSULE, isLifted=false, name=ࠨః), name=細), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=83), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=83), mdf=IMM, isLifted=false, name=қ), name=µ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=91), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=91), mdf=IMM, isLifted=false, name=ᜬ଼), name=ℨ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=100), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=100), mdf=IMM, isLifted=false, name=স), name=Ὑ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=112), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=112), mdf=IMM, isLifted=true, name=ℭ), name=ὃ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=122), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=122), mdf=READ, isLifted=false, name=ዂ), name=ភೕ)], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=139)))})}, main=ᳱ)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=ഏൢꤨ, tail=പ))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=ͽ, tail=))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=this)
Program(classDeclarations={ꩨॏۜ੭=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ꩨॏۜ੭, impl=[], extend=[], fields={ຍ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=36), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=36), mdf=CAPSULE, isLifted=false, name=םૢௗ), name=ຍ), ꧏ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=24), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=24), mdf=IMM, isLifted=true, name=Ⳳꦾ༾), name=ꧏ), ￦᷾ꦃ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=54), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=54), mdf=IMM, isLifted=true, name=ༀ), name=￦᷾ꦃ)}, methods={}), ‿=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=69), isCapability=false, isInterface=true, name=‿, impl=[], extend=[], fields={}, methods={})}, main=\241\3)
Program(classDeclarations={ᢍ⃓=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=29), isCapability=true, isInterface=false, name=ᢍ⃓, impl=[著ꪷᤱ, ၓੀැ], extend=[], fields={}, methods={ﮱ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=191), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=202), mdf=READ, isLifted=false, name=º), name=ﮱ, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=219), signalExpr=this)), ኹೃ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=73), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=80), mdf=IMM, isLifted=true, name=ಬ᧓), name=ኹೃ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=91), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=91), mdf=IMM, isLifted=true, name=懫ֿ꧶ੑׇ), name=ꠇ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=105), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=105), mdf=IMM, isLifted=false, name=﹩꤁᪳ົ), name=Ï)], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=119), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=126)))), ߊ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=141), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=148), mdf=IMM, isLifted=true, name=ใ), name=ߊ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=157), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=157), mdf=CAPSULE, isLifted=false, name=ￗിീൢ), name=Ⴭ꠆ൣఁ܏᠘)], expression=)}), ပ࿆ൗ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ပ࿆ൗ, impl=[ᏻ], extend=[], fields={}, methods={})}, main=Εꫮꩌ)
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=23), receiver=1.0, isLifted=true, methodName=ⷐୁ᮸ਃ઼᠌, arguments=[15, Expression.TailExpr(pos=ProgramNode.Position(line=1, col=41), signalExpr=false), Expression.LetExpr(pos=ProgramNode.Position(line=1, col=61), mdf=IMM, name=ⳬ᳹, value=ຄֿৢోౕ, boundTo=true)])))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={}, main=true)
Program(classDeclarations={ﷱ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=207), isCapability=true, isInterface=false, name=ﷱ, impl=[], extend=[], fields={Ꮲ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=228), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=228), mdf=IMM, isLifted=false, name=Δ⵿), name=Ꮲ)}, methods={}), ᎂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ᎂ, impl=[￠༷ઃ᬴ާ႖], extend=[], fields={ൎ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=40), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=40), mdf=CAPSULE, isLifted=false, name=ໟ଼), name=ൎ)}, methods={ອ᜴௯=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=57), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=64), mdf=IMM, isLifted=true, name=ⸯ), name=ອ᜴௯, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=80), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=84), signalExpr=), tail=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=107), receiver=, fieldName=ۿׁ༵᭗ꢁ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=115), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=122), mdf=IMM, name=ῲ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=129), mdf=MUT, name=ⱓୈ, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=142), name=ᶫ഻, args=[]), boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=158), head=true, tail=14)), boundTo=0.0)))))})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=247), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=254), signalExpr=52827)))
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=﹩꩒, args=[]))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=ﶒ, tail=70.0))
Program(classDeclarations={￠=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=￠, impl=[], extend=[], fields={}, methods={}), Ｑ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=17), isCapability=false, isInterface=false, name=Ｑ, impl=[], extend=[], fields={৻ੰ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=27), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=27), mdf=IMM, isLifted=false, name=Ὄꤨၞ), name=৻ੰ), ﷸ৭=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=61), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=61), mdf=IMM, isLifted=true, name=ࠄ⳰), name=ﷸ৭), ᨆୋீꠋ⁩ി᮰ྒੑ꯰᥉=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=42), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=42), mdf=IMM, isLifted=false, name=ªꩌ), name=ᨆୋீꠋ⁩ി᮰ྒੑ꯰᥉)}, methods={}), କ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=76), isCapability=false, isInterface=true, name=କ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={ᾩோ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=28), isCapability=true, isInterface=false, name=ᾩோ, impl=[], extend=[], fields={ຮี=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=81), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=81), mdf=IMM, isLifted=false, name=₽়), name=ຮี), Ⴧ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=60), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=60), mdf=IMM, isLifted=true, name=µ), name=Ⴧ), எᩘ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=70), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=70), mdf=IMM, isLifted=true, name=ఎ), name=எᩘ), ऽ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=50), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=50), mdf=IMM, isLifted=true, name=ஜ), name=ऽ)}, methods={ඳ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=122), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=134), mdf=IMM, isLifted=true, name=ꬌ), name=ඳ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=143), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=143), mdf=IMM, isLifted=true, name=ၯ), name=ᳪ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=153), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=153), mdf=IMM, isLifted=false, name=ⁱﬞంੌ︌), name=ࡏ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=165), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=165), mdf=IMM, isLifted=true, name=Ή), name=ण)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=178), mdf=IMM, name=ᮯ, value=true, boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=195), signalExpr=ۮ८))), ৠᬃ༙ั൫=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=215), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=226), mdf=IMM, isLifted=true, name=ៗ), name=ৠᬃ༙ั൫, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=244), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=251), mdf=IMM, name=ଫ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=262), head=0, tail=3), boundTo=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=305), receiver=1.3969838619232178E-8, fieldName=〳, value=2.2667359117774297E23)))), ẜ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=91), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=98), mdf=IMM, isLifted=true, name=º༨), name=ẜ, args=[], expression=1)}), ੳೢ࡚=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=339), isCapability=true, isInterface=false, name=ੳೢ࡚, impl=[ៗ࠙༾᪱, ຮ, າ, ࠨ, ၯ, M, ۦ꣒, ࠤᰨ্], extend=[], fields={}, methods={}), 〻꠆ॣౢ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=413), isCapability=false, isInterface=false, name=〻꠆ॣౢ, impl=[ძ, ল, ఝ, ଊั], extend=[], fields={}, methods={ˉٞ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=453), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=465), mdf=IMM, isLifted=true, name=ۿ), name=ˉٞ, args=[], expression=39)}), ⁿ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ⁿ, impl=[], extend=[ࠤ], fields={}, methods={})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=502), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=509), mdf=READ, name=ꡰ, value=false, boundTo=0)))
Program(classDeclarations={}, main=7)
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=14), mdf=IMM, name=ቌ, value=0, boundTo=஄\b\f\uuuFE86\ud9BA)))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=︳, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=18), signalExpr=4041.0), boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=71), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=40), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=47), signalExpr=ゝัꩃ۰꤫)), isLifted=true, methodName=ﶥ, arguments=[])))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={}, main=ꬎ߫６ୣ᭫᠋؜ꪸ)
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=14), signalExpr=ℤ)))
Program(classDeclarations={ॐ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ॐ, impl=[], extend=[ၿెைؓ], fields={}, methods={}), ᙷ︋=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=269), isCapability=false, isInterface=false, name=ᙷ︋, impl=[இஂ, ꡄ, থୗﬞ], extend=[], fields={}, methods={})}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=321), receiver=, fieldName=க))
Program(classDeclarations={៛៨ٰ‭፞=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=៛៨ٰ‭፞, impl=[ꘑ, ꯖၘ], extend=[], fields={}, methods={＿=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=33), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=45), mdf=IMM, isLifted=true, name=ៗ൬), name=＿, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=55), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=55), mdf=IMM, isLifted=true, name=ꪽౢ֝), name=לּ)], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=70), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=77), mdf=MUT, name=ቘ, value=9.041691839684063E-10, boundTo=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=115), receiver=8, fieldName=ᳰᬂૅਁ))))}), ꣳ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=132), isCapability=false, isInterface=true, name=ꣳ, impl=[], extend=[], fields={}, methods={}), ۮං=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=228), isCapability=false, isInterface=false, name=ۮං, impl=[ౚ꤀], extend=[], fields={ߢஂ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=254), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=254), mdf=IMM, isLifted=true, name=ꣴꩌ), name=ߢஂ)}, methods={Ëׁޮୂ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=266), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=277), mdf=IMM, isLifted=true, name=ৼᰳ꣡೫), name=Ëׁޮୂ, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=297), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=304), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=311), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=318), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=325)))))))})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=362), mdf=IMM, name=ￎ⃪, value=8, boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=382))))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=11)), tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=21))))
Program(classDeclarations={}, main=this)
Program(classDeclarations={Ζ۪=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=Ζ۪, impl=[], extend=[ଡ༹, ꕮ, એ], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=101), signalExpr=false))
Program(classDeclarations={ᄥ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ᄥ, impl=[], extend=[௹ྒྷꪳ᱔], fields={}, methods={})}, main=)
Program(classDeclarations={}, main=1)
Program(classDeclarations={ºꪸ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ºꪸ, impl=[쨮], extend=[], fields={৻၆=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=25), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=25), mdf=IMM, isLifted=true, name=ꤿോ), name=৻၆)}, methods={ꤸ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=72), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=79), mdf=IMM, isLifted=false, name=直), name=ꤸ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=86), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=86), mdf=IMM, isLifted=true, name=ﹳ), name=ຽᮧ꧐ꩃ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=99), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=99), mdf=IMM, isLifted=true, name=ͷ), name=ಲൈ)], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=113), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=117), mdf=READ, name=ៗ꣘, value=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=206), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=138), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=142), mdf=READ, name=ᤘ, value=\uuuuuuF7B7\\𞀣ᜎ\317ꬨ\f, boundTo=false), tail=10.0), fieldName=ள), boundTo=៺), tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=221), name=ဦᯭ, args=[𛲀, DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=246), receiver=false, fieldName=ῖྒྷ), ﬗׇ]))), _഻᳐=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=37), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=49), mdf=IMM, isLifted=false, name=ᣟ), name=_഻᳐, args=[], expression=this), ݼ⁫=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=269), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=276), mdf=IMM, isLifted=true, name=Ή), name=ݼ⁫, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=291), mdf=IMM, name=ᜌ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=298)), boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=308), signalExpr=1228.0)))})}, main=this)
Program(classDeclarations={꠸ꣀ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=203), isCapability=false, isInterface=true, name=꠸ꣀ, impl=[], extend=[ೲ, µ], fields={}, methods={}), ⵯꠋဳۧ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ⵯꠋဳۧ, impl=[], extend=[], fields={〲꯭=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=13), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=13), mdf=CAPSULE, isLifted=false, name=քି), name=〲꯭)}, methods={ဿꪾ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=139), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=146), mdf=IMM, isLifted=false, name=ၛ), name=ဿꪾ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=154), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=154), mdf=IMM, isLifted=true, name=ꭥ), name=ໆ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=164), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=164), mdf=IMM, isLifted=false, name=ﹱ), name=ᢋ༹꣐), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=174), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=174), mdf=IMM, isLifted=true, name=ᢋ), name=ᚁ)], expression=0.0), ৎ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=31), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=43), mdf=IMM, isLifted=true, name=䡠︥), name=ৎ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=53), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=53), mdf=IMM, isLifted=false, name=ͱ܏⵿ྨۣ), name=ൾ)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=72), mdf=CAPSULE, name=ᙻ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=93), head=226, tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=106), signalExpr=false)), boundTo=))})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=243), mdf=MUT, name=〧, value=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=309), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=255), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=259), mdf=IMM, name=Ꞵ, value=ៗ༙⃮­ொ, boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=279), signalExpr=171)), tail=ꞵ), fieldName=ᝯ), boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=400), receiver=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=321), receiver=, isLifted=true, methodName=ছ, arguments=[DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=379), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=327), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=331), signalExpr=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=346), receiver=this, fieldName=ힳ)), tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=356), signalExpr=this)), fieldName=ቝᰦࠩ, value=ఎ༤)]), isLifted=true, methodName=ﬖ, arguments=[])))
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=昁))
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=20), receiver=, isLifted=false, methodName=ࡦ, arguments=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=24), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=31), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=38)))), Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=56), head=40, tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=71), head=𞺀\uuuua8c2, tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=91), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=98), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=105), signalExpr=𑌅))))), Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=139)), Expression.LetExpr(pos=ProgramNode.Position(line=1, col=149), mdf=IMM, name=ઽྕ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=161), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=168))), boundTo=this), Expression.LetExpr(pos=ProgramNode.Position(line=1, col=192), mdf=IMM, name=ￚ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=199), mdf=READ, name=ꬣ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=215)), boundTo=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=269), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=225), head=this, tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=237), mdf=IMM, name=ꩺ, value=this, boundTo=ℴ꘥ꧥ)), fieldName=ߺ)), boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=275), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=282), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=289), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=296), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=300), head=ႎ۫៤, tail=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=328), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=311), signalExpr=), fieldName=ￂ)), tail=true))))), ဋ⁨꙼, Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=371), head=true, tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=383), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=387), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=394), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=401), name=ꩦ౬, args=[]))), tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=425), mdf=IMM, name=ˬ, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=434), signalExpr=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=480), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=441), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=448), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=455), signalExpr=0.0))), fieldName=å, value=true)), boundTo=Ï)))])))
Program(classDeclarations={ﾸೋ̜ം=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ﾸೋ̜ം, impl=[], extend=[], fields={Ê̄᷾=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=13), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=13), mdf=IMM, isLifted=false, name=ⷞ), name=Ê̄᷾)}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=33), head=0, tail=true))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=ቘ೮, tail=1.0977046442100833E27))
Program(classDeclarations={ဏၲ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=431), isCapability=false, isInterface=false, name=ဏၲ, impl=[], extend=[], fields={}, methods={}), ቘ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ቘ, impl=[ꧻ, Ⴟ, ฿], extend=[], fields={}, methods={ୟᝲ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=32), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=43), mdf=IMM, isLifted=false, name=ꘪྐྵ๒), name=ୟᝲ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=53), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=53), mdf=IMM, isLifted=true, name=ⸯ〮ૅؓ), name=ࠅ)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=69), mdf=IMM, name=ں, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=77), head=true, tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=89), mdf=IMM, name=ⷊ, value=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=112), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=102)), isLifted=true, methodName=ළ, arguments=[]), boundTo=true)), boundTo=false)), ⳬா=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=151), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=158), mdf=IMM, isLifted=false, name=ﷵ੫), name=ⳬா, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=171), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=171), mdf=IMM, isLifted=true, name=ꫳ), name=ਲ)], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=184), name=ঐ⃡, args=[〨ః])), ຈ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=205), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=216), mdf=IMM, isLifted=false, name=ⷉ), name=ຈ, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=228), head=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=240), receiver=this, fieldName=＿, value=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=253), receiver=ᵫ᥏ᯰ, fieldName=Ϳ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=257), mdf=IMM, name=ⶾୖ꙯, value=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=288), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=270), signalExpr=1), isLifted=false, methodName=؋, arguments=[]), boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=299), name=ൖ, args=[])))), tail=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=411), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=318), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=322), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=329), signalExpr=௦಺൤)), tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=353), head=true, tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=365), mdf=IMM, name=￦, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=372), signalExpr=false), boundTo=2.5E-8))), isLifted=false, methodName=ῄಃ, arguments=[])))}), ժ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=445), isCapability=false, isInterface=false, name=ժ, impl=[], extend=[], fields={}, methods={ˍೋ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=455), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=470), mdf=READ, isLifted=false, name=ᮮࠛൄ࠘؜), name=ˍೋ, args=[], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=492)))})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=513), signalExpr=1067))
Program(classDeclarations={ڳꦃެ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ڳꦃެ, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=163), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=142), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=149))), fieldName=₻))
Program(classDeclarations={}, main=)
Program(classDeclarations={}, main=true)
Program(classDeclarations={ᱲੵ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=378), isCapability=false, isInterface=true, name=ᱲੵ, impl=[], extend=[], fields={}, methods={}), ቡ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ቡ, impl=[ஔ්႐], extend=[], fields={}, methods={ੲૻᮥ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=26), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=33), mdf=IMM, isLifted=false, name=ܐ), name=ੲૻᮥ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=47), name=ℾ, args=[this, true, Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=71), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=75), name=ͷᳲꥒ︧, args=[]), tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=93), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=97), mdf=IMM, name=ৠ၇්, value=0.3, boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=114), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=121), mdf=IMM, name=Ꝑ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=130), mdf=IMM, name=ΐ, value=false, boundTo=false), boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=158), mdf=IMM, name=ໃ, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=169), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=176))), boundTo=ӗ)))), tail=ༀ὾)), false]))}), ໟ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=239), isCapability=true, isInterface=false, name=ໟ, impl=[], extend=[], fields={ၷᝒ⃗ు=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=260), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=260), mdf=IMM, isLifted=false, name=ꢇྏﬞ᮱ᢩᝒ࿆), name=ၷᝒ⃗ు)}, methods={Ὑ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=277), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=289), mdf=IMM, isLifted=true, name=એ), name=Ὑ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=298), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=298), mdf=IMM, isLifted=true, name=ꪶ଼), name=৻ᤸ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=310), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=310), mdf=IMM, isLifted=true, name=ລ), name=ਹॢ॑ꫵ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=323), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=323), mdf=IMM, isLifted=false, name=ஙั７), name=ரꧥᬵ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=339), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=339), mdf=IMM, isLifted=false, name=Ὓ᜔༿܏ꦸ꠆), name=ὕ)], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=359), name=ອ, args=[]))})}, main=ꩈ)
Program(classDeclarations={}, main=6)
Program(classDeclarations={}, main=this)
Program(classDeclarations={ꫂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ꫂ, impl=[], extend=[], fields={ჰ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=36), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=36), mdf=IMM, isLifted=false, name=ૐ), name=ჰ), ᜭັັ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=21), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=21), mdf=READ, isLifted=false, name=ᳶ), name=ᜭັັ), ၚᮣ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=44), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=44), mdf=IMM, isLifted=true, name=ໆ꙯), name=ၚᮣ)}, methods={})}, main=163.0)
Program(classDeclarations={ຣ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ຣ, impl=[], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=24), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=28)), tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=38), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=45), head=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=57), receiver=\", isLifted=false, methodName=ۼ, arguments=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=61), name=ⶡୖ, args=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=70), name=ⴧ, args=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=78), name=ல܏ৗ, args=[])])])]), tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=110), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=114), name=ⸯ, args=[]), tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=129), name=௹, args=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=137), name=⁔, args=[]), this, Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=160))]))))))
Program(classDeclarations={µ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=µ, impl=[], extend=[ᝩ୍෬, ໝྞၢ], fields={}, methods={}), ﬕ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=59), isCapability=false, isInterface=true, name=ﬕ, impl=[], extend=[], fields={}, methods={}), ﹏᮸᪖﻿ܲ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=118), isCapability=false, isInterface=true, name=﹏᮸᪖﻿ܲ, impl=[], extend=[], fields={}, methods={}), າޫ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=76), isCapability=false, isInterface=true, name=າޫ, impl=[], extend=[], fields={}, methods={})}, main=ꠞ)
Program(classDeclarations={}, main=false)
Program(classDeclarations={ပ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ပ, impl=[], extend=[], fields={}, methods={}), 〹៥=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=17), isCapability=false, isInterface=true, name=〹៥, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=42)))
Program(classDeclarations={z=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=z, impl=[ߝ], extend=[], fields={ⵣ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=24), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=24), mdf=IMM, isLifted=false, name=Ὓী〫⃐ઁ), name=ⵣ), 〡ᳲ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=63), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=63), mdf=IMM, isLifted=false, name=ળ), name=〡ᳲ), श=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=40), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=40), mdf=IMM, isLifted=true, name=૱), name=श), য=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=50), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=50), mdf=MUT, isLifted=false, name=ꛋ⳱), name=য)}, methods={})}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=91), receiver=false, fieldName=֏႒))
Program(classDeclarations={ਏꥍ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ਏꥍ, impl=[], extend=[], fields={ₑ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=25), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=25), mdf=MUT, isLifted=false, name=ງͧᤶ), name=ₑ), ၿू᠐=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=11), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=11), mdf=IMM, isLifted=false, name=ﾡ), name=ၿू᠐), ͷం=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=39), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=39), mdf=IMM, isLifted=false, name=ౚ), name=ͷం)}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=62)))
Program(classDeclarations={Ὓਁ〪꙯ꪾٗ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=Ὓਁ〪꙯ꪾٗ, impl=[], extend=[Όை], fields={}, methods={})}, main=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=47), receiver=0.0, fieldName=ﬀ, value=ᳵ))
Program(classDeclarations={ۯ൫ͦ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ۯ൫ͦ, impl=[], extend=[], fields={}, methods={}), ˮၴ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=19), isCapability=false, isInterface=false, name=ˮၴ, impl=[ኍ, ｳ, ᜐ, ℐ, ⷝ, Ꞩ꫶༵, ࢱ゚ೂ, Ϳୢ, ῐ, Ϳ઼], extend=[], fields={}, methods={}), ⸯׂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=89), isCapability=false, isInterface=true, name=ⸯׂ, impl=[], extend=[], fields={}, methods={})}, main=2.097152E8)
Program(classDeclarations={Ῑ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=Ῑ, impl=[], extend=[ࠨ, ࡊ], fields={}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=73)))
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ὖ, args=[]))
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Ṱ))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=11), head=false, tail=\'਩), tail=false))
Program(classDeclarations={గ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=గ, impl=[], extend=[], fields={}, methods={})}, main=3.6314177056347824E150)
Program(classDeclarations={ୟ꧳=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=91), isCapability=false, isInterface=true, name=ୟ꧳, impl=[], extend=[ၜ], fields={}, methods={}), ꪣﬞ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꪣﬞ, impl=[], extend=[ⁿ], fields={}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=279), name=ఋॎ, args=[29]))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=false)
Program(classDeclarations={ᥤᰵ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ᥤᰵ, impl=[], extend=[ጔং], fields={}, methods={}), ৲=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=107), isCapability=false, isInterface=false, name=৲, impl=[ଭ], extend=[], fields={}, methods={}), È=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=30), isCapability=false, isInterface=true, name=È, impl=[], extend=[ॐ, Ⅼ], fields={}, methods={}), ൟ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=62), isCapability=false, isInterface=false, name=ൟ, impl=[〺؜, ஞ￻ꣁ], extend=[], fields={$ၳ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=93), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=93), mdf=IMM, isLifted=true, name=ࠤ), name=$ၳ)}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=141), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=148), mdf=IMM, name=ᨁᳲ, value=this, boundTo=true)))
Program(classDeclarations={}, main=\uuuu256a)
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=ꚤꣂ))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ﵣ, value=this, boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=25), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=32), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=39), name=ၛ᜴᷈௩᪽᧙්, args=[Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=53), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=57)), tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=67), name=ຍ, args=[Expression.LetExpr(pos=ProgramNode.Position(line=1, col=75), mdf=IMM, name=暴, value=7.926335344172073E17, boundTo=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=188), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=96), head=this, tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=108), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=112), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=116), name=฿ꫭ࣢ﬞ, args=[]), tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=134), mdf=IMM, name=Ⲗ, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=143), name=ቍ᠕, args=[]), boundTo=true)), tail=ࡡ)), fieldName=ྋࣾ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=193))))])), Expression.LetExpr(pos=ProgramNode.Position(line=1, col=214), mdf=IMM, name=Ὓཷ, value=15, boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=230), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=234), name=Ｕ￻௨᥇ஂੌ, args=[Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=247)), Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=257), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=261)), tail=false)]), tail=false))])))))
Program(classDeclarations={ᬭ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ᬭ, impl=[], extend=[], fields={}, methods={ቜ‮=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=450), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=465), mdf=IMM, isLifted=false, name=૱), name=ቜ‮, args=[], expression=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=488), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=478)), isLifted=false, methodName=ᳶؒ, arguments=[8.08E-5])), ꫝܑ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=510), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=521), mdf=READ, isLifted=false, name=ꬒ), name=ꫝܑ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=534), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=534), mdf=IMM, isLifted=false, name=ꤷ), name=ᚪ߫឴੪ꤧ֚)], expression=\66), ꨅꦼ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=560), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=575), mdf=MUT, isLifted=false, name=ꤜ), name=ꨅꦼ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=587), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=587), mdf=READ, isLifted=false, name=Âේꣁ), name=ꪺ︎ꩌ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=604), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=604), mdf=IMM, isLifted=false, name=Ύ), name=ⸯޮ⃡)], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=617), signalExpr=62)), ⁱܑ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=21), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=28), mdf=IMM, isLifted=false, name=ঽ), name=ⁱܑ, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=45), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=52), signalExpr=9.0))), ꠘᮬೂ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=392), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=399), mdf=MUT, isLifted=false, name=ᜱ), name=ꠘᮬೂ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=412), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=412), mdf=IMM, isLifted=false, name=ഏꪾၣ), name=₽), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=426), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=426), mdf=IMM, isLifted=false, name=ಀ), name=ᳱྒྷ᳠)], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=439))), ꡝੋ୍=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=181), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=188), mdf=MUT, isLifted=false, name=µା), name=ꡝੋ୍, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=207), signalExpr=6656.0)), Ⴐ‮ႂ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=231), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=242), mdf=IMM, isLifted=true, name=פּै), name=Ⴐ‮ႂ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=259), name=ຊ, args=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=267), signalExpr=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=293), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=274), signalExpr=this), fieldName=ךּ)), Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=303), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=310), head=0, tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=320), mdf=IMM, name=מּ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=334), signalExpr=ⶦଁ), boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=351), signalExpr=1)))), ￍ])), ࠨ೬ୣ᥈=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=80), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=87), mdf=IMM, isLifted=true, name=ⷌ), name=ࠨ೬ୣ᥈, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=104), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=111), signalExpr=1))), शꤪ᠍=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=134), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=145), mdf=MUT, isLifted=false, name=Ϳੇ), name=शꤪ᠍, args=[], expression=1.58E132)})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=647), mdf=IMM, name=ௐ่ൗꯦ, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=662), name=ˤ３, args=[]), boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=678), mdf=IMM, name=Ί, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=687), signalExpr=this), boundTo=0.020751953125)))
Program(classDeclarations={}, main=\\\f\66\061)
Program(classDeclarations={ௐ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=225), isCapability=false, isInterface=true, name=ௐ, impl=[], extend=[ଧࣜ], fields={}, methods={}), ᤁᨛᤵ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=254), isCapability=false, isInterface=true, name=ᤁᨛᤵ, impl=[], extend=[Ὡ, ਲ਼, ꦜ᠓ᝳ], fields={}, methods={}), Άॉ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=Άॉ, impl=[ꩺ२], extend=[], fields={ஆ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=26), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=26), mdf=IMM, isLifted=true, name=Ꞵ), name=ஆ)}, methods={ﶒ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=154), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=161), mdf=IMM, isLifted=false, name=ﹰ), name=ﶒ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=168), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=168), mdf=MUT, isLifted=false, name=ೱ), name=ᝪ੧ۨꦶ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=183), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=183), mdf=CAPSULE, isLifted=false, name=ၡ), name=ⳳ۫ৈ)], expression=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=215), receiver=7, fieldName=ଐ)), ꢊ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=36), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=47), mdf=CAPSULE, isLifted=false, name=₹᪀꠆), name=ꢊ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=64), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=64), mdf=IMM, isLifted=true, name=￡༷), name=ஃᜓ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=76), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=76), mdf=READ, isLifted=false, name=Ͷۗ1), name=Ιᭀ꛱ৄ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=94), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=94), mdf=IMM, isLifted=true, name=ە಼), name=ℿ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=105), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=105), mdf=IMM, isLifted=true, name=ꞔ᳠᪳), name=ৡ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=117), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=117), mdf=IMM, isLifted=false, name=ፃᢩ᱙ֻੈ), name=ᯉꦂஂ੯ৈ᤻꯶ׅ꣔ꩌ)], expression=10.0)})}, main=43)
Program(classDeclarations={ヾୃ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=17), isCapability=false, isInterface=true, name=ヾୃ, impl=[], extend=[], fields={}, methods={}), ਓ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ਓ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=42), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=49), name=ᲄ, args=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=57), signalExpr=205.875)])))
Program(classDeclarations={〲=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=〲, impl=[], extend=[], fields={}, methods={ﶴ๐ޫ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=54), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=65), mdf=IMM, isLifted=false, name=ᪧᯭ), name=ﶴ๐ޫ, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=80), mdf=IMM, name=ଉ, value=5.4, boundTo=true)), Ά­਼=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=10), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=25), mdf=MUT, isLifted=false, name=Ὑꙶ), name=Ά­਼, args=[], expression=false), ＿=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=108), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=120), mdf=IMM, isLifted=false, name=ງ), name=＿, args=[], expression=0.9375)})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=154), name=﹎, args=[Expression.LetExpr(pos=ProgramNode.Position(line=1, col=162), mdf=READ, name=ౠ­, value=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=194), receiver=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=188), receiver=true, fieldName=ಀ), isLifted=false, methodName=ª७, arguments=[Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=199))]), boundTo=𑊪)]))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={ͷꩼ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ͷꩼ, impl=[ꜜ], extend=[], fields={}, methods={}), ߺ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=28), isCapability=false, isInterface=true, name=ߺ, impl=[], extend=[Άൢ, ೞ﻿], fields={}, methods={})}, main=1)
Program(classDeclarations={}, main=0)
Program(classDeclarations={ল=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ল, impl=[], extend=[ஞ, ﬀ, ೠ, ᏽ], fields={}, methods={})}, main=\uB006\ue4DF)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=7.0, tail=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=34), receiver=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=28), receiver=ℇꨰ, fieldName=અ), isLifted=false, methodName=ⳮ, arguments=[this])))
Program(classDeclarations={}, main=ჶঁ)
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=600.0)
Program(classDeclarations={ﬖ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ﬖ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=24), mdf=IMM, name=ꘫ, value=\2, boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=41), head=ﲙ, tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=50)))))
Program(classDeclarations={}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=17), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)), isLifted=false, methodName=＄ꤨൊ, arguments=[ఊܑ, Expression.TailExpr(pos=ProgramNode.Position(line=1, col=29), signalExpr=ⁿௗ), Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=46), name=ᾑ, args=[]), this, 0]))
Program(classDeclarations={ୱ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=73), isCapability=false, isInterface=false, name=ୱ, impl=[], extend=[], fields={}, methods={Ὕ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=83), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=95), mdf=IMM, isLifted=true, name=ℤ⃒ಃꥏે), name=Ὕ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=108), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=108), mdf=IMM, isLifted=false, name=ಷॖ), name=ﴇᬃ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=122), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=122), mdf=CAPSULE, isLifted=false, name=ವ), name=ˮ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=138), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=138), mdf=IMM, isLifted=true, name=ῃீ), name=ￊ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=149), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=149), mdf=IMM, isLifted=true, name=ଖ༵), name=ⅇࠬ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=161), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=161), mdf=IMM, isLifted=true, name=ꬋ꧷ࠥ), name=Ὂஂ￻), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=175), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=175), mdf=IMM, isLifted=false, name=Ꜣ︯᳑), name=Ⳉ᱁)], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=189), signalExpr=this))}), ⴭ꯲ᬷ៝=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=37), isCapability=false, isInterface=false, name=ⴭ꯲ᬷ៝, impl=[ⷙ, ￅ໔ੵ], extend=[], fields={}, methods={}), ༀ꙯=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ༀ꙯, impl=[], extend=[ࡠ⁦꪿ೖ, ೠᢩ], fields={}, methods={})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=219), signalExpr=ꢖั))
Program(classDeclarations={ࡦ‮ᯰ꩔েూۙྵ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ࡦ‮ᯰ꩔েూۙྵ, impl=[], extend=[], fields={}, methods={})}, main=false)
Program(classDeclarations={ힸો=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ힸો, impl=[], extend=[], fields={ꣵ᳑௩ಂ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=22), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=22), mdf=IMM, isLifted=false, name=〵), name=ꣵ᳑௩ಂ)}, methods={ཬ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=33), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=44), mdf=IMM, isLifted=true, name=ꨀׇ), name=ཬ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=54), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=54), mdf=READ, isLifted=false, name=ໄ័), name=ꩺ೧ෛ)], expression=true), ⴭׅ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=82), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=97), mdf=IMM, isLifted=false, name=ͷ), name=ⴭׅ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=109), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=109), mdf=IMM, isLifted=true, name=ᨖ), name=ଌ)], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=122), head=0.002838134765625, tail=this))}), ኌ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=154), isCapability=false, isInterface=false, name=ኌ, impl=[ୟ], extend=[], fields={ୱ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=178), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=178), mdf=IMM, isLifted=true, name=ٲ᥆ׇ︮), name=ୱ), ＄=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=191), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=191), mdf=IMM, isLifted=false, name=װெ), name=＄)}, methods={})}, main=﹏ꧥ)
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=11), signalExpr=à), tail=187))
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ૹᰥၤ੨, args=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=18), name=ٮੀ, args=[])]))
Program(classDeclarations={}, main=0.59)
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=26), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ၺ, args=[]), fieldName=ಈ))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=11), name=ꣽ, args=[DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=53), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=19), name=Ⴭ‍ﬞೄೆௗ, args=[this, true]), fieldName=ஃ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=57), mdf=IMM, name=ꓵ, value=1.2229040244039233E26, boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=81)))), , false]), tail=this))
Program(classDeclarations={ℓ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ℓ, impl=[], extend=[셨, ﹲ], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=148), mdf=IMM, name=Ｂꯥ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=158)), boundTo=200000.0))
Program(classDeclarations={}, main=\r)
Program(classDeclarations={}, main=this)
Program(classDeclarations={Έ­=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=14), isCapability=false, isInterface=true, name=Έ­, impl=[], extend=[Ⅰ], fields={}, methods={}), رొ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=رొ, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=131), receiver=false, fieldName=ଈ))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ட゙, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=18), name=ᙷ, args=[]), boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=33), signalExpr=true)))
Program(classDeclarations={}, main=0.001003)
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ୠ, value=this, boundTo=238))
Program(classDeclarations={Ωꪳ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=17), isCapability=false, isInterface=true, name=Ωꪳ, impl=[], extend=[ￒᨘॖ, יּ], fields={}, methods={}), č=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=č, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=110), name=ˋ, args=[Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=118), signalExpr=this)]))
Program(classDeclarations={ｯ่ો᧔༘ી=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ｯ่ો᧔༘ી, impl=[], extend=[], fields={}, methods={}), ௐ߲᪰=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=130), isCapability=false, isInterface=true, name=ௐ߲᪰, impl=[], extend=[Õ], fields={}, methods={})}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=230), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=167), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=171), mdf=IMM, name=ਫ਼, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=180), name=ܓ, args=[]), boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=195), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=202)))), tail=this), fieldName=〴))
Program(classDeclarations={}, main=Infinity)
Program(classDeclarations={}, main=\145)
Program(classDeclarations={ೡ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=19), isCapability=false, isInterface=false, name=ೡ, impl=[浪ꥐ, ℼ], extend=[], fields={}, methods={}), ᜪᯱ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=51), isCapability=false, isInterface=false, name=ᜪᯱ, impl=[ᑚؗ, তັ, ﬨ১], extend=[], fields={ᝠ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=98), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=98), mdf=IMM, isLifted=true, name=ⶵৢ꘨), name=ᝠ), ன=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=87), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=87), mdf=IMM, isLifted=true, name=ⸯৗ), name=ன)}, methods={}), ⴭ۪⃡=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ⴭ۪⃡, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=120), name=௹ꦾ, args=[]))
Program(classDeclarations={$ౖ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=$ౖ, impl=[], extend=[], fields={ࡒ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=22), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=22), mdf=IMM, isLifted=true, name=ᢪ), name=ࡒ), ঽ੦ੈ‫꯲=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=49), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=49), mdf=IMM, isLifted=false, name=ꬮ᜴), name=ঽ੦ੈ‫꯲), ەᤨൌ༵ࣼ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=32), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=32), mdf=READ, isLifted=false, name=ͽ), name=ەᤨൌ༵ࣼ), த꣒=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=62), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=62), mdf=IMM, isLifted=true, name=וᝲ), name=த꣒)}, methods={}), ꜝ٣=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=77), isCapability=false, isInterface=true, name=ꜝ٣, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=102), name=ຣ᧖ි᮫, args=[]))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={ৎ༿꩙ો=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ৎ༿꩙ો, impl=[], extend=[Õ], fields={}, methods={})}, main=false)
Program(classDeclarations={ՙⷸꦀ༡꧙=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=30), isCapability=true, isInterface=false, name=ՙⷸꦀ༡꧙, impl=[], extend=[], fields={}, methods={}), ℇ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=58), isCapability=false, isInterface=true, name=ℇ, impl=[], extend=[], fields={}, methods={}), ەׇಂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ەׇಂ, impl=[], extend=[ἄ], fields={}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=110), head=৻᳒, tail=0.0))
Program(classDeclarations={Ῡ২=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=Ῡ২, impl=[], extend=[], fields={ၾੇ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=11), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=11), mdf=IMM, isLifted=false, name=ਉೄৌׇ), name=ၾੇ)}, methods={ι᳸=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=93), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=105), mdf=MUT, isLifted=false, name=ⷊᰳୌ), name=ι᳸, args=[], expression=true), ဿ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=23), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=34), mdf=IMM, isLifted=true, name=µ್ಁ), name=ဿ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=45), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=45), mdf=IMM, isLifted=true, name=ၦ), name=હؗ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=56), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=56), mdf=CAPSULE, isLifted=false, name=Ά), name=ቘ)], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=75), signalExpr=ℳꢁ))})}, main=6.021017265658798E22)
Program(classDeclarations={Ὂఀ࡙፞=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=Ὂఀ࡙፞, impl=[ᮉૣୖ], extend=[], fields={}, methods={ⴧ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=40), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=47), mdf=IMM, isLifted=false, name=ךּ), name=ⴧ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=54), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=54), mdf=IMM, isLifted=false, name=ꧏ), name=ർꦃ়), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=64), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=64), mdf=IMM, isLifted=true, name=ૐ), name=ℇ)], expression=this), ꬠୃ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=86), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=93), mdf=IMM, isLifted=true, name=ՙ), name=ꬠୃ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=103), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=103), mdf=IMM, isLifted=true, name=ໆೢ), name=ज़), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=114), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=114), mdf=CAPSULE, isLifted=false, name=གૼ), name=ⷐꥍᬿ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=133), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=133), mdf=IMM, isLifted=false, name=ꧏີⷠ), name=ҳ)], expression=0)})}, main=this)
Program(classDeclarations={}, main=ـ႗)
Program(classDeclarations={}, main=false)
Program(classDeclarations={؋=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=؋, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=11), mdf=IMM, name=Ὕ, value=this, boundTo=3.4), tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=43))))
Program(classDeclarations={ᱏܑ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ᱏܑ, impl=[], extend=[], fields={}, methods={ಀ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=11), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=22), mdf=IMM, isLifted=false, name=そꢾᳳٰׄ), name=ಀ, args=[], expression=238.0), Є=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=56), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=67), mdf=IMM, isLifted=true, name=〳ີᨘၟᩳ⃡), name=Є, args=[], expression=ၐਃංඃ)})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=105), signalExpr=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=118), receiver=쳊۫, fieldName=ⶴೕꩼ)))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ń, value=this, boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=24), signalExpr=false)))
Program(classDeclarations={ㄊᯰꦻ᱉=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ㄊᯰꦻ᱉, impl=[ࠚ, ꬤၖୖੈ], extend=[], fields={}, methods={ཛ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=45), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=56), mdf=IMM, isLifted=true, name=ꬤ), name=ཛ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=65), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=65), mdf=IMM, isLifted=true, name=ꬪ), name=ଽ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=75), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=75), mdf=IMM, isLifted=false, name=ܠ), name=ൾ᭑), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=84), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=84), mdf=IMM, isLifted=true, name=ᱏກ), name=ꬑ)], expression=this)})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=117), name=﹩, args=[DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=182), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=125), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=129), mdf=IMM, name=ວᳲਿ᳴ົ̒, value=6, boundTo=42), tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=162), signalExpr=ౘ)), isLifted=true, methodName=ෂ, arguments=[0.0, , 70.0, ງ, Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=214))])]))
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ᏼ, args=[]))
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ﬂູ, args=[]))
Program(classDeclarations={Ｌ࠙=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=138), isCapability=true, isInterface=false, name=Ｌ࠙, impl=[], extend=[], fields={}, methods={}), ᚑꪲꚟ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=98), isCapability=false, isInterface=true, name=ᚑꪲꚟ, impl=[], extend=[], fields={}, methods={}), ㆵஂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ㆵஂ, impl=[ಸ਼], extend=[], fields={ᨌ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=37), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=37), mdf=IMM, isLifted=false, name=ઉ൨), name=ᨌ)}, methods={ꧻ༩=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=46), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=57), mdf=IMM, isLifted=true, name=લ꩙), name=ꧻ༩, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=68), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=68), mdf=IMM, isLifted=true, name=ண଼ު), name=ﶮൣ៎ে)], expression=this)})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=170), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=174)), tail=this))
Program(classDeclarations={ˠେີ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=564), isCapability=false, isInterface=true, name=ˠେີ, impl=[], extend=[], fields={}, methods={}), Åો⃔ၗ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=344), isCapability=true, isInterface=false, name=Åો⃔ၗ, impl=[], extend=[], fields={}, methods={ⷆ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=368), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=375), mdf=IMM, isLifted=true, name=ᚂ⁬༵), name=ⷆ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=386), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=386), mdf=IMM, isLifted=true, name=ꦭႚ), name=ⱉ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=397), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=397), mdf=IMM, isLifted=false, name=ไ಼ୂ໋), name=꠸)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=411), mdf=MUT, name=ண྆, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=423), signalExpr=12.345947265625), boundTo=2))}), ಀேේ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=461), isCapability=false, isInterface=false, name=ಀேේ, impl=[], extend=[], fields={}, methods={}), ਲ਼=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=476), isCapability=true, isInterface=false, name=ਲ਼, impl=[], extend=[], fields={ṃ９=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=497), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=497), mdf=IMM, isLifted=false, name=ⅎ), name=ṃ９)}, methods={מּﬞ︍ൗ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=510), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=521), mdf=IMM, isLifted=true, name=ำ᳤), name=מּﬞ︍ൗ, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=539), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=546))))}), ᬠ᮲￻=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=739), isCapability=true, isInterface=false, name=ᬠ᮲￻, impl=[], extend=[], fields={}, methods={ໃ꯲꤇=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=762), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=774), mdf=IMM, isLifted=true, name=ⳬ), name=ໃ꯲꤇, args=[], expression=false)}), ਸ྆ꥊ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ਸ྆ꥊ, impl=[ℇ, ﭓ᭘], extend=[], fields={ⲕ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=52), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=52), mdf=IMM, isLifted=false, name=ኍ), name=ⲕ), ࢶ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=42), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=42), mdf=IMM, isLifted=false, name=ੜైࠗ), name=ࢶ), ꫝ︅=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=60), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=60), mdf=IMM, isLifted=false, name=؋), name=ꫝ︅), ꡞ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=69), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=69), mdf=IMM, isLifted=false, name=ௐ9), name=ꡞ)}, methods={ՙᷮ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=181), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=193), mdf=IMM, isLifted=true, name=ꪽ꛱), name=ՙᷮ, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=209), mdf=IMM, name=ꘔ, value=0.73046875, boundTo=false)), ￗ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=129), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=136), mdf=IMM, isLifted=true, name=ࢧ), name=ￗ, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=150), head=጑\uFC54𐀼, tail=this)), ￎ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=78), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=85), mdf=IMM, isLifted=true, name=మ), name=ￎ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=94), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=94), mdf=IMM, isLifted=true, name=ە), name=﹩), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=104), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=104), mdf=IMM, isLifted=true, name=ಐ്ั), name=ᴆ֗)], expression=true)}), Ω=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=312), isCapability=false, isInterface=true, name=Ω, impl=[], extend=[ꬠ, ⶤ], fields={}, methods={}), ব҇=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=803), isCapability=false, isInterface=true, name=ব҇, impl=[], extend=[], fields={}, methods={}), ᥘ︇‏ൊ⃓᳭꣬ꢀ⵿᭱=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=248), isCapability=false, isInterface=false, name=ᥘ︇‏ൊ⃓᳭꣬ꢀ⵿᭱, impl=[], extend=[], fields={ਹၪ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=293), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=293), mdf=IMM, isLifted=true, name=Ձྗॄ᳭ୖᰴ), name=ਹၪ), એഁ੮ၤ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=267), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=267), mdf=IMM, isLifted=false, name=ⴭ꤃ᮩ٣), name=એഁ੮ၤ), ︳ຼൣ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=281), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=281), mdf=IMM, isLifted=true, name=ⶢ), name=︳ຼൣ)}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=828), signalExpr=this))
Program(classDeclarations={ঢ়᱆=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ঢ়᱆, impl=[ⴭ, ⁔༷, ꪵ], extend=[], fields={}, methods={ﬖ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=125), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=137), mdf=IMM, isLifted=true, name=_ౖ), name=ﬖ, args=[], expression=false), ය=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=45), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=52), mdf=IMM, isLifted=true, name=〱), name=ය, args=[], expression=true), Ⴭᳳ⁮=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=75), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=82), mdf=IMM, isLifted=true, name=ℒ), name=Ⴭᳳ⁮, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=93), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=93), mdf=IMM, isLifted=false, name=ᥗ෪؜), name=ㇴ)], expression=0.0)})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=172), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=176), mdf=MUT, name=ઽ, value=Ώ᤹, boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=194), mdf=IMM, name=Ý, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=201), mdf=IMM, name=ౠ༡, value=true, boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=218), mdf=CAPSULE, name=ヅ̆, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=237), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=244), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=278), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=251), head=0, tail=1302.0), isLifted=true, methodName=ፕꪴ, arguments=[Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=285), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=292), name=Ϳັ, args=[])), this, 0.0]))), boundTo=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=348), receiver=false, fieldName=ⷖู༹, value=this))), boundTo=90.0)), tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=380), mdf=IMM, name=ಸ, value=7734089, boundTo=57)))
Program(classDeclarations={}, main=)
Program(classDeclarations={ꪱᤢ᪵᳠ॢെ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꪱᤢ᪵᳠ॢെ, impl=[], extend=[β], fields={}, methods={})}, main=6.184563972055912E-10)
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=13), receiver=ﬡ९, fieldName=ꫛ))
Program(classDeclarations={చꩍ꠆=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=17), isCapability=false, isInterface=false, name=చꩍ꠆, impl=[ೱ, અ], extend=[], fields={}, methods={ὅ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=47), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=58), mdf=IMM, isLifted=true, name=ݚ୍), name=ὅ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=68), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=68), mdf=IMM, isLifted=false, name=ⁱॣ), name=ῑਾ්፟), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=80), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=80), mdf=IMM, isLifted=true, name=ꫜ), name=ℭ᷾ꢁྙ᩿ै)], expression=0.0), ફꦂີꪾ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=105), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=112), mdf=READ, isLifted=false, name=ଷ), name=ફꦂີꪾ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=127), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=127), mdf=IMM, isLifted=false, name=ἱૣ), name=ꗺ᳝૽)], expression=true)}), ఽ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ఽ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={ⴵ؃ဵ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=202), isCapability=false, isInterface=false, name=ⴵ؃ဵ, impl=[ਲ], extend=[], fields={}, methods={៛꫁=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=228), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=235), mdf=IMM, isLifted=true, name=ⶔ໋ਂ᱘), name=៛꫁, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=253), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=260), signalExpr=4))), ൔো=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=283), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=290), mdf=MUT, isLifted=false, name=Ήꦼꦿ), name=ൔো, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=309), mdf=IMM, name=ᢪั‏༹ꦁ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=322), mdf=IMM, name=ￛ, value=2, boundTo=\115), boundTo=7))}), ਫ਼=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ਫ਼, impl=[ⴭ꯲], extend=[], fields={}, methods={ᝈ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=120), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=127), mdf=MUT, isLifted=false, name=ࡢಂᜲꧥ), name=ᝈ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=141), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=141), mdf=IMM, isLifted=false, name=એ), name=ખᩘᝒ꤭), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=152), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=152), mdf=IMM, isLifted=false, name=ᢃ), name=ℬ)], expression=this), ꝼ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=25), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=32), mdf=CAPSULE, isLifted=false, name=ꫀꥊ), name=ꝼ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=48), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=48), mdf=IMM, isLifted=false, name=ਸ๑), name=ۻ)], expression=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=113), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=60), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=67), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=74), mdf=IMM, name=ۮ, value=ಌꨴ, boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=93))))), fieldName=ݮ)), ͱ꪿=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=172), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=179), mdf=IMM, isLifted=false, name=ງ), name=ͱ꪿, args=[], expression=)})}, main=4)
Program(classDeclarations={}, main=꨷)
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ᨑ, args=[]))
Program(classDeclarations={ஐ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=39), isCapability=false, isInterface=true, name=ஐ, impl=[], extend=[], fields={}, methods={}), ﳗ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ﳗ, impl=[], extend=[], fields={ℜਁ២ⷵ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=21), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=21), mdf=IMM, isLifted=false, name=ዂ), name=ℜਁ២ⷵ)}, methods={})}, main=ᱎ)
Program(classDeclarations={F꫁७=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=F꫁७, impl=[ꩀ⁡, த႖꤉߭᳚ཾೈ꘥, ꬂ], extend=[], fields={}, methods={ᢌ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=42), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=57), mdf=MUT, isLifted=false, name=〥ꩌ︧ૢ), name=ᢌ, args=[], expression=true)})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=95), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=102), signalExpr=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=117), receiver=true, fieldName=ർ, value=66048.0))))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={ࡪꤩ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ࡪꤩ, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=48)))
Program(classDeclarations={}, main=this)
Program(classDeclarations={ⷔ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ⷔ, impl=[], extend=[], fields={ᨠ᱓=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=10), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, isLifted=false, name=Ꝇ᥆), name=ᨠ᱓)}, methods={ෂꢶ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=20), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=35), mdf=IMM, isLifted=true, name=ⷊ), name=ෂꢶ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=45), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=45), mdf=IMM, isLifted=false, name=ୟ߱⁡), name=ૐ)], expression=this), Ή=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=150), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=161), mdf=READ, isLifted=false, name=ຖ⃜), name=Ή, args=[], expression=), Ό=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=67), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=78), mdf=IMM, isLifted=true, name=ກ᷻ꢁ), name=Ό, args=[], expression=ㆨꢀ), ল꧑=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=101), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=112), mdf=IMM, isLifted=true, name=ਐ), name=ল꧑, args=[], expression=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=135), receiver=true, fieldName=ᳶ, value=this))}), ঠꨬ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=189), isCapability=false, isInterface=true, name=ঠꨬ, impl=[], extend=[], fields={}, methods={})}, main=\\﬇)
Program(classDeclarations={ጕ֜ꢀꩃ꧸༷ࠖ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ጕ֜ꢀꩃ꧸༷ࠖ, impl=[], extend=[ι्], fields={}, methods={})}, main=ఌ)
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=0.0)
Program(classDeclarations={Ꙭٰ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=31), isCapability=false, isInterface=false, name=Ꙭٰ, impl=[], extend=[], fields={}, methods={ₙ්꤈=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=42), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=49), mdf=CAPSULE, isLifted=false, name=ܪ), name=ₙ්꤈, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=66), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=66), mdf=IMM, isLifted=true, name=ⅎۛ), name=ۯॢ᭰ᮁꢷᬵੵ)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=86), mdf=IMM, name=ਈ, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=97), signalExpr=80), boundTo=ª)), ວꦶ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=126), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=138), mdf=IMM, isLifted=false, name=ॐ᱕꛱), name=ວꦶ, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=154), head=3.0, tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=164), signalExpr=5.0)))}), ງ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=192), isCapability=false, isInterface=false, name=ງ, impl=[], extend=[], fields={ꚁ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=217), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=217), mdf=IMM, isLifted=true, name=ੜ), name=ꚁ), ᱍ᧙︊︍ྐ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=202), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=202), mdf=IMM, isLifted=true, name=ਸെ), name=ᱍ᧙︊︍ྐ)}, methods={}), ߨྲৌ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=230), isCapability=false, isInterface=true, name=ߨྲৌ, impl=[], extend=[Ⴭ], fields={}, methods={}), ꪏ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꪏ, impl=[], extend=[ೠֿۧᬀ], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=267), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=274), name=＿, args=[])))
Program(classDeclarations={}, main=2)
Program(classDeclarations={Ⴧ۸᜴=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=Ⴧ۸᜴, impl=[], extend=[], fields={ꠉׁ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=23), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=23), mdf=IMM, isLifted=true, name=￡), name=ꠉׁ)}, methods={ᠺ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=34), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=46), mdf=IMM, isLifted=true, name=ゞ௬୦), name=ᠺ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=57), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=57), mdf=IMM, isLifted=true, name=＄ᰳꪸ), name=ₐ໌)], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=73), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=77), mdf=IMM, name=ᳶ؃ꢹ, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=92), signalExpr=false), boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=112), name=ￗࠪ, args=[])), tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=130), mdf=IMM, name=ቛ, value=104.0, boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=156), receiver=ૠ, isLifted=true, methodName=ऽ, arguments=[false]))))})}, main=this)
Program(classDeclarations={ጤ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ጤ, impl=[], extend=[ᣚ᭘႗꤅, ቇ҆], fields={}, methods={}), ೞ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=105), isCapability=true, isInterface=false, name=ೞ, impl=[ⴭେ, ષ్, ⅎ, _ೆ], extend=[], fields={ⱄ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=176), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=176), mdf=IMM, isLifted=true, name=ⵯܑ), name=ⱄ), 〳᷶=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=155), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=155), mdf=READ, isLifted=false, name=אַ᥍܏ௌೆᩤൃᬷ), name=〳᷶), ﮫ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=187), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=187), mdf=IMM, isLifted=false, name=ꬉ), name=ﮫ), Ꚋ၄܏ୣ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=195), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=195), mdf=IMM, isLifted=true, name=ౡ), name=Ꚋ၄܏ୣ)}, methods={})}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=228), receiver=58, fieldName=ꧣ઼྆ූౕ꙯))
Program(classDeclarations={Ⳳ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=199), isCapability=true, isInterface=false, name=Ⳳ, impl=[ꧬᤥ], extend=[], fields={}, methods={}), º=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=º, impl=[], extend=[], fields={}, methods={＄=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=62), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=69), mdf=IMM, isLifted=false, name=ᳮ), name=＄, args=[], expression=Infinity), Ύ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=21), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=36), mdf=IMM, isLifted=false, name=ꜳ꙯), name=Ύ, args=[], expression=this)}), ఎ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=100), isCapability=true, isInterface=false, name=ఎ, impl=[], extend=[], fields={വ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=121), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=121), mdf=IMM, isLifted=true, name=ध), name=വ), உ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=131), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=131), mdf=IMM, isLifted=false, name=J᠌), name=உ)}, methods={ꤜ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=140), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=147), mdf=IMM, isLifted=false, name=Ꞗ), name=ꤜ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=154), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=154), mdf=IMM, isLifted=true, name=ܟ߅୪៦ᨚᢩ), name=ꩇ܏), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=170), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=170), mdf=IMM, isLifted=false, name=ໃׇ۫), name=ᢿ)], expression=12288.0)})}, main=ᾲ)
Program(classDeclarations={Ὑ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=Ὑ, impl=[ᙽ], extend=[], fields={ꡁ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=35), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=35), mdf=IMM, isLifted=false, name=ᳫ᪇), name=ꡁ), ܐ്=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=44), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=44), mdf=IMM, isLifted=false, name=ᥛ︂۹᪙), name=ܐ്)}, methods={ᝯ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=60), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=67), mdf=IMM, isLifted=false, name=ໜఃﬞ؜), name=ᝯ, args=[], expression=501)})}, main=0)
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=〣່ᢩꪰ, args=[]))
Program(classDeclarations={ᢀ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ᢀ, impl=[], extend=[], fields={}, methods={}), ᪧັີ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=49), isCapability=false, isInterface=true, name=ᪧັີ, impl=[], extend=[], fields={}, methods={})}, main=4.0E7)
Program(classDeclarations={}, main=ᜑ)
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=14))))
Program(classDeclarations={〆ၟ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=〆ၟ, impl=[], extend=[], fields={ᲂ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=11), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=11), mdf=IMM, isLifted=true, name=ךּᮤ), name=ᲂ), ᛸ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=22), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=22), mdf=IMM, isLifted=false, name=ៗྗ), name=ᛸ), ఉ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=58), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=58), mdf=CAPSULE, isLifted=false, name=ℑ꫶), name=ఉ), ᅾ᩸ૢ︀꣨=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=31), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=31), mdf=IMM, isLifted=true, name=ສ), name=ᅾ᩸ૢ︀꣨), ֏=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=45), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=45), mdf=IMM, isLifted=true, name=ˤ႘ꪴু), name=֏)}, methods={ᳮ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=75), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=86), mdf=IMM, isLifted=true, name=ᚋ), name=ᳮ, args=[], expression=1), ᏺᩗ઼਼࣠=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=109), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=116), mdf=IMM, isLifted=true, name=Ͷૢຼꠣ៣ᨗ⁦), name=ᏺᩗ઼਼࣠, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=135), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=135), mdf=IMM, isLifted=true, name=Ꚏ), name=Ό)], expression=0.0)})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=165), mdf=IMM, name=ᲀં, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=183)), boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=212), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=193), signalExpr=true), isLifted=false, methodName=ῗ්꫁ై, arguments=[])))
Program(classDeclarations={}, main=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=67), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=14), mdf=IMM, name=ℼ, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=23), name=ˢ࠘ॢ, args=[this, ඳ]), boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=51)))), fieldName=ꜜᝲଃ᱄ᜓެ, value=0))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ៗ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=15), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=19), mdf=IMM, name=தၩ࡚, value=ꬃ, boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=34), head=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=48), receiver=0.7, isLifted=false, methodName=ᨱ, arguments=[41, ]), tail=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=276), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=69), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=73)), tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=83), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=90), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=97), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=101), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=108))), tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=122), mdf=IMM, name=ܦ᪽᪰ૈ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=134), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=141), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=148), mdf=MUT, name=ەಃୃॉ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=162), mdf=IMM, name=ͳꠧ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=174)), boundTo=true), boundTo=𑄶\bഒ))), boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=214), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=221), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=228), head=, tail=this)))))))), fieldName=ᯎೕ￻꪿ၢ, value=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=294), receiver=true, fieldName=꠸, value=this)))), tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=314), signalExpr=ꭓ)), boundTo=5312.0))
Program(classDeclarations={ⶦ፟=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ⶦ፟, impl=[ࡒꫭ, Ⴭ], extend=[], fields={}, methods={Έ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=67), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=74), mdf=IMM, isLifted=true, name=ˇ), name=Έ, args=[], expression=ড়ۢ), ⶬ൧=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=30), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=45), mdf=IMM, isLifted=false, name=Ｇ), name=ⶬ൧, args=[], expression=this)})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=105), signalExpr=259.375))
Program(classDeclarations={£=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=£, impl=[], extend=[ⵘൗꩻેૢ, ךּ, ﮋ꧲ೌ], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=326), mdf=IMM, name=ᛸ, value=70, boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=341), head=, tail=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=358), receiver=ٮ۳᱆, fieldName=ำัै))))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=this))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=14), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=21), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=25)), tail=this))))
Program(classDeclarations={}, main=true)
Program(classDeclarations={වংୈ⁠ޯ⃔=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=වংୈ⁠ޯ⃔, impl=[], extend=[ำ], fields={}, methods={}), ࡏ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=33), isCapability=false, isInterface=true, name=ࡏ, impl=[], extend=[ꫝܑ, ש, ཝ], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=77), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=84), name=ඎ౩, args=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=93), name=ꪺ, args=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=101), name=Εంୈ‌, args=[Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=112), signalExpr=10), 15232.0])]), 0])))
Program(classDeclarations={ﾡ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=242), isCapability=false, isInterface=true, name=ﾡ, impl=[], extend=[], fields={}, methods={}), Ⳳ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=36), isCapability=false, isInterface=false, name=Ⳳ, impl=[ნ, ഽ፞꤁], extend=[], fields={}, methods={ᬲ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=160), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=172), mdf=IMM, isLifted=true, name=ႎ۹ꠣ), name=ᬲ, args=[], expression=1), ഽ഼=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=66), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=77), mdf=CAPSULE, isLifted=false, name=﹩ؚૻၟ⵿ັ᪕), name=ഽ഼, args=[], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=104))), 〇ൢ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=115), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=122), mdf=IMM, isLifted=false, name=ᏽ), name=〇ൢ, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=135), head=this, tail=true))}), ງ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ງ, impl=[], extend=[ꬉྪً༵, Ωੑ], fields={}, methods={}), h=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=200), isCapability=false, isInterface=true, name=h, impl=[], extend=[ଘ, ೱᰧྔ, ᭅ, ˬ], fields={}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=333)))
Program(classDeclarations={}, main=ⴭ)
Program(classDeclarations={ˠ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ˠ, impl=[], extend=[ᮄ], fields={}, methods={}), ⳳೢ়ૣ၈=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=146), isCapability=false, isInterface=true, name=ⳳೢ়ૣ၈, impl=[], extend=[Ὀ], fields={}, methods={}), ˬ〮ௗ࿆⃬꧐꫁=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=178), isCapability=false, isInterface=true, name=ˬ〮ௗ࿆⃬꧐꫁, impl=[], extend=[ኡೖ࡙︊ꠋꢁ, ጶꥒ], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=295), mdf=READ, name=ₚꙷ, value=10, boundTo=5))
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=14), name=ႎౕ꧕ೣஂႅௌ, args=[Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=28))])))
Program(classDeclarations={}, main=)
Program(classDeclarations={ทꫭ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ทꫭ, impl=[], extend=[], fields={ବႇ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=22), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=22), mdf=IMM, isLifted=true, name=ᏸৗ), name=ବႇ)}, methods={ꣳ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=35), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=42), mdf=IMM, isLifted=true, name=ⅉ), name=ꣳ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=51), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=51), mdf=IMM, isLifted=false, name=פּ), name=Ｌୣ)], expression=this), ⶰ઼້=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=72), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=79), mdf=IMM, isLifted=false, name=ଡ଼ᮂ), name=ⶰ઼້, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=93), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=93), mdf=IMM, isLifted=false, name=ⸯ), name=ᲆᯬံᯪో൬ू), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=107), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=107), mdf=IMM, isLifted=true, name=ൕ), name=ῒ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=117), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=117), mdf=IMM, isLifted=false, name=رঁၢ), name=ୠૈ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=128), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=128), mdf=IMM, isLifted=false, name=〻), name=Ɫ༹࡙ௗ)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=146), mdf=IMM, name=ຄ, value=௹, boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=160), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=167), mdf=IMM, name=ꙏ, value=this, boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=185))))))})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=214), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=221), head=ᳫ, tail=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=238), receiver=this, isLifted=true, methodName=Ⴙ￺, arguments=[, 98.0, Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=258), name=ꬼ, args=[]), Expression.LetExpr(pos=ProgramNode.Position(line=1, col=273), mdf=IMM, name=֏๙ޮ៓܏, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=289)), boundTo=ط), DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=314), receiver=true, fieldName=傅, value=0.4)]))))
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=14), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=21)))))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=11), signalExpr=this), tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=30), name=ꩪ, args=[\00])))
Program(classDeclarations={Ά=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=Ά, impl=[લึ, µ], extend=[], fields={ꘟ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=29), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=29), mdf=IMM, isLifted=true, name=ᚽꩌোႆ੮), name=ꘟ)}, methods={}), ￂಁൗ꛰꯬=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=46), isCapability=true, isInterface=false, name=ￂಁൗ꛰꯬, impl=[], extend=[], fields={ᢥॅ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=71), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=71), mdf=CAPSULE, isLifted=false, name=Ꮗ), name=ᢥॅ), 〵᭱ৗ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=88), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=88), mdf=IMM, isLifted=false, name=ஈࠦৣ), name=〵᭱ৗ)}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=110), name=ᥴׇꧥ, args=[]))
Program(classDeclarations={ᳮૅٖ٘=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ᳮૅٖ٘, impl=[], extend=[︳], fields={}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=149), name=ﾎ, args=[Ἕ]))
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ࠤ, args=[]))
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ⴭୗ؁༡ᰭ൭, args=[6, 0.0]))
Program(classDeclarations={ὰൣ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ὰൣ, impl=[], extend=[Ὸ᯳ۛ, ꠊ഼ᨛᨙ], fields={}, methods={})}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=55), receiver=4, isLifted=true, methodName=ཁ, arguments=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=61), signalExpr=true), true, this, 6.0E9, 3810, ﬥ᳢]))
Program(classDeclarations={}, main=ഽ८)
Program(classDeclarations={}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=30), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=15, tail=౗), isLifted=false, methodName=ไ্, arguments=[]))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=89), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=11), mdf=MUT, name=ඍꢁၙ, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=24), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=31), name=יִ, args=[5])), boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=54), name=ᾡꨩާ꪿, args=[])), tail=10.0), isLifted=false, methodName=ꪱ, arguments=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=93), name=ᱴᝳؘູ᠙ົ, args=[])]))
Program(classDeclarations={ꠍ಼ׇ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ꠍ಼ׇ, impl=[], extend=[], fields={}, methods={}), ꬫ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=26), isCapability=true, isInterface=false, name=ꬫ, impl=[], extend=[], fields={}, methods={ℂ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=78), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=93), mdf=IMM, isLifted=true, name=ߺૃ‮), name=ℂ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=104), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=104), mdf=IMM, isLifted=true, name=ᴬෑ), name=ಐ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=115), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=115), mdf=READ, isLifted=false, name=ಏꥋ), name=ᚇ꘥۵), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=131), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=131), mdf=IMM, isLifted=true, name=ૐ), name=ｗୗ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=142), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=142), mdf=IMM, isLifted=true, name=ⁿ), name=ﺗ؂)], expression=this), ᥴᜓ۬1ׅ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=165), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=172), mdf=IMM, isLifted=true, name=ꓮ), name=ᥴᜓ۬1ׅ, args=[], expression=this), ຈ੮=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=47), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=54), mdf=IMM, isLifted=false, name=ၹ), name=ຈ੮, args=[], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=67))), ᛱ࠙=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=199), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=210), mdf=IMM, isLifted=false, name=ࡉ؀), name=ᛱ࠙, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=224), name=ᏽ᠎, args=[1.1303456413396783E26, \0\137])), ไꩽ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=262), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=273), mdf=IMM, isLifted=false, name=ල), name=ไꩽ, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=286), mdf=IMM, name=ℛ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=297), signalExpr=this), boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=316), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=323), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=330), mdf=IMM, name=ⶱ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=337), head=\r, tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=349))), boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=363), mdf=IMM, name=ৠꨪັ, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=376), name=ᲇ, args=[]), boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=391), signalExpr=ॿ))))))), ⷎ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=422), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=429), mdf=IMM, isLifted=false, name=ቘꠂ), name=ⷎ, args=[], expression=)})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=459)))
Program(classDeclarations={ﶿ꙯ຼ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ﶿ꙯ຼ, impl=[], extend=[ਵׇ], fields={}, methods={})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=90), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=97), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=104), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=111), signalExpr=0.3017578125)))))
Program(classDeclarations={ྋ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ྋ, impl=[ﴼ๋, ꭢ], extend=[], fields={ೱᰨ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=40), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=40), mdf=IMM, isLifted=true, name=ꬢ), name=ೱᰨ)}, methods={}), ˬ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=54), isCapability=false, isInterface=false, name=ˬ, impl=[ℜ, ዃࠩꩌ, ᚵ᜴࡛꧱], extend=[], fields={ᢪ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=91), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=91), mdf=IMM, isLifted=false, name=ৡஂ), name=ᢪ)}, methods={}), ල=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=103), isCapability=false, isInterface=true, name=ල, impl=[], extend=[], fields={}, methods={})}, main=ৠ)
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=14), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=21), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=28), name=ᜏৌٛ, args=[0.75])))))
Program(classDeclarations={ꤒ࿆=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꤒ࿆, impl=[], extend=[], fields={}, methods={}), બ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=111), isCapability=false, isInterface=true, name=બ, impl=[], extend=[ￚ੮ֵ, ď, ힶ, ⳬ], fields={}, methods={})}, main=נּ່ꪳ᭰ꦶ᮳ᜒ꠆ාꠦ)
Program(classDeclarations={ᪧ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ᪧ, impl=[], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=24), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=28), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=35), head=false, tail=this)), tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=64), signalExpr=this)))
Program(classDeclarations={ﬃ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=218), isCapability=false, isInterface=true, name=ﬃ, impl=[], extend=[], fields={}, methods={}), ᚈ༙᪴=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=235), isCapability=false, isInterface=true, name=ᚈ༙᪴, impl=[], extend=[], fields={}, methods={}), ៛ᰳ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=៛ᰳ, impl=[জඃ, සූﬞ, Ὓ᳔], extend=[], fields={}, methods={}), ݺ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=254), isCapability=true, isInterface=false, name=ݺ, impl=[], extend=[], fields={য়=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=275), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=275), mdf=IMM, isLifted=true, name=ˮꙸ), name=য়)}, methods={Ẫ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=286), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=293), mdf=IMM, isLifted=true, name=ꜰՙ), name=Ẫ, args=[], expression=)}), Ὓ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=40), isCapability=true, isInterface=false, name=Ὓ, impl=[], extend=[], fields={მॣ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=61), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=61), mdf=IMM, isLifted=true, name=ࠤᜳ), name=მॣ), ඊ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=73), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=73), mdf=IMM, isLifted=true, name=ⱗଂ), name=ඊ), ꫴූ᪼ು=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=96), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=96), mdf=IMM, isLifted=true, name=⁀), name=ꫴූ᪼ು), எ꧗=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=84), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=84), mdf=IMM, isLifted=false, name=ᢛྙൗႏ), name=எ꧗)}, methods={ᜨ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=109), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=116), mdf=IMM, isLifted=false, name=ᙰ), name=ᜨ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=123), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=123), mdf=CAPSULE, isLifted=false, name=ঐ꯷ﬞ⳯), name=ｃ)], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=145), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=149), name=ၰ, args=[]), tail=3673)), ড়=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=178), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=190), mdf=IMM, isLifted=false, name=￠༾­), name=ড়, args=[], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=204)))})}, main=ㇻ)
Program(classDeclarations={}, main=)
Program(classDeclarations={ᢪ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ᢪ, impl=[], extend=[ᦓ], fields={}, methods={})}, main=2176.0)
Program(classDeclarations={ꧼୈ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=33), isCapability=false, isInterface=false, name=ꧼୈ, impl=[ₜ, ￠ज़ఁ, ԃ, 퍩ൣᰯ], extend=[], fields={}, methods={ᨐ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=259), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=266), mdf=READ, isLifted=false, name=ꟿ), name=ᨐ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=278), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=278), mdf=IMM, isLifted=true, name=ℜ᥆￹), name=દ⃜), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=291), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=291), mdf=IMM, isLifted=true, name=ഽ︭), name=ຄ)], expression=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=313), receiver=this, fieldName=ౡᢆ᪒)), ଷ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=122), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=133), mdf=CAPSULE, isLifted=false, name=ⴧ), name=ଷ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=148), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=148), mdf=IMM, isLifted=false, name=ൎ), name=เ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=160), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=160), mdf=CAPSULE, isLifted=false, name=ঐ), name=ᶂ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=176), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=176), mdf=IMM, isLifted=false, name=ᾶ), name=ᭊ᭰), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=185), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=185), mdf=IMM, isLifted=true, name=Ϳﬞୣ), name=Ʇ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=197), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=197), mdf=IMM, isLifted=true, name=ꘪꩃႋ), name=ᨓ܏), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=210), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=210), mdf=IMM, isLifted=true, name=ꩈ), name=מּ)], expression=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=246), receiver=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=233), receiver=0.67, isLifted=false, methodName=ܝᮩ਼, arguments=[]), isLifted=false, methodName=ῌꪸ, arguments=[])), ល=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=74), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=85), mdf=IMM, isLifted=false, name=ꧺꠂৣ), name=ល, args=[], expression=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=107), receiver=this, fieldName=ᥰ, value=19))}), ૹ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ૹ, impl=[], extend=[Ͷஂ, ᳮ], fields={}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=332), head=14, tail=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=369), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=343), head=3, tail=false), isLifted=true, methodName=ጯ, arguments=[])))
Program(classDeclarations={ၦ࿆=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ၦ࿆, impl=[], extend=[ৼꠋ], fields={}, methods={}), ￠ৗ়=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=67), isCapability=false, isInterface=true, name=￠ৗ়, impl=[], extend=[ງׇ], fields={}, methods={}), յ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=128), isCapability=false, isInterface=false, name=յ, impl=[], extend=[], fields={}, methods={ল੫=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=138), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=150), mdf=IMM, isLifted=true, name=ൟᬸਿ์꯴ᭃ), name=ল੫, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=165), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=165), mdf=IMM, isLifted=false, name=á), name=ײַഃ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=174), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=174), mdf=IMM, isLifted=true, name=￠꠆൭ൗ࠙ꥊ૦), name=ᮒ゙ꥇ)], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=195), head=true, tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=207), mdf=IMM, name=ᢀ, value=106, boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=228), mdf=IMM, name=Ωौೃ๑౯ꯤ௮ꫵ, value=false, boundTo=એె྄࿆))))}), མ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=115), isCapability=false, isInterface=false, name=མ, impl=[], extend=[], fields={}, methods={}), ן=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=98), isCapability=false, isInterface=true, name=ן, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=298), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=280), signalExpr=ঐ߯ި), isLifted=false, methodName=ﻔ, arguments=[false]))
Program(classDeclarations={ℕ់7=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ℕ់7, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=75), name=ℤ︯, args=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=84), signalExpr=0)]))
Program(classDeclarations={Ⴧ꛱ઃ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=Ⴧ꛱ઃ, impl=[എ྇, ಋ಼៧ަ], extend=[], fields={ૹ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=45), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=45), mdf=IMM, isLifted=false, name=ۿ), name=ૹ)}, methods={Ὕٰ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=53), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=60), mdf=IMM, isLifted=false, name=＿꯬), name=Ὕٰ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=73), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=73), mdf=READ, isLifted=false, name=ൎ), name=આ)], expression=\046🛠𛋼঑\03\u5b02🃁)}), ꤚ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=116), isCapability=false, isInterface=true, name=ꤚ, impl=[], extend=[], fields={}, methods={}), ມ꧙ꫮ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=227), isCapability=false, isInterface=false, name=ມ꧙ꫮ, impl=[], extend=[], fields={ⷊָ꣯︥ြූᩙો=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=239), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=239), mdf=IMM, isLifted=false, name=ۯ꩗ᝲཾ்ᬂ਼௹), name=ⷊָ꣯︥ြූᩙો)}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=271), signalExpr=))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=5120.0)
Program(classDeclarations={}, main=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=15), receiver=this, fieldName=ꣳ, value=ἶ))
Program(classDeclarations={〨ꫬ꤫=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=〨ꫬ꤫, impl=[], extend=[], fields={}, methods={})}, main=0.0)
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=ቔ)
Program(classDeclarations={}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=15), receiver=this, isLifted=false, methodName=ⁿู, arguments=[]))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=185, tail=true))
Program(classDeclarations={Ë꧵᳹=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=17), isCapability=true, isInterface=false, name=Ë꧵᳹, impl=[ὕࠠ], extend=[], fields={}, methods={Ὕ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=55), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=66), mdf=IMM, isLifted=true, name=ゟ), name=Ὕ, args=[], expression=241)}), Ⳬ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=Ⳬ, impl=[], extend=[], fields={}, methods={}), ꪋ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=93), isCapability=false, isInterface=true, name=ꪋ, impl=[], extend=[], fields={}, methods={})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=117), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=124), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=128), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=132), mdf=IMM, name=Ɛ็, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=140), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=144)), tail=9.0E31), boundTo=), tail=8), tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=187), name=〲ഀ۳, args=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=197), name=φ, args=[])]))))
Program(classDeclarations={}, main=1.6111880540847778E-7)
Program(classDeclarations={ꫂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=258), isCapability=false, isInterface=true, name=ꫂ, impl=[], extend=[៛۟, ⅉਁ៝ᝳ, ‿, ວো, ǽ], fields={}, methods={}), ݙ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ݙ, impl=[], extend=[], fields={ꜘෝ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=10), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, isLifted=false, name=ת꯭ּ᳸), name=ꜘෝ)}, methods={ῶ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=173), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=180), mdf=IMM, isLifted=false, name=ꓩׇ), name=ῶ, args=[], expression=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=201), receiver=this, fieldName=ቜ૱ᩲ্)), ಀ꣣ꠋၭ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=21), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=28), mdf=IMM, isLifted=true, name=௹), name=ಀ꣣ꠋၭ, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=45), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=49), name=ῴ, args=[Expression.LetExpr(pos=ProgramNode.Position(line=1, col=57), mdf=IMM, name=ቚ, value=0, boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=95), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=74), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=81))), isLifted=false, methodName=ℿ᱈, arguments=[DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=122), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=100), head=, tail=Ʌੵᤶཱུ), isLifted=true, methodName=ᬆౌ, arguments=[]), Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=136))]))]), tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=158)))), ஸ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=211), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=218), mdf=MUT, isLifted=false, name=ᴝౖ), name=ஸ, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=235), signalExpr=true))})}, main=7)
Program(classDeclarations={ꪶ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ꪶ, impl=[జୌ, ꬫ, ꣻ, দୈ, ࢶ], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=63), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=70), name=ᣭ꙯, args=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=79), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=86), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=93), signalExpr=W)))])))
Program(classDeclarations={ᝁַ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ᝁַ, impl=[], extend=[], fields={ˮോ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=11), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=11), mdf=IMM, isLifted=false, name=ￚᤤ), name=ˮോ)}, methods={})}, main=1)
Program(classDeclarations={}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=109), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ၐၲ, args=[Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=16), head=, tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=26), mdf=IMM, name=զ, value=𐒠\'\43\uuuE295\b, boundTo=ଟ᪇)), Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=69)), Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=79), signalExpr=1.595073594941899E37)]), isLifted=true, methodName=ਜ਼ౌ, arguments=[true]))
Program(classDeclarations={ⶻ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ⶻ, impl=[], extend=[], fields={ଭᤱ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=25), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=25), mdf=IMM, isLifted=false, name=ꭎ), name=ଭᤱ), ঈࣧ꫁=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=10), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=10), mdf=READ, isLifted=false, name=ꩺ), name=ঈࣧ꫁)}, methods={}), ⳬ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=37), isCapability=true, isInterface=false, name=ⳬ, impl=[], extend=[], fields={}, methods={})}, main=ᜣ)
Program(classDeclarations={ꫧ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꫧ, impl=[], extend=[אָ, ଋ, ꠸, 桅, ﯵੁ￹ੇ], fields={}, methods={}), 㶂࡚=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=47), isCapability=false, isInterface=false, name=㶂࡚, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=68)))
Program(classDeclarations={}, main=󠄀﹓\365𑌀)
Program(classDeclarations={ግ߲ঁ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=25), isCapability=false, isInterface=false, name=ግ߲ঁ, impl=[], extend=[], fields={ﬕ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=37), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=37), mdf=IMM, isLifted=false, name=ເୋ), name=ﬕ), ໆ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=46), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=46), mdf=IMM, isLifted=true, name=ඛ꣡۬), name=ໆ), Ꙭ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=58), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=58), mdf=IMM, isLifted=true, name=Ꞷೣ), name=Ꙭ)}, methods={}), ⅿ⵿=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=72), isCapability=false, isInterface=true, name=ⅿ⵿, impl=[], extend=[ₕ], fields={}, methods={}), ᦤٰꦀ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ᦤٰꦀ, impl=[], extend=[], fields={ਫ਼=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=12), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=12), mdf=IMM, isLifted=false, name=ꚏে්), name=ਫ਼)}, methods={})}, main=this)
Program(classDeclarations={ˉ᭬=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=166), isCapability=false, isInterface=true, name=ˉ᭬, impl=[], extend=[ۯ], fields={}, methods={}), ߟี=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ߟี, impl=[], extend=[], fields={}, methods={}), ꦉ᥇ٰ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=132), isCapability=false, isInterface=true, name=ꦉ᥇ٰ, impl=[], extend=[ຍ, ਅ], fields={}, methods={}), ۯ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=66), isCapability=true, isInterface=false, name=ۯ, impl=[ၜௗٰ, ມ〭, ำꢁ, Ò], extend=[], fields={ߺ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=117), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=117), mdf=IMM, isLifted=false, name=ꞗऺ۪ᷴෝ), name=ߺ)}, methods={})}, main=false)
Program(classDeclarations={ᱏ᯦᳑꯬ౣ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ᱏ᯦᳑꯬ౣ, impl=[], extend=[ￂྰ, ꥱ, ｗᬀ⃓ೊဴ໑꘧଼ꪸ᷻؜᷎], fields={}, methods={})}, main=\uu7e0b)
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=true))
Program(classDeclarations={ఽ۪؜ୈꢀ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ఽ۪؜ୈꢀ, impl=[ആᨛ႗ᯬ꘠꫁, ὖ], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=58), signalExpr=this))
Program(classDeclarations={ၡ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=70), isCapability=false, isInterface=true, name=ၡ, impl=[], extend=[], fields={}, methods={}), Ϳ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=Ϳ, impl=[], extend=[], fields={ꤽ಼઼=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=51), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=51), mdf=IMM, isLifted=false, name=ｑ૩ൊఁ⃮ൈ҅), name=ꤽ಼઼), ꬅ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=21), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=21), mdf=CAPSULE, isLifted=false, name=ᨃ), name=ꬅ), ៛ୃ࠭=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=37), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=37), mdf=MUT, isLifted=false, name=ߡ), name=៛ୃ࠭)}, methods={})}, main=ป)
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=ꬰ⃛ஂ༷ൈ﻿))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={ꫂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꫂ, impl=[], extend=[ﬥ, ᾉ, ਡູ], fields={}, methods={}), ଐ࡚=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=37), isCapability=false, isInterface=false, name=ଐ࡚, impl=[], extend=[], fields={}, methods={ױׄ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=48), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=59), mdf=IMM, isLifted=true, name=ᙰ੍ࠛো), name=ױׄ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=72), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=72), mdf=IMM, isLifted=false, name=ՙ), name=︳)], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=83), name=ఐ­ࠟ꯵੍, args=[]))})}, main=true)
Program(classDeclarations={ࡓ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=171), isCapability=false, isInterface=true, name=ࡓ, impl=[], extend=[], fields={}, methods={}), ࠚ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=67), isCapability=false, isInterface=false, name=ࠚ, impl=[], extend=[], fields={ᝏෲ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=98), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=98), mdf=CAPSULE, isLifted=false, name=ꩺ࠘꧕꧓ಁۤ), name=ᝏෲ), ௹ࠢੇ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=120), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=120), mdf=IMM, isLifted=false, name=ꢆ), name=௹ࠢੇ), ꧤؐംၗ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=130), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=130), mdf=MUT, isLifted=false, name=Ό܏ႚ), name=ꧤؐംၗ), ǔ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=77), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=77), mdf=IMM, isLifted=true, name=ꤼ), name=ǔ), ᰘ਼=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=87), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=87), mdf=IMM, isLifted=true, name=ꬪ), name=ᰘ਼), ዀ৩=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=147), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=147), mdf=IMM, isLifted=true, name=ᰏ), name=ዀ৩), ꬡૼ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=158), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=158), mdf=IMM, isLifted=false, name=G්), name=ꬡૼ)}, methods={}), ﷻ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=28), isCapability=true, isInterface=false, name=ﷻ, impl=[ࡢ8], extend=[], fields={}, methods={}), キ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=キ, impl=[], extend=[ꬊ], fields={}, methods={})}, main=0)
Program(classDeclarations={ᶡ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ᶡ, impl=[], extend=[], fields={}, methods={})}, main=က)
Program(classDeclarations={﹍ૣੵୢ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=112), isCapability=true, isInterface=false, name=﹍ૣੵୢ, impl=[ᐥ], extend=[], fields={}, methods={ￊ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=150), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=162), mdf=IMM, isLifted=true, name=ၡ), name=ￊ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=171), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=171), mdf=IMM, isLifted=true, name=ૡ৯), name=fᩙ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=183), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=183), mdf=MUT, isLifted=false, name=ந), name=ﬁ࡙ꩻ઼)], expression=this), ൎ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=210), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=217), mdf=IMM, isLifted=true, name=ૐၤᷫ), name=ൎ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=228), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=228), mdf=IMM, isLifted=true, name=ཀ⃡ۤ߆), name=ⸯ)], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=244), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=329), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=251), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=255), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=259), signalExpr=true), tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=278), mdf=MUT, name=ꠃాᢩࠗၠ, value=ⵯ, boundTo=0.05)), tail=true), isLifted=true, methodName=ॐ, arguments=[])))}), ꓺ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꓺ, impl=[], extend=[ৎ], fields={}, methods={}), ל=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=28), isCapability=false, isInterface=true, name=ל, impl=[], extend=[ᝠ᩹ꠋꩼ゙ೌ៦્ᨙો], fields={}, methods={}), ਲ਼ⷱਃ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=79), isCapability=false, isInterface=false, name=ਲ਼ⷱਃ, impl=[], extend=[], fields={ႎ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=91), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=91), mdf=CAPSULE, isLifted=false, name=Ήੈே), name=ႎ)}, methods={}), ﭻꦻ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=65), isCapability=false, isInterface=false, name=ﭻꦻ, impl=[], extend=[], fields={}, methods={})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=357), signalExpr=ᢂ))
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=20))
Program(classDeclarations={}, main=this)
Program(classDeclarations={Ω=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=Ω, impl=[], extend=[ﴪ], fields={}, methods={})}, main=true)
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=this)
Program(classDeclarations={ጒ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ጒ, impl=[], extend=[Ͳ, ܡ, Ց], fields={}, methods={}), ㆦ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=138), isCapability=false, isInterface=true, name=ㆦ, impl=[], extend=[], fields={}, methods={})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=162), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=169), name=ۮ, args=[])))
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=this)
Program(classDeclarations={﹎ஂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=﹎ஂ, impl=[], extend=[ꪱ७༷], fields={}, methods={}), 췟=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=31), isCapability=true, isInterface=false, name=췟, impl=[Ｓ੭], extend=[], fields={ᢁ઼=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=67), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=67), mdf=IMM, isLifted=false, name=ꓬ­ᝳ᳐꣒꫁), name=ᢁ઼), ҡ๎=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=81), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=81), mdf=IMM, isLifted=true, name=ઽ), name=ҡ๎)}, methods={º=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=92), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=104), mdf=IMM, isLifted=true, name=ଳ॑), name=º, args=[], expression=𑌄)})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=137)))
Program(classDeclarations={}, main=0)
Program(classDeclarations={}, main=0.04254)
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ㅪై್᳑ꯨূ, value=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=71), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=23), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=27), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=34))), tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=48), name=ⶹ਼ꯣֳ, args=[])), fieldName=ဿ, value=\376), boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=87), signalExpr=this)))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=Ⴒ༵ꤪ, value=this, boundTo=false))
Program(classDeclarations={ꣵࠡၘ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=147), isCapability=true, isInterface=false, name=ꣵࠡၘ, impl=[ਮާ଼݇, ࠤ], extend=[], fields={ჱ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=212), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=212), mdf=IMM, isLifted=false, name=ৼ), name=ჱ), ꢅ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=202), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=202), mdf=IMM, isLifted=true, name=ퟜ), name=ꢅ), ℰଁ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=220), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=220), mdf=IMM, isLifted=true, name=Ｇૈꠋ), name=ℰଁ), ꣽꧥ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=191), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=191), mdf=IMM, isLifted=false, name=ὔᩮꦶ), name=ꣽꧥ), き=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=233), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=233), mdf=MUT, isLifted=false, name=ༀୈ), name=き), ꧽ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=246), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=246), mdf=CAPSULE, isLifted=false, name=ᢙ), name=ꧽ)}, methods={ᚤ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=262), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=274), mdf=IMM, isLifted=true, name=ຄ), name=ᚤ, args=[], expression=\\), Ⅴ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=297), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=308), mdf=IMM, isLifted=false, name=ઐ), name=Ⅴ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=315), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=315), mdf=READ, isLifted=false, name=ພ), name=ລꠦඃ)], expression=62)}), ℨ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ℨ, impl=[ਗ਼, ︴], extend=[], fields={}, methods={ﷲܑ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=108), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=123), mdf=IMM, isLifted=true, name=ட), name=ﷲܑ, args=[], expression=ῖ), ꧡ᷿ࠫ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=70), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=77), mdf=IMM, isLifted=false, name=ૐ), name=ꧡ᷿ࠫ, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=91), signalExpr=બ)), ꛭ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=39), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=46), mdf=IMM, isLifted=false, name=µ಼⳱ັᯩ়), name=ꛭ, args=[], expression=9.0)})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=354), head=false, tail=ⅅ))
Program(classDeclarations={ྈ᥈්=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=17), isCapability=false, isInterface=true, name=ྈ᥈්, impl=[], extend=[ﳥ, ฿ၬ۵], fields={}, methods={}), ՙ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=167), isCapability=true, isInterface=false, name=ՙ, impl=[ᾎ, ড়ׅ, ퟄಂ, ᱸ, ףּ߫ꩃ], extend=[], fields={}, methods={Ú؜=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=222), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=229), mdf=IMM, isLifted=true, name=ꩦ), name=Ú؜, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=239), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=239), mdf=IMM, isLifted=true, name=ᝀ), name=ℿ)], expression=0)}), מּ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=מּ, impl=[], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=270), head=this, tail=\271\n))
Program(classDeclarations={ಐᰰ્ٰ꤭=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ಐᰰ્ٰ꤭, impl=[], extend=[চঃ២, ͷ, ꭖ], fields={}, methods={})}, main=true)
Program(classDeclarations={}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=16), receiver=false, isLifted=true, methodName=ਲ਼, arguments=[Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=22), head=ꧤၬ, tail=2), ᨐ]))
Program(classDeclarations={}, main=0)
Program(classDeclarations={}, main=this)
Program(classDeclarations={ￅํ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ￅํ, impl=[], extend=[], fields={}, methods={})}, main=true)
Program(classDeclarations={︴‏ୗ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=︴‏ୗ, impl=[], extend=[$, ㅋ, ੳୀୈ, ᚌ, ઽ፝, ண௯ૢ, ꣻ፞, Ⴧ︪], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=152), mdf=READ, name=ஆ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=164), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=168), head=0.013671875, tail=5.4E-50), tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=206))), boundTo=false))
Program(classDeclarations={￦꛱=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=￦꛱, impl=[ⁿ, ῄ], extend=[], fields={ૡ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=40), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=40), mdf=IMM, isLifted=true, name=ꭝං), name=ૡ)}, methods={ꫦ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=51), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=58), mdf=READ, isLifted=false, name=ʅ), name=ꫦ, args=[], expression=this)})}, main=\04἞\u6678\11඗\70ਲ)
Program(classDeclarations={שּׂॕꤦ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=שּׂॕꤦ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={ႎ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ႎ, impl=[], extend=[ⳇୗූ, ᨨ], fields={}, methods={})}, main=3)
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ￜ, args=[]))
Program(classDeclarations={Ω=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=40), isCapability=true, isInterface=false, name=Ω, impl=[], extend=[], fields={ⁱ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=61), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=61), mdf=IMM, isLifted=true, name=⁀ෙୣ៝), name=ⁱ)}, methods={ﬖ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=74), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=81), mdf=IMM, isLifted=true, name=ᝮ), name=ﬖ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=90), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=90), mdf=IMM, isLifted=true, name=ಮꦺ), name=Y)], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=104), head=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=114), receiver=, fieldName=ꬁ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=118), mdf=IMM, name=చ᪃, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=132), name=Ⰶ, args=[]), boundTo=0.0)), tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=158)))), ྉۧੀ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=173), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=180), mdf=IMM, isLifted=false, name=ﬃ), name=ྉۧੀ, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=194), signalExpr=຦஥)), ᢄূ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=214), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=221), mdf=IMM, isLifted=false, name=ᝬ), name=ᢄূ, args=[], expression=this)}), ꙧ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ꙧ, impl=[], extend=[], fields={ཟ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=10), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, isLifted=false, name=ኼᤵ꙯), name=ཟ)}, methods={}), ዹ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=23), isCapability=false, isInterface=true, name=ዹ, impl=[], extend=[], fields={}, methods={})}, main=469)
Program(classDeclarations={ⁱ꧗=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=270), isCapability=false, isInterface=true, name=ⁱ꧗, impl=[], extend=[૱], fields={}, methods={}), ແ༹=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=154), isCapability=false, isInterface=true, name=ແ༹, impl=[], extend=[], fields={}, methods={}), ꧽ෬=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꧽ෬, impl=[], extend=[], fields={}, methods={}), ຖ᭔=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=299), isCapability=true, isInterface=false, name=ຖ᭔, impl=[], extend=[], fields={︳꛰=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=321), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=321), mdf=CAPSULE, isLifted=false, name=ಏꩌൣ), name=︳꛰), Ὃ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=340), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=340), mdf=IMM, isLifted=false, name=ਤࠢঁႋ), name=Ὃ)}, methods={ସ૿=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=355), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=366), mdf=READ, isLifted=false, name=ᝨືꠋ઼഻ঁ), name=ସ૿, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=384), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=384), mdf=IMM, isLifted=true, name=ײ), name=ऽો᱃଼)], expression=this)})}, main=false)
Program(classDeclarations={ఽิ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ఽิ, impl=[], extend=[ꫜൢ], fields={}, methods={})}, main=false)
Program(classDeclarations={ଆ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ଆ, impl=[], extend=[], fields={ᳶ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=10), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, isLifted=true, name=ࡪ೯꪿), name=ᳶ)}, methods={}), ஐ࠘ൢৗี=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=25), isCapability=false, isInterface=true, name=ஐ࠘ൢৗี, impl=[], extend=[], fields={}, methods={}), ꤺ۴᮱්ஂऺ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=63), isCapability=false, isInterface=false, name=ꤺ۴᮱්ஂऺ, impl=[], extend=[], fields={}, methods={}), ዜ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=46), isCapability=false, isInterface=true, name=ዜ, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=97), receiver=126, fieldName=ᮉ))
Program(classDeclarations={כּ꯬=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=כּ꯬, impl=[], extend=[], fields={}, methods={})}, main=99)
Program(classDeclarations={ൖⷬ߉ꤨ৪=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ൖⷬ߉ꤨ৪, impl=[], extend=[ࠐ᳹], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=125), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=132), mdf=READ, name=ॐ, value=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=154), receiver=false, fieldName=ఏ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=158))), boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=282), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=170), name=ᝰ, args=[Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=179), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=183), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=190), head=\7, tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=202), mdf=IMM, name=ௐ, value=this, boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=219))))), tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=239), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=246), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=253)))))]), isLifted=false, methodName=ꘘ્ׁ߫, arguments=[Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=289)), 0.0]))))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=µ, value=2, boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=23), mdf=IMM, name=ꓞ൫ᤳ, value=1.0E9, boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=47)))))
Program(classDeclarations={ව﻿༹=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ව﻿༹, impl=[], extend=[য়], fields={}, methods={})}, main=ஆ)
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=﹎, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=18), mdf=IMM, name=ꚇ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=31), signalExpr=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=44), receiver=៛꙯, fieldName=ꙿৄ​, value=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=71), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=50), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=57))), isLifted=false, methodName=갧ୗ, arguments=[]))), boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=89), mdf=IMM, name=ൠં̿܏ၢ, value=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=266), receiver=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=169), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=104), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=146), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=111), head=this, tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=123), signalExpr=this)), isLifted=true, methodName=ৼᤴ᪱, arguments=[])), isLifted=true, methodName=Й, arguments=[, Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=181), name=ˆ྇ើૃ, args=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=192), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=199), head=12.0, tail=this)), ]), Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=242), signalExpr=true)]), isLifted=true, methodName=j᪅, arguments=[this, Expression.TailExpr(pos=ProgramNode.Position(line=1, col=281), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=288), mdf=MUT, name=Ὶ, value=false, boundTo=1))]), boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=347), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=328), signalExpr=), isLifted=false, methodName=ₗ, arguments=[6]))), boundTo=true))
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=true)
Program(classDeclarations={ℾং়༵ꯪྕ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ℾং়༵ꯪྕ, impl=[], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=29), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=33), name=ລ߀্⃧७, args=[6]), tail=2))
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=14), mdf=IMM, name=ꤖ, value=this, boundTo=this)))
Program(classDeclarations={}, main=)
Program(classDeclarations={調ᩱ๙=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=46), isCapability=false, isInterface=true, name=調ᩱ๙, impl=[], extend=[], fields={}, methods={}), ᴼ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ᴼ, impl=[], extend=[], fields={}, methods={ﷵ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=17), mdf=IMM, isLifted=true, name=ઞ᳒), name=ﷵ, args=[], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=32)))})}, main=ͳ፝)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=11)), tail=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=26), receiver=Ⲝ, fieldName=ꥵ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=30), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=37), mdf=IMM, name=ኅ, value=this, boundTo=2066432.0)))))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={ᲆ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ᲆ, impl=[], extend=[], fields={}, methods={ࠚ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=10), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=21), mdf=MUT, isLifted=false, name=ຽ꠆ঃ), name=ࠚ, args=[], expression=this)})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=58), mdf=CAPSULE, name=כּ, value=this, boundTo=Infinity))
Program(classDeclarations={}, main=true)
Program(classDeclarations={ݘ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ݘ, impl=[], extend=[], fields={}, methods={}), Ⅿ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=13), isCapability=false, isInterface=true, name=Ⅿ, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=79), receiver=1, isLifted=false, methodName=ຈׇⷽ, arguments=[Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=85), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=92), mdf=IMM, name=ॠ, value=this, boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=111), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=118), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=125), name=＿, args=[])))))]))
Program(classDeclarations={ຖ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ຖ, impl=[], extend=[௹], fields={}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=109)))
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ଽ, args=[]))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={}, main=9.5)
Program(classDeclarations={}, main=7436.0)
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ᦫံᮀ꧳౧߁ૄో, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=25), signalExpr=\046), boundTo=true))
Program(classDeclarations={}, main=this)
Program(classDeclarations={ਲিັ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ਲিັ, impl=[], extend=[], fields={}, methods={})}, main=0.0)
Program(classDeclarations={}, main=)
Program(classDeclarations={ዎᮥ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ዎᮥ, impl=[ꣴྕ], extend=[], fields={}, methods={})}, main=0)
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=6))
Program(classDeclarations={ચꫬ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=373), isCapability=true, isInterface=false, name=ચꫬ, impl=[¢, Ἒ], extend=[], fields={}, methods={ꫛ؜=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=413), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=424), mdf=IMM, isLifted=false, name=ଳ᥇), name=ꫛ؜, args=[], expression=true)}), ਜ਼゚=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ਜ਼゚, impl=[], extend=[], fields={}, methods={ᏻᝓ༿=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=42), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=49), mdf=IMM, isLifted=true, name=ຄ8), name=ᏻᝓ༿, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=61), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=61), mdf=IMM, isLifted=true, name=ⵯ⁠᭕), name=ㇼ)], expression=ܧ), ὓ༿ꪰ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=11), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=18), mdf=IMM, isLifted=false, name=Ⴭ), name=ὓ༿ꪰ, args=[], expression=ヷ), ۼ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=82), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=89), mdf=IMM, isLifted=false, name=ℕ᳒ꯧ), name=ۼ, args=[], expression=this), ꩂꩌ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=112), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=119), mdf=IMM, isLifted=true, name=ળ), name=ꩂꩌ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=129), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=129), mdf=IMM, isLifted=true, name=ౚੑྍోஂ೮ິ), name=Ⴧ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=145), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=145), mdf=IMM, isLifted=true, name=ઽॄ਼꙯ை), name=ୱ)], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=162), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=169), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=176), mdf=IMM, name=ቾ०ᨛ, value=this, boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=196), mdf=IMM, name=Όꧥ, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=207), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=223), receiver=6, isLifted=true, methodName=ⁱⷹ­፞, arguments=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=232), name=ຝࠧၫ, args=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=242), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=249), name=ൡ꤆౩၀⃐, args=[]))])])), boundTo=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=300), receiver=1.6940658945086007E-21, fieldName=ˮ൭2, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=306), mdf=CAPSULE, name=ꮗ, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=324), name=ຢ꣔ަຼ, args=[Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=335))]), boundTo=0)))))))})}, main=13)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=11), signalExpr=this), tail=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=108), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=30), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=34), name=Ⴧ, args=[]), tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=49), name=ᬋ꩖, args=[true, true, Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=74), name=ⁿ, args=[0]), লௗ])), fieldName=ꤟᝒූ)))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=གྷ, value=this, boundTo=this))
Program(classDeclarations={מּෛ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=86), isCapability=false, isInterface=false, name=מּෛ, impl=[Ⳮٰ, ￠, ᳯ, ૹꯨၖ, ᦲ଼], extend=[], fields={}, methods={ᾣ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=131), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=138), mdf=IMM, isLifted=true, name=￠ֹࠜ), name=ᾣ, args=[], expression=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=160), receiver=, fieldName=ꘪ))}), ੴ᭖ࠗ૿ꨬ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ੴ᭖ࠗ૿ꨬ, impl=[ⵯ, ມ้ᬄ, ￡, ਆ઼ၭૌ͒], extend=[], fields={એ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=47), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=47), mdf=IMM, isLifted=false, name=ສ), name=એ)}, methods={ဿ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=55), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=62), mdf=IMM, isLifted=true, name=ઽ), name=ဿ, args=[], expression=)}), ⷍ᠙=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=170), isCapability=false, isInterface=true, name=ⷍ᠙, impl=[], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=222), head=, tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=232), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=239), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=246), name=Åꤧ, args=[Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=255), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=262), mdf=IMM, name=ፖ, value=3413.0, boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=290), mdf=MUT, name=ᚪం, value=true, boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=310), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=314), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=318), signalExpr=2), tail=203.8125), tail=0)))), Ꙓ, Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=376), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=380), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=387), name=＄, args=[])), tail=)])))))
Program(classDeclarations={ខ꯱=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ខ꯱, impl=[ຽ, ຣꧥ៝], extend=[], fields={}, methods={ⷍྎ᷾ื=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=42), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=49), mdf=IMM, isLifted=true, name=ຄ), name=ⷍྎ᷾ื, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=66), head=this, tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=78), mdf=IMM, name=Ῑ, value=true, boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=98)))))})}, main=3)
Program(classDeclarations={ೠ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=523), isCapability=false, isInterface=true, name=ೠ, impl=[], extend=[Ӿ᭘ྀ], fields={}, methods={}), ၰ꯭8=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=40), isCapability=false, isInterface=false, name=ၰ꯭8, impl=[ಏ], extend=[], fields={}, methods={ᢣ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=66), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=77), mdf=CAPSULE, isLifted=false, name=ච), name=ᢣ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=92), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=92), mdf=IMM, isLifted=true, name=Ʞ), name=ಲో)], expression=false), ୟᮤ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=116), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=123), mdf=IMM, isLifted=false, name=ℂ), name=ୟᮤ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=135), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=135), mdf=IMM, isLifted=false, name=ߺࠩ), name=Ꮎ༿)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=148), mdf=IMM, name=ⴧ, value=, boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=341), receiver=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=182), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=163), signalExpr=this), isLifted=false, methodName=ιೇ, arguments=[164, true, Expression.TailExpr(pos=ProgramNode.Position(line=1, col=207), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=214), mdf=IMM, name=ꦱื‏, value=false, boundTo=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=258), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=234), signalExpr=0.015625), fieldName=ၡ))), ꩚\u71D0, Expression.TailExpr(pos=ProgramNode.Position(line=1, col=281), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=288), name=ༀ, args=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=296), name=ᏺ, args=[Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=304))])])), this]), isLifted=true, methodName=Ꞡꙻ, arguments=[]))), ᢥ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=358), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=370), mdf=IMM, isLifted=true, name=ဤ), name=ᢥ, args=[], expression=2), ὒꦃ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=395), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=406), mdf=IMM, isLifted=false, name=ゟᢆ), name=ὒꦃ, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=420), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=424), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=440), receiver=\41, isLifted=false, methodName=ᱠ้, arguments=[Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=445), head=true, tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=457)))])), tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=480), mdf=IMM, name=ꬃ᜴ؒ, value=0.0, boundTo=this)))}), ꘪ༘꣪=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ꘪ༘꣪, impl=[ถ], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=584), head=this, tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=596), signalExpr=0)))
Program(classDeclarations={í᠙ோ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=50), isCapability=true, isInterface=false, name=í᠙ோ, impl=[Ὑ], extend=[], fields={ໜ܏=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=87), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=87), mdf=IMM, isLifted=false, name=ຯ), name=ໜ܏)}, methods={}), ꪽ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꪽ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=106), mdf=IMM, name=ᮮ‮ꨴ, value=false, boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=152), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=134), name=ਵ᪓ಾಂ, args=[]), isLifted=false, methodName=ኋ, arguments=[])))
Program(classDeclarations={ὒ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ὒ, impl=[], extend=[], fields={}, methods={}), Ｖ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=97), isCapability=false, isInterface=false, name=Ｖ, impl=[], extend=[], fields={ଳ᪵=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=120), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=120), mdf=IMM, isLifted=true, name=ῂ҃໘), name=ଳ᪵), ￇଂึ༡=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=107), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=107), mdf=IMM, isLifted=true, name=ꪵ), name=ￇଂึ༡), ᕫ̰ං=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=133), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=133), mdf=CAPSULE, isLifted=false, name=ᭇ), name=ᕫ̰ං)}, methods={})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=161), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=168), mdf=IMM, name=ꫲ᭱, value=3.9631676720860365E17, boundTo=0)))
Program(classDeclarations={ⁿ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ⁿ, impl=[], extend=[], fields={ܚ໋᠒=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=21), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=21), mdf=IMM, isLifted=true, name=ۯۣۨ), name=ܚ໋᠒)}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=46), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=53), mdf=IMM, name=ᳬෲ܏୩⳱, value=33, boundTo=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=156), receiver=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=82), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=72)), isLifted=true, methodName=י꫶ִ꙯೫, arguments=[1.05553116266496E15, false, 6.5185151242703555E91, 0.0, \b\"]), fieldName=ൎ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=160), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=164), name=﹩, args=[]), tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=179), mdf=IMM, name=ៗೣ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=189)), boundTo=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=204), receiver=0, fieldName=ᢪۛ, value=false)))))))
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=Ά̯ꚞિൌ, args=[]))
Program(classDeclarations={〣ᩘ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=420), isCapability=false, isInterface=true, name=〣ᩘ, impl=[], extend=[], fields={}, methods={}), ग़ஂ꤬ꨵ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=360), isCapability=true, isInterface=false, name=ग़ஂ꤬ꨵ, impl=[], extend=[], fields={}, methods={ￜ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=384), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=391), mdf=IMM, isLifted=true, name=৲ो゙៣), name=ￜ, args=[], expression=true)}), ힲ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=296), isCapability=true, isInterface=false, name=ힲ, impl=[], extend=[], fields={}, methods={ఽົ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=317), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=324), mdf=IMM, isLifted=true, name=םަ), name=ఽົ, args=[], expression=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=345), receiver=ᲄ, isLifted=false, methodName=ꟼ, arguments=[]))}), Ñूⷸ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=654), isCapability=false, isInterface=false, name=Ñूⷸ, impl=[], extend=[], fields={}, methods={ಎ଼=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=666), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=677), mdf=IMM, isLifted=false, name=ՙ), name=ಎ଼, args=[], expression=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=702), receiver=true, fieldName=ࢫุꙴ, value=ὖ၆))}), ꤖ࠙ం=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=59), isCapability=false, isInterface=false, name=ꤖ࠙ం, impl=[], extend=[], fields={}, methods={爛ࠝ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=164), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=171), mdf=READ, isLifted=false, name=ၡ‌), name=爛ࠝ, args=[], expression=\156), ⴭ­=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=123), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=138), mdf=IMM, isLifted=true, name=ܐ), name=ⴭ­, args=[], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=153))), ⷌᩮׄ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=71), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=78), mdf=IMM, isLifted=false, name=ᡅ), name=ⷌᩮׄ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=91), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=91), mdf=IMM, isLifted=false, name=ஃଂௗᷕଁୀٰ), name=ℕ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=105), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=105), mdf=IMM, isLifted=false, name=ޱ), name=Ʇੵ)], expression=ꫴ), ऽ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=201), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=212), mdf=IMM, isLifted=false, name=ﬨੵி᳷), name=ऽ, args=[], expression=this)}), נּᤦ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=נּᤦ, impl=[], extend=[], fields={}, methods={}), ᙺ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=1051), isCapability=false, isInterface=false, name=ᙺ, impl=[], extend=[], fields={}, methods={ಐ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=1269), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1276), mdf=READ, isLifted=false, name=ꣲ഻), name=ಐ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1289), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1289), mdf=IMM, isLifted=true, name=ˬ᭕ᝲ), name=µ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1301), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1301), mdf=IMM, isLifted=true, name=څ꯸), name=σੁୌꢀ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1315), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1315), mdf=IMM, isLifted=false, name=ୱ഻), name=ℨℽಃ)], expression=30), ۄ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=1337), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1344), mdf=IMM, isLifted=true, name=ꭠꪰ), name=ۄ, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=1359), mdf=IMM, name=ℇࠣෳ⵿, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=1371)), boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=1381)))), ᚅ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=1218), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1230), mdf=IMM, isLifted=true, name=ⷊ), name=ᚅ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1239), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1239), mdf=MUT, isLifted=false, name=Ꚙᮀ), name=ງె)], expression=0.008), Ὺ᭯᳑=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=1162), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1174), mdf=READ, isLifted=false, name=ቘ), name=Ὺ᭯᳑, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=1193), head=, tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=1203)))), ౙ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=1116), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1127), mdf=IMM, isLifted=true, name=Ⴧ), name=ౙ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1136), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1136), mdf=IMM, isLifted=true, name=ˬ), name=ఏۨᳲ)], expression=2400.0), Ὃ᳢੍᭲꧘=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=1394), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1405), mdf=IMM, isLifted=true, name=ຳ), name=Ὃ᳢੍᭲꧘, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=1423), head=ꮞ༘, tail=ˋ)), ಶ᳤⁪=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=1061), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1068), mdf=IMM, isLifted=false, name=ܐ), name=ಶ᳤⁪, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1077), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1077), mdf=IMM, isLifted=false, name=ແ), name=ச២), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1086), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1086), mdf=IMM, isLifted=true, name=ℌ), name=יּ߁᳭)], expression=0.08203125)}), יִ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=240), isCapability=true, isInterface=false, name=יִ, impl=[ఽꩌ], extend=[], fields={ྉ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=276), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=276), mdf=READ, isLifted=false, name=ᜡ﻿ᝳ꛱ౣ), name=ྉ)}, methods={}), K໕=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=720), isCapability=false, isInterface=false, name=K໕, impl=[], extend=[], fields={}, methods={ߴੵ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=807), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=814), mdf=IMM, isLifted=false, name=ૐ), name=ߴੵ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=827), name=ᪧ꠆, args=[Expression.LetExpr(pos=ProgramNode.Position(line=1, col=836), mdf=IMM, name=ଧ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=846), mdf=IMM, name=ᛖ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=858)), boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=868), signalExpr=𞄰𖼀\u1Ef3\22\61\f𞹌\")), boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=906), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=913))))])), ⅇ༷=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=978), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=985), mdf=IMM, isLifted=false, name=ၚ), name=ⅇ༷, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=998), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=1002), mdf=IMM, name=טּ, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=1009), name=ₒ, args=[]), boundTo=true), tail=false)), ઽၪ⁪ൊ᷼=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=731), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=738), mdf=IMM, isLifted=false, name=ኵ), name=ઽၪ⁪ൊ᷼, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=749), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=749), mdf=IMM, isLifted=true, name=ஐੵ꘦), name=ቜ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=761), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=761), mdf=IMM, isLifted=true, name=ݱ), name=Ὤৈ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=772), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=772), mdf=IMM, isLifted=true, name=ⴭᮂ), name=ख꛱), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=784), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=784), mdf=IMM, isLifted=true, name=ఱ), name=ꇈު)], expression=true), ㆯ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=935), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=946), mdf=IMM, isLifted=false, name=Ꭵ), name=ㆯ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=953), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=953), mdf=READ, isLifted=false, name=ၵ⃧), name=ৱ੩)], expression=0)})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=1453), mdf=CAPSULE, name=ᮯ಼꛱ᩧ, value=3, boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=1477))))
Program(classDeclarations={}, main=320.0)
Program(classDeclarations={ゟ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ゟ, impl=[], extend=[], fields={}, methods={ਬ੩ౖ꫁=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=79), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=90), mdf=CAPSULE, isLifted=false, name=৻), name=ਬ੩ౖ꫁, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=108), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=108), mdf=IMM, isLifted=false, name=ⷌ), name=தಁ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=117), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=117), mdf=IMM, isLifted=true, name=ꪄ), name=ℕᤡे), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=130), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=130), mdf=IMM, isLifted=false, name=ˬᨙ), name=ꩭ)], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=142), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=146), signalExpr=5), tail=)), เ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=174), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=185), mdf=IMM, isLifted=false, name=அّৢ), name=เ, args=[], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=199))), ꬌ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=17), mdf=IMM, isLifted=false, name=ꪹ᳹️ࠖꤪ෫), name=ꬌ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=29), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=29), mdf=IMM, isLifted=false, name=ꬮ़᱉), name=ⵯ୨᳣್ְ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=43), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=43), mdf=IMM, isLifted=true, name=ᱍ᷻), name=ਰ)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=57), mdf=IMM, name=Ⅳ, value=ຄ, boundTo=ᙿ))})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=220), signalExpr=0.6))
Program(classDeclarations={ℿ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ℿ, impl=[], extend=[ℒ, ꢲ], fields={}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=39), name=ஐֿ, args=[]))
Program(classDeclarations={}, main=ಆ)
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ᨥ, value=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=26), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=16)), isLifted=false, methodName=ⶕၘ, arguments=[]), boundTo=false))
Program(classDeclarations={}, main=true)
Program(classDeclarations={ℇౕௗ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ℇౕௗ, impl=[], extend=[ᣖꩽၲ], fields={}, methods={}), ࢱ꣘⃥༹=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=84), isCapability=false, isInterface=true, name=ࢱ꣘⃥༹, impl=[], extend=[], fields={}, methods={})}, main=0.0)
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ຄ᠖ு, args=[]))
Program(classDeclarations={ꯓ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꯓ, impl=[], extend=[], fields={}, methods={}), כ᜴꯭ּးௌ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=131), isCapability=true, isInterface=false, name=כ᜴꯭ּးௌ, impl=[ꡍාၙ, ᳯഁൣ, ୟ߂, ㇼ༷᳷], extend=[], fields={}, methods={ℂ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=189), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=204), mdf=IMM, isLifted=false, name=婢ੌ௪ۨ), name=ℂ, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=219), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=223), name=︳᭫ೃꩌ, args=[Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=234))]), tail=false))})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=273), name=ꠉ, args=[ힶླྀ, ᯛࠜ᥋, true]))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=14), signalExpr=false)))
Program(classDeclarations={}, main=\44)
Program(classDeclarations={হ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=17), isCapability=false, isInterface=false, name=হ, impl=[], extend=[], fields={ˈ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=50), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=50), mdf=IMM, isLifted=false, name=Ꝕుৢࣔᤵٰ), name=ˈ), ৎୢั=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=27), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=27), mdf=IMM, isLifted=true, name=ಮ), name=ৎୢั), ꧯ꯵꧀=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=39), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=39), mdf=IMM, isLifted=false, name=ສ), name=ꧯ꯵꧀)}, methods={ꬋ৭=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=63), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=74), mdf=IMM, isLifted=false, name=ວ), name=ꬋ৭, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=82), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=82), mdf=IMM, isLifted=false, name=￠๗ꥍ꣗ૢ), name=ೞ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=94), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=94), mdf=IMM, isLifted=false, name=አ⳱ਃ), name=ఽ)], expression=50.0)}), ヾ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ヾ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={ຈ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=150), isCapability=false, isInterface=true, name=ຈ, impl=[], extend=[], fields={}, methods={}), ￦േ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=￦േ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=174), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=181), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=185), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=192), name=ﭝ⃘, args=[])), tail=)))
Program(classDeclarations={ລ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ລ, impl=[], extend=[], fields={}, methods={})}, main=2.886310394329927E25)
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={ￒ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ￒ, impl=[], extend=[], fields={}, methods={}), ι༠ꥋෲ᭲=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=13), isCapability=false, isInterface=false, name=ι༠ꥋෲ᭲, impl=[ꜚ], extend=[], fields={}, methods={})}, main=false)
Program(classDeclarations={E=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=226), isCapability=false, isInterface=true, name=E, impl=[], extend=[ꪱೊꫫ, ᳩ], fields={}, methods={}), એ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=એ, impl=[], extend=[], fields={}, methods={ኌ⁫ᯫ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=21), mdf=IMM, isLifted=true, name=ྊಂ), name=ኌ⁫ᯫ, args=[], expression=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=76), receiver=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=46), receiver=ˮ഼੯ం, isLifted=true, methodName=ۻꯨ, arguments=[59903, ᡛ]), isLifted=false, methodName=ⷕ, arguments=[])), ⶒꢿ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=88), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=95), mdf=IMM, isLifted=false, name=ꚗ⃯), name=ⶒꢿ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=104), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=104), mdf=IMM, isLifted=true, name=ⶖ), name=Ἒ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=114), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=114), mdf=IMM, isLifted=false, name=⁔྇᩶), name=ⱄ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=124), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=124), mdf=READ, isLifted=false, name=৻ੈ), name=﹏ᜒ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=139), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=139), mdf=IMM, isLifted=true, name=ꬆ), name=ꦊᰫ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=150), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=150), mdf=READ, isLifted=false, name=ｄం), name=ⶳ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=164), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=164), mdf=IMM, isLifted=false, name=ⷉౕ), name=ந), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=177), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=177), mdf=MUT, isLifted=false, name=ῶ), name=ጻૻၩ႘ᤠ୍ٰ)], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=198), name=ড়፞￹ൣ, args=[this]))})}, main=\16)
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=12), receiver=ª, fieldName=ಎꯦั))
Program(classDeclarations={దꙻੁ꙯េꫵ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=దꙻੁ꙯េꫵ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=29), mdf=IMM, name=֏ׅোਁ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=45), mdf=IMM, name=ᦝ߁, value=3, boundTo=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=75), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=63)), fieldName=ጯ)), boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=98), receiver=3892192.0, isLifted=false, methodName=ˢ, arguments=[\r, Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=110), name=ဿ, args=[true])])))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ᨍ්᪲, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=27), name=ཅᢅ, args=[0.36328125, \"\02]), boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=65), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=69), signalExpr=5), tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=87), mdf=READ, name=ⴧੑᷤׄ, value=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=112), receiver=false, isLifted=false, methodName=ퟵ, arguments=[]), boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=123), mdf=IMM, name=ⅅ⃬, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=134), name=ൔ, args=[]), boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=149), mdf=IMM, name=Ⴧᜲ, value=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=211), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=164), signalExpr=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=180), receiver=false, fieldName=ꧢ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=184), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=191))))), isLifted=true, methodName=ᳵꠋ, arguments=[]), boundTo=6.8))))))
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ਭꪾുꪰꢁ︌, args=[DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=42), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=21), head=0.0, tail=$), isLifted=false, methodName=ￜ, arguments=[Expression.LetExpr(pos=ProgramNode.Position(line=1, col=46), mdf=MUT, name=ª꤇ੑ, value=8.796093022208E12, boundTo=ປᮀൈꢵ)])]))
Program(classDeclarations={ᝄ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ᝄ, impl=[ஃ], extend=[], fields={ࢱ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=33), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=33), mdf=IMM, isLifted=true, name=ᝥූ), name=ࢱ), ꔛ઼=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=24), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=24), mdf=IMM, isLifted=false, name=Љ), name=ꔛ઼), ಶ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=44), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=44), mdf=IMM, isLifted=true, name=ઑ), name=ಶ)}, methods={})}, main=16)
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=this))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ઈޯ, value=\41\", boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=27), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=34), name=Ί୦ᢆ, args=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=44), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=51))), Expression.LetExpr(pos=ProgramNode.Position(line=1, col=65), mdf=IMM, name=ྊ্ை, value=this, boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=86), mdf=IMM, name=ﬅ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=96), mdf=IMM, name=ⵒൗ૪ׇਁ૮‎, value=\"኉𐿠, boundTo=\t᨞), boundTo=9470000.0))]))))
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ޱﬞఀ᳣ୄ᪸, args=[Expression.LetExpr(pos=ProgramNode.Position(line=1, col=20), mdf=IMM, name=ºꩃ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=32), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=60), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=39), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=46))), isLifted=true, methodName=ଳ൮, arguments=[])), boundTo=0)]))
Program(classDeclarations={}, main=0)
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=5.7E-51))
Program(classDeclarations={ⷆ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ⷆ, impl=[], extend=[], fields={}, methods={ῑ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=21), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=36), mdf=CAPSULE, isLifted=false, name=ᝈꢀ), name=ῑ, args=[], expression=𞹥), ꟽ᱉=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=65), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=76), mdf=IMM, isLifted=true, name=ޱ̾), name=ꟽ᱉, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=92), signalExpr=))})}, main=this)
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={ꠁृ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ꠁृ, impl=[], extend=[], fields={ￂ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=68), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=68), mdf=IMM, isLifted=true, name=կ֔), name=ￂ), ൎಃၢ᭬ௗ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=54), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=54), mdf=IMM, isLifted=true, name=ߐ), name=ൎಃၢ᭬ௗ), ﶶ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=22), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=22), mdf=IMM, isLifted=false, name=শ༷ূ࿆), name=ﶶ), ᬇ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=33), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=33), mdf=IMM, isLifted=true, name=￡), name=ᬇ), ꩊ྆=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=43), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=43), mdf=IMM, isLifted=true, name=Ⳃ), name=ꩊ྆)}, methods={}), ꥮ୍=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=82), isCapability=false, isInterface=true, name=ꥮ୍, impl=[], extend=[], fields={}, methods={})}, main=סּ)
Program(classDeclarations={ㆺꨶ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ㆺꨶ, impl=[ៜ, ഽⷶ], extend=[], fields={₪ႜ઼᷻=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=41), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=41), mdf=IMM, isLifted=false, name=ۿၱ৪〪ꠦ), name=₪ႜ઼᷻), ⳙັꥊ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=56), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=56), mdf=READ, isLifted=false, name=ಸ), name=ⳙັꥊ)}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=81)))
Program(classDeclarations={ୡ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=282), isCapability=false, isInterface=false, name=ୡ, impl=[ﷴ, ཁ], extend=[], fields={}, methods={}), ລ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ລ, impl=[], extend=[ﵠ, ቘၧ꩒ৗ], fields={}, methods={}), ஹ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=58), isCapability=false, isInterface=false, name=ஹ, impl=[], extend=[], fields={}, methods={ௐൣ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=191), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=202), mdf=IMM, isLifted=true, name=ଲ), name=ௐൣ, args=[], expression=false), ਗ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=227), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=234), mdf=IMM, isLifted=true, name=ꣻౌꠣ), name=ਗ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=245), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=245), mdf=IMM, isLifted=true, name=ꠃ), name=ℚ২)], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=259), signalExpr=ఎప)), ꕱা=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=68), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=79), mdf=IMM, isLifted=true, name=ꤒ), name=ꕱা, args=[], expression=false), Ⳮ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=104), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=111), mdf=IMM, isLifted=false, name=ŧ), name=Ⳮ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=118), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=118), mdf=IMM, isLifted=true, name=တ), name=ᛙূ⃭), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=130), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=130), mdf=IMM, isLifted=false, name=ꬂ᪻), name=ਯ᭱), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=144), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=144), mdf=CAPSULE, isLifted=false, name=Ὕ), name=ੴ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=160), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=160), mdf=IMM, isLifted=true, name=ϧ), name=￦ꩌꠧ)], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=175), name=ᝏ, args=[]))})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=320), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=324), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=328), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=332), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=339), signalExpr=true)), tail=true), tail=ￍ౦), tail=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=392), receiver=this, isLifted=false, methodName=檬ᯭ, arguments=[Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=397), head=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=409), receiver=this, fieldName=ꦛ), tail=20.0), false, DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=445), receiver=this, isLifted=true, methodName=ૡ༹൧ޯី, arguments=[]), DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=489), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=462), name=ຽ๐ꫫഁॕ, args=[Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=474))]), fieldName=〵, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=493), mdf=IMM, name=ª, value=true, boundTo=𞅊𐒞\u7C22))])))
Program(classDeclarations={ၡ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=15), isCapability=false, isInterface=false, name=ၡ, impl=[], extend=[], fields={全=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=25), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=25), mdf=IMM, isLifted=true, name=ౠ߭꣭), name=全), ಧᳳᭃ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=53), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=53), mdf=IMM, isLifted=true, name=ᳶ), name=ಧᳳᭃ), ಶ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=37), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=37), mdf=IMM, isLifted=false, name=ꘫ໋￺ꪲꩼ), name=ಶ)}, methods={}), 〴=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=68), isCapability=false, isInterface=false, name=〴, impl=[ףּ꫁ᜒෟ‎], extend=[], fields={ૠೌ꧐=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=96), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=96), mdf=IMM, isLifted=true, name=ꣽൢꯦ꯭), name=ૠೌ꧐)}, methods={ળྀ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=111), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=123), mdf=IMM, isLifted=false, name=ᠴ), name=ળྀ, args=[], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=136)))}), ͼ꛰ັ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ͼ꛰ັ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=நંᮀ)
Program(classDeclarations={}, main=0.0)
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=14), name=ℏ, args=[])))
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=true))
Program(classDeclarations={ꜘ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=48), isCapability=false, isInterface=false, name=ꜘ, impl=[זּ, ꠸, ꗋ], extend=[], fields={}, methods={}), ቚ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ቚ, impl=[ਈ, ະ, ⶄᰲෳ], extend=[], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=90), mdf=IMM, name=ݯౣ­, value=ൠೣꥍ᧒াꨳ⁩༡឵, boundTo=this))
Program(classDeclarations={}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=26), receiver=87104.0, isLifted=false, methodName=ꧢ, arguments=[Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=30), signalExpr=0.90234375)]))
Program(classDeclarations={ꭞ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꭞ, impl=[], extend=[ῡᮀ۰, ℬ], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=86), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=93))))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=11)), tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=21), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=36), receiver=1, isLifted=true, methodName=ୠ᳒؜ꤪ〪ా, arguments=[this]))))
Program(classDeclarations={ጓ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=781), isCapability=true, isInterface=false, name=ጓ, impl=[], extend=[], fields={ኼׅ᳹=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=802), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=802), mdf=IMM, isLifted=true, name=ⵔ), name=ኼׅ᳹)}, methods={ఈ۫ঃꠂ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=814), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=821), mdf=IMM, isLifted=true, name=けูꩃૺ), name=ఈ۫ঃꠂ, args=[], expression=true)}), ࡄ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ࡄ, impl=[ꩅ៤ꢾ൧ֿ᧐], extend=[], fields={}, methods={}), ᄅ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=853), isCapability=false, isInterface=true, name=ᄅ, impl=[], extend=[], fields={}, methods={}), ૱‪=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=33), isCapability=false, isInterface=false, name=૱‪, impl=[ಇ], extend=[], fields={ᢙૉ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=58), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=58), mdf=IMM, isLifted=true, name=ਵ਼៝), name=ᢙૉ)}, methods={ᤗᝒ໗ోೆ۬୭ꯤ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=71), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=78), mdf=IMM, isLifted=false, name=ಇ), name=ᤗᝒ໗ోೆ۬୭ꯤ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=96), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=96), mdf=IMM, isLifted=true, name=ᳶୋ), name=ำ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=107), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=107), mdf=IMM, isLifted=false, name=ຈ꣡૫), name=ᯂ᳗ᝲ҃), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=124), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=124), mdf=CAPSULE, isLifted=false, name=૱), name=ຽಃ̅), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=142), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=142), mdf=IMM, isLifted=true, name=എ), name=ಀ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=152), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=152), mdf=MUT, isLifted=false, name=ⸯ), name=თ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=164), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=164), mdf=MUT, isLifted=false, name=ၝৢླꫭ), name=יִ)], expression=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=201), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=182), signalExpr=this), fieldName=ଫ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=205), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=209), mdf=MUT, name=eි, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=221), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=225), signalExpr=0.9), tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=243), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=247), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=254), signalExpr=ငં࿆ේ)), tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=277), signalExpr=຾ￊ\uC8E3))), boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=310), head=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=402), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=314), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=321), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=328), head=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=341), receiver=0.0, fieldName=ଭᩚ), tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=348), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=352), signalExpr=true), tail=9.28369140625)))), fieldName=ࢽഃ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=407), signalExpr=0)), tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=429), mdf=READ, name=ഓྔ؂, value=, boundTo=this))), tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=465), signalExpr=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=493), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=472), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=479))), fieldName=దౢ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=498), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=505), signalExpr=))))))), ⅆึ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=539), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=546), mdf=IMM, isLifted=true, name=ℕ), name=ⅆึ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=561), name=ˬ, args=[Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=569), head=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=580), receiver=𐨶, isLifted=true, methodName=ە໌, arguments=[]), tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=594))), \', Expression.LetExpr(pos=ProgramNode.Position(line=1, col=616), mdf=IMM, name=ᛮ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=625), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=629), mdf=CAPSULE, name=ᭅ⃡ੵാ, value=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=652), receiver=ꙁ, isLifted=false, methodName=ᦶ, arguments=[Expression.LetExpr(pos=ProgramNode.Position(line=1, col=656), mdf=IMM, name=ટႜ, value=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=671), receiver=0, fieldName=x, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=675), name=Ａ, args=[])), boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=692)))]), boundTo=20.0), tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=719), mdf=CAPSULE, name=Ό༙, value=0.5, boundTo=this)), boundTo=false)]))}), פּౕ۪=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=870), isCapability=false, isInterface=true, name=פּౕ۪, impl=[], extend=[￠ଁ꪿, ꬎᰶꠤ〭ಂ, ＿ᤲ], fields={}, methods={})}, main=6)
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=0))
Program(classDeclarations={}, main=255)
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ф݂ⷱ, value=৲, boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=23), signalExpr=false)))
Program(classDeclarations={ག᭙ॅ︆=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=209), isCapability=true, isInterface=false, name=ག᭙ॅ︆, impl=[], extend=[], fields={ອ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=233), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=233), mdf=CAPSULE, isLifted=false, name=Ʞᳲ᳸), name=ອ)}, methods={}), Ճ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=114), isCapability=false, isInterface=true, name=Ճ, impl=[], extend=[], fields={}, methods={}), ᛵ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=97), isCapability=false, isInterface=true, name=ᛵ, impl=[], extend=[], fields={}, methods={}), ௹ୌ҆ᬶ〬=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=௹ୌ҆ᬶ〬, impl=[ⷞ, ꭋೖꧥ, ＿߃ੂﬞॢ, ਫ਼, ꫀັ࿆ৢ], extend=[], fields={ࡐ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=78), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=78), mdf=CAPSULE, isLifted=false, name=ㆱ), name=ࡐ), ⶫୈৗ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=64), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=64), mdf=IMM, isLifted=true, name=ज़༹ಿ), name=ⶫୈৗ)}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=261), name=ꡳ᮹ೆ꯭꠆9, args=[]))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=this, tail=ⁿ⁩௬౧))
Program(classDeclarations={ՙ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ՙ, impl=[], extend=[ℙ܏ᮀ᥍, ꫤ᮴ົ‭], fields={}, methods={})}, main=ꠃ)
Program(classDeclarations={ಽﬞ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ಽﬞ, impl=[ଵ], extend=[], fields={ಽ௯=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=25), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=25), mdf=IMM, isLifted=false, name=Çᮩ), name=ಽ௯), ⷓ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=50), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=50), mdf=IMM, isLifted=true, name=தۨ), name=ⷓ), ꧽେ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=35), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=35), mdf=IMM, isLifted=true, name=ᚰ়᷿ූ༩), name=ꧽେ)}, methods={})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=71), signalExpr=this))
Program(classDeclarations={ᭈ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ᭈ, impl=[õ​҃], extend=[], fields={}, methods={ਠෲ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=239), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=254), mdf=IMM, isLifted=true, name=ঋ), name=ਠෲ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=264), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=264), mdf=READ, isLifted=false, name=ዕ), name=ႎ۪)], expression=25), ཅ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=124), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=131), mdf=IMM, isLifted=false, name=ᱍૣ), name=ཅ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=139), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=139), mdf=IMM, isLifted=false, name=க), name=ᳶ)], expression=W), ς౯ࠧ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=156), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=163), mdf=IMM, isLifted=true, name=Ὁௗ‎ৢ), name=ς౯ࠧ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=177), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=177), mdf=IMM, isLifted=true, name=ힱ༣ঃ), name=ਜ਼᠔), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=190), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=190), mdf=IMM, isLifted=true, name=Ë), name=ͳ๑െ෭), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=203), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=203), mdf=IMM, isLifted=true, name=բ), name=ﬨ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=213), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=213), mdf=IMM, isLifted=false, name=ൖ), name=ت)], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=228))), य़=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=37), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=49), mdf=IMM, isLifted=false, name=נ්ּ), name=य़, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=61), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=61), mdf=IMM, isLifted=false, name=〇ꠦ಼3᱐), name=ஆుꪸ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=75), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=75), mdf=CAPSULE, isLifted=false, name=〡᭲ၖ᥈⁯ॗ), name=৳꠆ꯩ)], expression=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=110), receiver=0, isLifted=false, methodName=ౘ३ꪸ, arguments=[]))}), ௐ࡛=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=294), isCapability=true, isInterface=false, name=ௐ࡛, impl=[⁔࿆ܸ], extend=[], fields={ఐ꙯ो൨ᨚ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=342), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=342), mdf=IMM, isLifted=false, name=ᛈႊ), name=ఐ꙯ो൨ᨚ), º=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=332), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=332), mdf=IMM, isLifted=true, name=ῇ), name=º)}, methods={ៗ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=359), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=370), mdf=IMM, isLifted=false, name=ᝥऻׄᝳ႕ᯩ୍ৌੁꦵౢ۴), name=ៗ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=388), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=388), mdf=IMM, isLifted=true, name=ៗ), name=ㆸ)], expression=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=408), receiver=0, isLifted=true, methodName=יִ༘, arguments=[]))})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=433), mdf=IMM, name=എౣ, value=\\𞥚, boundTo=this))
Program(classDeclarations={}, main=2.0E60)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=11), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=15)), tail=0), tail=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=75), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=37), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=44), head=13.0, tail=this)), fieldName=ຯ, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=79), signalExpr=402))))
Program(classDeclarations={參=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=參, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=24)))
Program(classDeclarations={ﬀ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ﬀ, impl=[], extend=[], fields={ᨋ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=21), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=21), mdf=IMM, isLifted=true, name=ୱ), name=ᨋ)}, methods={ಠં=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=31), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=38), mdf=IMM, isLifted=true, name=ꘪ), name=ಠં, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=48), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=48), mdf=IMM, isLifted=true, name=ᜑࠖ༿), name=ῼ)], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=63), head=, tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=73), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=80), signalExpr=ｉ))))}), 䁩៝=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=108), isCapability=false, isInterface=true, name=䁩៝, impl=[], extend=[ଢ, ゾ, ၾႝ], fields={}, methods={})}, main=716.0)
Program(classDeclarations={}, main=0.0)
Program(classDeclarations={}, main=8)
Program(classDeclarations={}, main=Infinity)
Program(classDeclarations={}, main=6)
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=Ꮎ, args=[]))
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ྌ, args=[]))
Program(classDeclarations={}, main=¥ั)
Program(classDeclarations={}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=17), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)), isLifted=true, methodName=ꪵ༹༹⃡, arguments=[]))
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=14), head=this, tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=26), name=ௐ, args=[]))))
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=true)
Program(classDeclarations={ꩺ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ꩺ, impl=[], extend=[], fields={ᛶ꫁=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=10), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, isLifted=true, name=ῆ￹), name=ᛶ꫁)}, methods={ຣ᪙⃗ྚ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=22), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=34), mdf=IMM, isLifted=true, name=ቛꦀꙴං᮲ׁૉૌ), name=ຣ᪙⃗ྚ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=53), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=53), mdf=IMM, isLifted=true, name=ꛓื), name=Ὕ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=64), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=64), mdf=IMM, isLifted=true, name=ῐ), name=ջ゚)], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=78), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=82), name=〢ࣻ, args=[]), tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=98), mdf=IMM, name=ૠ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=105)), boundTo=this))), ૐେ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=130), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=141), mdf=IMM, isLifted=false, name=ퟃͭৌৣۧਁ), name=ૐେ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=159), name=ᲃ, args=[]))})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=185), name=Ⳳ؀, args=[]))
Program(classDeclarations={}, main=ⶣ१ௌే)
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ὗ᳸, value=this, boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=25), mdf=IMM, name=ᣳ, value=ꟽ, boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=37), mdf=IMM, name=釵, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=46), name=ꫴ, args=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=54), signalExpr=true), this, DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=89), receiver=this, fieldName=ᬕ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=93), head=true, tail=)), this, Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=125), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=132)))]), boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=151), mdf=MUT, name=סּऺ⳯ᩕꨪ゙, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=167)), boundTo=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=187), receiver=0, fieldName=ꏴ))))))
Program(classDeclarations={}, main=\u48A8)
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={ꠅꠦൃ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꠅꠦൃ, impl=[], extend=[Ⴧ, ଖॣৣ፝], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=𐇐)
Program(classDeclarations={ఛ⵿꙯᪀=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ఛ⵿꙯᪀, impl=[], extend=[ￛੈ, கೌ], fields={}, methods={})}, main=this)
Program(classDeclarations={ꙏᢩ꯹ᝒ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=31), isCapability=false, isInterface=true, name=ꙏᢩ꯹ᝒ, impl=[], extend=[], fields={}, methods={}), ணୣ꠆=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ணୣ꠆, impl=[], extend=[ত୧], fields={}, methods={}), ꤍ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=51), isCapability=false, isInterface=true, name=ꤍ, impl=[], extend=[ꭟ, ￥, યើ⁢], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=96), mdf=IMM, name=ഹࠦ, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=106), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=113), signalExpr=3)), boundTo=એꠋ))
Program(classDeclarations={ⅉ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ⅉ, impl=[], extend=[], fields={}, methods={ሏ゚᭫=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=17), mdf=IMM, isLifted=false, name=ᾆ), name=ሏ゚᭫, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=26), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=26), mdf=IMM, isLifted=true, name=ၑꙺெ), name=ኻ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=38), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=38), mdf=IMM, isLifted=true, name=ᥱၠ), name=ང), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=49), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=49), mdf=MUT, isLifted=false, name=ਏ), name=Ⴌ⃓᩿)], expression=ꚝ៝)})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=83), signalExpr=थ꣒))
Program(classDeclarations={ཆੌ༵〮=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ཆੌ༵〮, impl=[], extend=[ﬂ, ͳ, லୢੵ], fields={}, methods={})}, main=238.0)
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={}, main=ￆೢ﻿ா؜ᢩ)
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ໂꫭ, args=[]))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ףּۡ௦ั, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=20)), boundTo=1.6233134784864405E21))
Program(classDeclarations={}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=15), receiver=true, isLifted=false, methodName=វ, arguments=[DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=33), receiver=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=27), receiver=힤ె, fieldName=ಯ), isLifted=false, methodName=தঃ, arguments=[]), Expression.TailExpr(pos=ProgramNode.Position(line=1, col=45), signalExpr=0)]))
Program(classDeclarations={}, main=)
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={}, main=)
Program(classDeclarations={Ὅ߬ோ༨=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=25), isCapability=false, isInterface=true, name=Ὅ߬ோ༨, impl=[], extend=[], fields={}, methods={}), ª꧶=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ª꧶, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=136), mdf=MUT, name=ৼਿ൧, value=this, boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=160), name=ꨛ, args=[])))
Program(classDeclarations={ਐ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=176), isCapability=false, isInterface=true, name=ਐ, impl=[], extend=[ꤎํ໖൭], fields={}, methods={}), ퟔ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=252), isCapability=false, isInterface=true, name=ퟔ, impl=[], extend=[ᢜ, ꬁ੧҄], fields={}, methods={}), ៜ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ៜ, impl=[], extend=[ꜞ, ಢ­᮶, ᳩ], fields={}, methods={})}, main=)
Program(classDeclarations={ºૢָ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=89), isCapability=false, isInterface=false, name=ºૢָ, impl=[ꪶ᠋ૉ, ഢේ, ఋେ⃡ꨬؚ], extend=[], fields={ຈ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=130), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=130), mdf=IMM, isLifted=false, name=ᙴ), name=ຈ)}, methods={}), ໆ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ໆ, impl=[], extend=[], fields={}, methods={}), ˮ〬=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=141), isCapability=false, isInterface=false, name=ˮ〬, impl=[], extend=[], fields={ࡢ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=172), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=172), mdf=IMM, isLifted=false, name=ꬊ), name=ࡢ), ಀ଼ꥒ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=152), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=152), mdf=CAPSULE, isLifted=false, name=ୱೂಁ), name=ಀ଼ꥒ)}, methods={})}, main=this)
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ኤ꪿២༥ᩢ, args=[]))
Program(classDeclarations={৲ۛ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=৲ۛ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=32), mdf=IMM, name=ۿାੵိ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=45), signalExpr=this), boundTo=true))
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=60), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=44), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=14), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=21), signalExpr=this)), fieldName=Ⳏ, value=)), fieldName=ᝥꫵ))
Program(classDeclarations={ຊ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ຊ, impl=[], extend=[কૢ, ᢪᝳྫ꠆ႝ, ணꠂੌᝒ], fields={}, methods={}), ഽ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=44), isCapability=false, isInterface=true, name=ഽ, impl=[], extend=[], fields={}, methods={})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=178), signalExpr=Ꞵ؜))
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ຣ, args=[]))
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=))
Program(classDeclarations={ꫲ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꫲ, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=81), name=டᰵ, args=[this, \134, ෦]))
Program(classDeclarations={ꪱꠋੀ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=76), isCapability=false, isInterface=true, name=ꪱꠋੀ, impl=[], extend=[], fields={}, methods={}), ம=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ம, impl=[ऽ], extend=[], fields={Å꠆ܹୖ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=24), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=24), mdf=IMM, isLifted=true, name=ﾆ), name=Å꠆ܹୖ)}, methods={ヽৗ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=37), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=48), mdf=IMM, isLifted=true, name=ꠈꠂ), name=ヽৗ, args=[], expression=true)})}, main=0)
Program(classDeclarations={৲=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=175), isCapability=false, isInterface=true, name=৲, impl=[], extend=[], fields={}, methods={}), Ⴧ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=192), isCapability=false, isInterface=false, name=Ⴧ, impl=[], extend=[], fields={ꬁ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=214), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=214), mdf=IMM, isLifted=true, name=ਫ਼), name=ꬁ), ଏꪸ꣕྇=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=224), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=224), mdf=MUT, isLifted=false, name=ᦜ૽ꢿ〬ౣ), name=ଏꪸ꣕྇), ௹=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=202), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=202), mdf=IMM, isLifted=false, name=ۯ), name=௹), ⵯ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=243), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=243), mdf=IMM, isLifted=true, name=ⴘ), name=ⵯ)}, methods={}), ঢ়=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ঢ়, impl=[], extend=[], fields={}, methods={})}, main=0.19140625)
Program(classDeclarations={ह꫁=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ह꫁, impl=[], extend=[], fields={}, methods={ߴ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=22), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=34), mdf=IMM, isLifted=false, name=ຟූၣාꤧ), name=ߴ, args=[], expression=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=60), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=50)), isLifted=false, methodName=ꧧ, arguments=[])), ⸯേꢿ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=72), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=79), mdf=IMM, isLifted=false, name=ⴵ), name=ⸯേꢿ, args=[], expression=this)})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=112), head=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=125), receiver=37, fieldName=ࢶ), tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=131), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=138), name=ଆ᪷꣭ೀ, args=[]))))
Program(classDeclarations={ዀ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=395), isCapability=false, isInterface=true, name=ዀ, impl=[], extend=[௹꣱], fields={}, methods={}), ﬕ᳑=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ﬕ᳑, impl=[ࢶ, ୱ], extend=[], fields={ⳬ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=40), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=40), mdf=IMM, isLifted=false, name=ܐࠦ), name=ⳬ)}, methods={ષ꪿ⷻ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=49), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=64), mdf=IMM, isLifted=true, name=ཀྵ۵ۧ), name=ષ꪿ⷻ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=82), name=ⰼੂꪰ᪓, args=[]))}), ଳ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=248), isCapability=true, isInterface=false, name=ଳ, impl=[], extend=[], fields={Ῥ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=269), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=269), mdf=IMM, isLifted=true, name=ℶೀ), name=Ῥ)}, methods={ল=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=280), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=292), mdf=MUT, isLifted=false, name=અ꧳꣒ୖ꣮), name=ল, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=307), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=307), mdf=IMM, isLifted=true, name=ዅ꯸឴්᳗), name=ῼ᷿ꨵ︩ྂ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=325), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=325), mdf=IMM, isLifted=false, name=〆྇), name=º), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=334), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=334), mdf=IMM, isLifted=true, name=ಇ), name=ኞၩ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=345), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=345), mdf=IMM, isLifted=false, name=ଋ), name=ޱၠ⁤ऻ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=356), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=356), mdf=IMM, isLifted=true, name=ᜎ), name=ꠡ)], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=369), name=ᾯ૿, args=[true]))}), ࡨ൧꤇=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=104), isCapability=true, isInterface=false, name=ࡨ൧꤇, impl=[ꠉ], extend=[], fields={}, methods={ꧠ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=191), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=206), mdf=IMM, isLifted=true, name=ຍޯោ‌़഼), name=ꧠ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=220), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=220), mdf=IMM, isLifted=true, name=ༀ⳱᧐­), name=ၐ)], expression=true), ꮞ꯬=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=141), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=152), mdf=IMM, isLifted=false, name=ੴ), name=ꮞ꯬, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=164), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=164), mdf=IMM, isLifted=false, name=ᦟ᪐꧸), name=ℨ᠗)], expression=װ᳭፟৭)}), ଋꪴ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=454), isCapability=false, isInterface=true, name=ଋꪴ, impl=[], extend=[ⱀ], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=618), mdf=IMM, name=ધ᭑, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=632), signalExpr=false), boundTo=false))
Program(classDeclarations={Ꮍਂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=Ꮍਂ, impl=[], extend=[ᯛަ૪, ૱, ʪൂ], fields={}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=73)))
Program(classDeclarations={}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=38), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=14), signalExpr=false)), isLifted=true, methodName=ⶴ, arguments=[]))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ॻ‬, value=\ubf77ᠠ\uu3A4e, boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=36))))
Program(classDeclarations={வ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=வ, impl=[], extend=[ⱑ, ລဴ, Ｐ], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=44), signalExpr=0.0))
Program(classDeclarations={ඕౖ༷=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ඕౖ༷, impl=[], extend=[＄, ᳬ৪๘ꪳૼ], fields={}, methods={}), ㆳ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=84), isCapability=false, isInterface=true, name=ㆳ, impl=[], extend=[ၡ], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=119), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=126), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=133), name=ວ, args=[]))))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ࠚ۟, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=20)), boundTo=this))
Program(classDeclarations={ວ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ວ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=Ὑ, args=[]))
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=24), receiver=0, isLifted=true, methodName=ەܶୖ, arguments=[Expression.LetExpr(pos=ProgramNode.Position(line=1, col=32), mdf=IMM, name=Ὓৗꢀ, value=false, boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=53), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=57)), tail=this)), true, 0, this])))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ꩆ഼ꪲ, value=ꛝ, boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=35), receiver=true, isLifted=true, methodName=ῗஂ, arguments=[])))
Program(classDeclarations={￠=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=￠, impl=[ኾ], extend=[], fields={தꧥ꣗़‎᷽ꢹ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=24), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=24), mdf=IMM, isLifted=false, name=＄ৃ), name=தꧥ꣗़‎᷽ꢹ), ꞗ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=60), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=60), mdf=READ, isLifted=false, name=Ω), name=ꞗ), 彝᳭꫁ௗ᤹੫᪁᠌=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=43), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=43), mdf=IMM, isLifted=true, name=ՙ), name=彝᳭꫁ௗ᤹੫᪁᠌)}, methods={})}, main=40)
Program(classDeclarations={}, main=)
Program(classDeclarations={ង෪=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ង෪, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={ᮞ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ᮞ, impl=[], extend=[Ꮤ්꙯, ℤᬁ], fields={}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=42), name=ߴ, args=[૱, Expression.TailExpr(pos=ProgramNode.Position(line=1, col=55), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=62), name=ⁱ, args=[])), Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=81), head=𐎞, tail=0.9)]))
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=true)
Program(classDeclarations={ଲೢᜒꢁ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=98), isCapability=true, isInterface=false, name=ଲೢᜒꢁ, impl=[ဿ, ＄꛰, ՙٰ], extend=[], fields={Ε௬=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=146), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=146), mdf=IMM, isLifted=true, name=৻⁮ෙ), name=Ε௬)}, methods={}), ᦶ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=162), isCapability=true, isInterface=false, name=ᦶ, impl=[‿], extend=[], fields={}, methods={}), ዑꩍ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ዑꩍ, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=222), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=207), name=ⶳ, args=[]), isLifted=true, methodName=뱋, arguments=[]))
Program(classDeclarations={బꢀ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=బꢀ, impl=[ۿ൭߫ୣ, Ʞ಼꙯, Ⴈ֦], extend=[], fields={}, methods={}), Í=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=42), isCapability=false, isInterface=false, name=Í, impl=[], extend=[], fields={}, methods={}), ㅗੂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=55), isCapability=false, isInterface=true, name=ㅗੂ, impl=[], extend=[ⶮ], fields={}, methods={})}, main=false)
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=130), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ஞ߀, args=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=16), name=ⅈ, args=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=24), name=ﾊ, args=[Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=32))]), this]), Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=60)), Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=70), name=ퟸꩃ, args=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=79), name=ຖൣꩌૢ꩗, args=[4, this])]), 95]), fieldName=ம))
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=this))
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=false))
Program(classDeclarations={ᬗ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ᬗ, impl=[], extend=[], fields={}, methods={ꪺ؁7꣘=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=17), mdf=IMM, isLifted=true, name=ª꧸), name=ꪺ؁7꣘, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=30), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=30), mdf=IMM, isLifted=true, name=ꫴ), name=µᳳ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=41), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=41), mdf=READ, isLifted=false, name=ￅ), name=ಳ໊؅), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=56), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=56), mdf=IMM, isLifted=false, name=ਗ਼꫁), name=ၦ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=65), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=65), mdf=IMM, isLifted=false, name=ቍܑ꛱), name=ﭤേൈ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=77), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=77), mdf=CAPSULE, isLifted=false, name=ऽ), name=ꩴෳ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=94), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=94), mdf=IMM, isLifted=true, name=ℂ), name=સၣෲ୪), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=107), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=107), mdf=IMM, isLifted=true, name=ꚛ), name=〱ௌେꯪ꛱)], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=124), signalExpr=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=140), receiver=false, fieldName=ⸯೀ઼ే߉୧಼᪀, value=ၑ೫)))})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=174), name=ঋ, args=[]))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=ဿ, tail=true))
Program(classDeclarations={}, main=ⴧූ)
Program(classDeclarations={}, main=઒)
Program(classDeclarations={ૡ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=87), isCapability=false, isInterface=true, name=ૡ, impl=[], extend=[], fields={}, methods={}), ￋ꠆=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=248), isCapability=false, isInterface=true, name=ￋ꠆, impl=[], extend=[], fields={}, methods={}), ᙸ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ᙸ, impl=[ۯ︇], extend=[], fields={Ⅾ‮੍່=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=36), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=36), mdf=IMM, isLifted=true, name=ꗭ໓), name=Ⅾ‮੍່)}, methods={}), ᚉౄ꯶३ॢ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=53), isCapability=false, isInterface=true, name=ᚉౄ꯶३ॢ, impl=[], extend=[Ʝ꫁ꪲ], fields={}, methods={}), በ൭ׅᯪ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=104), isCapability=true, isInterface=false, name=በ൭ׅᯪ, impl=[], extend=[], fields={}, methods={ਗ਼=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=128), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=139), mdf=IMM, isLifted=true, name=ᱵ), name=ਗ਼, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=153), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=160), mdf=IMM, name=_ே, value=false, boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=178), signalExpr=13)))), Ὓ᪑ොූꩌꧥ​=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=208), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=215), mdf=READ, isLifted=false, name=ᾁ), name=Ὓ᪑ොූꩌꧥ​, args=[], expression=டꢀ)})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=293), name=ⷔັົ, args=[]))
Program(classDeclarations={}, main=2)
Program(classDeclarations={ດ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=44), isCapability=false, isInterface=true, name=ດ, impl=[], extend=[], fields={}, methods={}), ᳱꠋۢ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ᳱꠋۢ, impl=[؋, ᢪ], extend=[], fields={යꙹ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=30), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=30), mdf=IMM, isLifted=true, name=ࡊ), name=යꙹ)}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=234)))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=CAPSULE, name=ì, value=輸, boundTo=ޱ꧕ᝓ))
Program(classDeclarations={ਫ਼=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ਫ਼, impl=[], extend=[], fields={ͺ᪵ׄੈূ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=10), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, isLifted=false, name=ௐ), name=ͺ᪵ׄੈূ)}, methods={ⷜ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=26), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=33), mdf=IMM, isLifted=false, name=ⁿᮦෳ), name=ⷜ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=42), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=42), mdf=IMM, isLifted=true, name=௹ੵ), name=ᏹ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=53), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=53), mdf=IMM, isLifted=true, name=ᳮৗ), name=Β)], expression=41)})}, main=)
Program(classDeclarations={Ⳳ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=Ⳳ, impl=[], extend=[ꪻꠂ, ᜩீ೧꣐], fields={}, methods={}), ủୀꥉꚞۨ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=36), isCapability=false, isInterface=true, name=ủୀꥉꚞۨ, impl=[], extend=[ミ, Ď, ạ੍], fields={}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=84), head=24, tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=98), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=105), head=9.25478356306348E123, tail=0))))
Program(classDeclarations={ꜚꩌ‏=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ꜚꩌ‏, impl=[], extend=[], fields={ᠪ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=23), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=23), mdf=CAPSULE, isLifted=false, name=＿᥇), name=ᠪ)}, methods={ત=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=40), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=47), mdf=CAPSULE, isLifted=false, name=ܐ), name=ત, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=67), mdf=IMM, name=ⰸ૭᤻, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=80), signalExpr=12), boundTo=5)), ዝ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=109), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=120), mdf=IMM, isLifted=false, name=ໟ), name=ዝ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=132), name=ຂ, args=[0, \046]))})}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=193), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=172), signalExpr=0.875), isLifted=false, methodName=ᢶ៤ૌ, arguments=[]))
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=Ἳ)
Program(classDeclarations={}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=116), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=춚, tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=16), mdf=IMM, name=ᥜ, value=this, boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=39), receiver=0, isLifted=false, methodName=ﶱ๐ᜒ, arguments=[ౠ᠐\b, Expression.LetExpr(pos=ProgramNode.Position(line=1, col=55), mdf=READ, name=ౘைᩣ, value=ᮕꨰૅ, boundTo=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=82), receiver=, fieldName=ቘૌाᤢᯱ)), 0.017578125]))), isLifted=true, methodName=ࢳؕ, arguments=[]))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ꪱ, value=39049.0, boundTo=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=39), receiver=this, fieldName=ୱဴ⁡ఁꢴઃો)))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ຄ, value=0, boundTo=this))
Program(classDeclarations={￦⳱=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=￦⳱, impl=[], extend=[], fields={}, methods={ⶹ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=22), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=29), mdf=IMM, isLifted=true, name=ಀ҅ࠖੋං), name=ⶹ, args=[], expression=0.0)}), ﹍ࠦೇ⁯=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=57), isCapability=true, isInterface=false, name=﹍ࠦೇ⁯, impl=[ᱧ﻿ׇ߰܏ௗ, ⷑ, 〹ꣀᰲ৮ٰ, ە, ᥨ], extend=[], fields={}, methods={ᝐි=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=121), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=136), mdf=IMM, isLifted=false, name=ι), name=ᝐි, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=149), signalExpr=this)), ண=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=169), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=180), mdf=IMM, isLifted=true, name=ꢎ), name=ண, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=189), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=189), mdf=IMM, isLifted=true, name=ቖꧥ), name=ꢏ)], expression=7)}), មᝒ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=215), isCapability=true, isInterface=false, name=មᝒ, impl=[], extend=[], fields={ກަ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=247), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=247), mdf=IMM, isLifted=false, name=ᎄ), name=ກަ), ଵ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=260), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=260), mdf=IMM, isLifted=true, name=ຄ), name=ଵ), ￦=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=237), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=237), mdf=IMM, isLifted=true, name=Ⰸ), name=￦)}, methods={}), ல᮫ৌ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=273), isCapability=false, isInterface=true, name=ல᮫ৌ, impl=[], extend=[Ì], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=330), mdf=IMM, name=ꨨ, value=this, boundTo=લꯣ))
Program(classDeclarations={ㆧꚟే꯲ၳꠋ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ㆧꚟే꯲ၳꠋ, impl=[], extend=[ଟ〫؄܏, ཁ, ഊ, ၕ], fields={}, methods={})}, main=)
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=14), signalExpr=this)))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=MUT, name=$, value=Η, boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=23))))
Program(classDeclarations={ⸯ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ⸯ, impl=[], extend=[], fields={}, methods={})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=24), signalExpr=this))
Program(classDeclarations={}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=22), receiver=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=16), receiver=5, fieldName=ㆧ), isLifted=false, methodName=ཧ꫶ׇ᠐, arguments=[ᬠ༵ࠦꪰী]))
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=14), mdf=IMM, name=Ῡ, value=9.468244622787072E211, boundTo=ⷄ༷)))
Program(classDeclarations={}, main=\uu4F4C)
Program(classDeclarations={ੳ߅=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=13), isCapability=false, isInterface=true, name=ੳ߅, impl=[], extend=[ೠ७, ᙸ], fields={}, methods={}), Όై༠ၬ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=276), isCapability=false, isInterface=true, name=Όై༠ၬ, impl=[], extend=[], fields={}, methods={}), ຊ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ຊ, impl=[], extend=[], fields={}, methods={}), ΰﬞ᱁=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=169), isCapability=true, isInterface=false, name=ΰﬞ᱁, impl=[ၮ], extend=[], fields={ꘪ᱄ုꦽ્=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=206), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=206), mdf=IMM, isLifted=false, name=ዐ), name=ꘪ᱄ုꦽ્)}, methods={ࠨ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=218), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=230), mdf=IMM, isLifted=false, name=ℾৣ4꤃), name=ࠨ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=240), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=240), mdf=IMM, isLifted=true, name=ꫝ), name=ꫳ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=250), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=250), mdf=IMM, isLifted=true, name=ᪧైᜒ໗), name=ஃ)], expression=0)})}, main=0)
Program(classDeclarations={ഐ୍߫=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ഐ୍߫, impl=[], extend=[], fields={}, methods={})}, main=true)
Program(classDeclarations={ư=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ư, impl=[], extend=[], fields={}, methods={})}, main=ﷰ)
Program(classDeclarations={}, main=𝒺᪰\54)
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ᬳꦂ, value=this, boundTo=0))
Program(classDeclarations={ⶺ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ⶺ, impl=[], extend=[], fields={ಀ⃡꧙=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=10), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, isLifted=true, name=ޜ᪖ꫯ), name=ಀ⃡꧙)}, methods={})}, main=ᳵؖྗ)
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=57))
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=14))))
Program(classDeclarations={}, main=188)
Program(classDeclarations={}, main=this)
Program(classDeclarations={₾=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=₾, impl=[], extend=[], fields={}, methods={ᚁၧ༹꛱=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=170), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=181), mdf=IMM, isLifted=false, name=ꪱ᮵ꢵ), name=ᚁၧ༹꛱, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=198), name=Æ, args=[])), Ά=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=21), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=28), mdf=MUT, isLifted=false, name=ສ︃෨ᷔັ), name=Ά, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=43), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=43), mdf=IMM, isLifted=true, name=יִംଁ), name=ꪹ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=55), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=55), mdf=READ, isLifted=false, name=؋), name=ㇼꧥ)], expression=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=109), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=72), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=79), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=86), name=ண, args=[]))), isLifted=false, methodName=¥, arguments=[])), ഽ୧=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=121), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=128), mdf=IMM, isLifted=true, name=ಽ), name=ഽ୧, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=138), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=138), mdf=IMM, isLifted=false, name=ឃ), name=α)], expression=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=158), receiver=ⵯ, isLifted=false, methodName=ℼ, arguments=[]))})}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=268), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=224), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=231), name=ﹱ, args=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=239), name=எ໗ᯩᤳꩽ, args=[])])), fieldName=ஞ))
Program(classDeclarations={ຂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ຂ, impl=[ઽ︃], extend=[], fields={}, methods={ඏௗಿ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=25), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=32), mdf=MUT, isLifted=false, name=ફ), name=ඏௗಿ, args=[], expression=෋\ud835)})}, main=true)
Program(classDeclarations={}, main=220)
Program(classDeclarations={ྊ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ྊ, impl=[], extend=[ᛞే], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=36), signalExpr=ῂׇ))
Program(classDeclarations={Ω=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=284), isCapability=false, isInterface=false, name=Ω, impl=[], extend=[], fields={ˬඃ៝=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=294), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=294), mdf=IMM, isLifted=true, name=Ὑ), name=ˬඃ៝)}, methods={〵=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=306), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=317), mdf=IMM, isLifted=true, name=ℨோ), name=〵, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=327), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=327), mdf=IMM, isLifted=false, name=ꪶঁꯣ), name=ꧏ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=337), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=337), mdf=IMM, isLifted=true, name=ە઼), name=ਖ਼), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=348), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=348), mdf=IMM, isLifted=false, name=ධ᷃), name=ఽ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=361), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=361), mdf=IMM, isLifted=false, name=ㅿ؂), name=⁔)], expression=0)}), ﹴᬄୖ؅ؗ੮=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ﹴᬄୖ؅ؗ੮, impl=[મ़], extend=[], fields={ꯓ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=30), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=30), mdf=IMM, isLifted=true, name=ᚙ᭳), name=ꯓ), ⁔ꠋ᠎᧓ꦹ൩ꯪ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=41), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=41), mdf=READ, isLifted=false, name=ꧼᢩ), name=⁔ꠋ᠎᧓ꦹ൩ꯪ)}, methods={ᱏ᧖ੈۡ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=61), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=68), mdf=IMM, isLifted=false, name=ⁱ), name=ᱏ᧖ੈۡ, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=87), head=7.0, tail=))}), ˮ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=113), isCapability=false, isInterface=false, name=ˮ, impl=[], extend=[], fields={س=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=134), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=134), mdf=IMM, isLifted=false, name=য়), name=س), แၙ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=123), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=123), mdf=IMM, isLifted=true, name=Ⴧ), name=แၙ)}, methods={ඒ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=214), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=225), mdf=IMM, isLifted=true, name=ᙸׁ), name=ඒ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=235), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=235), mdf=IMM, isLifted=true, name=ℕ), name=வꪰ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=246), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=246), mdf=IMM, isLifted=true, name=ۺ), name=ꣽ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=256), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=256), mdf=IMM, isLifted=false, name=ᾷۙ), name=শ﻿ꢀૣ)], expression=false), ዎऻ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=146), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=153), mdf=IMM, isLifted=false, name=ວ), name=ዎऻ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=161), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=161), mdf=IMM, isLifted=false, name=њ⃦), name=יִ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=170), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=170), mdf=IMM, isLifted=true, name=ପ), name=Ꝃꩃੇ҇), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=183), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=183), mdf=IMM, isLifted=true, name=க), name=ޱ)], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=196), name=ꠄ᳒፟, args=[]))})}, main=true)
Program(classDeclarations={ῑ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=163), isCapability=false, isInterface=false, name=ῑ, impl=[], extend=[], fields={ͱ߅=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=183), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=183), mdf=IMM, isLifted=true, name=ᳯ᥇ᳳ), name=ͱ߅), ꨨ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=173), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=173), mdf=IMM, isLifted=true, name=ﶧ), name=ꨨ)}, methods={ໆ࿆ேົᩝᮂ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=196), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=207), mdf=IMM, isLifted=false, name=ੲ), name=ໆ࿆ேົᩝᮂ, args=[], expression=4)}), ᳰٗ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=380), isCapability=false, isInterface=false, name=ᳰٗ, impl=[], extend=[], fields={}, methods={ߊஂ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=391), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=402), mdf=CAPSULE, isLifted=false, name=ઐ), name=ߊஂ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=418), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=418), mdf=IMM, isLifted=true, name=ቧ), name=ⴧ᭰), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=429), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=429), mdf=IMM, isLifted=false, name=ⴧ᥆), name=ꠇ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=438), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=438), mdf=MUT, isLifted=false, name=ጓ), name=ຍ)], expression=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=523), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=453), head=false, tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=466), mdf=IMM, name=ೞ￻๋ೕ︊ൄ, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=482), name=ἰ, args=[]), boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=497), signalExpr=1))), fieldName=ષ១))}), ਵ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ਵ, impl=[ꏛୈ, ମ], extend=[], fields={Ù=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=29), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=29), mdf=IMM, isLifted=true, name=ꫲཻި೧), name=Ù)}, methods={ﺞᩚൗ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=81), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=88), mdf=IMM, isLifted=false, name=ઑꠂ‎), name=ﺞᩚൗ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=99), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=99), mdf=IMM, isLifted=false, name=לּ), name=ｂꪳ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=112), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=112), mdf=IMM, isLifted=true, name=Ὑ５᪕), name=︳ۖ꣐)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=129), mdf=IMM, name=ඖ়゚ܑ༷ັෳ, value=ਯ੮ࣟ, boundTo=)), ዅ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=42), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=53), mdf=IMM, isLifted=false, name=µ꫁ੵॗ), name=ዅ, args=[], expression=this)}), ଷꢀ༙=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=234), isCapability=false, isInterface=true, name=ଷꢀ༙, impl=[], extend=[ၡ], fields={}, methods={})}, main=false)
Program(classDeclarations={}, main=this)
Program(classDeclarations={ￆꯥ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=41), isCapability=false, isInterface=false, name=ￆꯥ, impl=[], extend=[], fields={}, methods={}), ꣻึ᧕=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꣻึ᧕, impl=[], extend=[ꢂ౪ั꦳, ഛৗ꯭᮶ᢩ], fields={}, methods={})}, main=0.0)
Program(classDeclarations={ශ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ශ, impl=[ᢊۭ꧰಼ৢ໘, ဿ], extend=[], fields={}, methods={}), ꓚ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=36), isCapability=false, isInterface=false, name=ꓚ, impl=[], extend=[], fields={}, methods={}), ഺ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=49), isCapability=false, isInterface=true, name=ഺ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=92), mdf=IMM, name=ຯ, value=13.0, boundTo=3.1256317654124317E239))
Program(classDeclarations={}, main=4.65625)
Program(classDeclarations={￠=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=85), isCapability=false, isInterface=true, name=￠, impl=[], extend=[ታ̉, ℨ᱓꫁ૣ‌], fields={}, methods={}), ｉ഻꣨꙯=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ｉ഻꣨꙯, impl=[Ͱ﻿], extend=[], fields={}, methods={Ὀྎ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=39), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=51), mdf=IMM, isLifted=true, name=⁀꣕ৢ‫ෝᤧોা), name=Ὀྎ, args=[], expression=1)})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=170), signalExpr=true))
Program(classDeclarations={}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=15), receiver=this, isLifted=false, methodName=ⅇ, arguments=[ඊᬁ]))
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=מּ, args=[2]))
Program(classDeclarations={}, main=this)
Program(classDeclarations={ஜ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ஜ, impl=[], extend=[], fields={ἶઃ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=10), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, isLifted=true, name=Γે), name=ἶઃ), ⳮ5￺⃦=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=22), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=22), mdf=IMM, isLifted=false, name=ഫ), name=ⳮ5￺⃦)}, methods={})}, main=ଢ଼)
Program(classDeclarations={}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=12), receiver=Ὶ, isLifted=false, methodName=Ͱ, arguments=[]))
Program(classDeclarations={ၡ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ၡ, impl=[], extend=[ງ‪], fields={}, methods={}), ᡏႇꪰ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=29), isCapability=true, isInterface=false, name=ᡏႇꪰ, impl=[ල҇], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=77), name=ٲ, args=[this]))
Program(classDeclarations={ꠖঃ௦ூ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ꠖঃ௦ூ, impl=[ㆫொൣ, ஐ︄ꠋ], extend=[], fields={}, methods={ꬊ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=46), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=53), mdf=IMM, isLifted=false, name=অ਼), name=ꬊ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=61), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=61), mdf=IMM, isLifted=false, name=Ͳ), name=ቔ༿), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=70), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=70), mdf=MUT, isLifted=false, name=ຯׄ), name=Ⳬ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=83), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=83), mdf=IMM, isLifted=true, name=ˮ), name=ௐࠡ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=94), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=94), mdf=CAPSULE, isLifted=false, name=ᢃ), name=ⁿ᠌ྂ)], expression=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=123), receiver=100.0, isLifted=false, methodName=Ⴧ, arguments=[0.203125, Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=139), name=ⷉᝒۘ, args=[\124, Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=159))]), \f]))}), ꧺ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=191), isCapability=true, isInterface=false, name=ꧺ, impl=[ᢪ], extend=[], fields={ࡕ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=226), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=226), mdf=IMM, isLifted=true, name=〲), name=ࡕ)}, methods={})}, main=true)
Program(classDeclarations={}, main=true)
Program(classDeclarations={ᝩ‮ᤡૂ઼ೊၳ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=147), isCapability=false, isInterface=true, name=ᝩ‮ᤡૂ઼ೊၳ, impl=[], extend=[], fields={}, methods={}), ꛔ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ꛔ, impl=[], extend=[], fields={}, methods={}), ꬪ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=24), isCapability=true, isInterface=false, name=ꬪ, impl=[], extend=[], fields={פּ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=45), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=45), mdf=READ, isLifted=false, name=ଲ⁠), name=פּ)}, methods={ၔᰭꩻ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=59), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=66), mdf=IMM, isLifted=true, name=ͻ), name=ၔᰭꩻ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=77), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=77), mdf=IMM, isLifted=false, name=ຄ‪), name=Ꭾﬞ)], expression=this), s=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=99), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=110), mdf=IMM, isLifted=true, name=ⶆ), name=s, args=[], expression=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=130), receiver=, isLifted=true, methodName=ݳ, arguments=[]))})}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=183), receiver=, isLifted=true, methodName=ୱ, arguments=[]))
Program(classDeclarations={}, main=)
Program(classDeclarations={ශ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ශ, impl=[נּ, Ά, ༀۨ, ᝮܑ, ₚ], extend=[], fields={ஔౣ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=42), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=42), mdf=IMM, isLifted=true, name=ൺ), name=ஔౣ)}, methods={}), ኬᤡꠤ꥓ৈ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=69), isCapability=true, isInterface=false, name=ኬᤡꠤ꥓ৈ, impl=[], extend=[], fields={ઽꢀ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=136), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=136), mdf=IMM, isLifted=true, name=ᥲ), name=ઽꢀ), i۱=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=106), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=106), mdf=MUT, isLifted=false, name=ૹ), name=i۱), ꚧୈ්=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=119), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=119), mdf=IMM, isLifted=true, name=Όᜲ3ꦿႚᝲ), name=ꚧୈ්), ﴲ༵=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=94), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=94), mdf=IMM, isLifted=true, name=ੴܑ), name=ﴲ༵), ˮ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=147), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=147), mdf=IMM, isLifted=true, name=ەึ), name=ˮ)}, methods={ן=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=158), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=165), mdf=IMM, isLifted=false, name=ວ), name=ן, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=172), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=172), mdf=IMM, isLifted=true, name=ᾼ), name=ꣻ)], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=185), head=ᛱ꧑‏, tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=196), name=ܞ⳯, args=[])))}), ᳫ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=56), isCapability=false, isInterface=false, name=ᳫ, impl=[], extend=[], fields={}, methods={})}, main=)
Program(classDeclarations={ﵠ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ﵠ, impl=[], extend=[], fields={}, methods={ꥼ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=17), mdf=IMM, isLifted=false, name=ᝎׇ᠌᮶), name=ꥼ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=31), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=31), mdf=IMM, isLifted=true, name=ኹ), name=々), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=41), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=41), mdf=IMM, isLifted=false, name=מּ), name=Ⱈೋ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=50), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=50), mdf=IMM, isLifted=true, name=ꘞ), name=အꫮ)], expression=)})}, main=0.5)
Program(classDeclarations={ౙ໌ᤣ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ౙ໌ᤣ, impl=[ￃූஂꧥ, ඟ꣤, Ἔ៝ꩌ], extend=[], fields={}, methods={}), ວ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=217), isCapability=true, isInterface=false, name=ວ, impl=[], extend=[], fields={}, methods={Ⳳ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=238), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=253), mdf=IMM, isLifted=true, name=ଐ), name=Ⳳ, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=267), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=274), name=ﹱ, args=[])))}), ꩯ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=54), isCapability=true, isInterface=false, name=ꩯ, impl=[Ꞙ, ౘৌ], extend=[], fields={}, methods={ͻۜ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=94), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=109), mdf=IMM, isLifted=false, name=$), name=ͻۜ, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=126), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=133), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=137), signalExpr=this), tail=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=177), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=156), signalExpr=\157), fieldName=Ὑꫬၧ༹꯷, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=185), name=ಀ਼ꨩᨛ, args=[])))))})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=304), mdf=IMM, name=ಽ, value=ꩺංꦻৣ, boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=321), signalExpr=ᜤ߰੮)))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=, tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=17))))
Program(classDeclarations={}, main=this)
Program(classDeclarations={ࠨ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ࠨ, impl=[], extend=[], fields={}, methods={Ⱕꪲ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=21), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=28), mdf=IMM, isLifted=true, name=ᚅ), name=Ⱕꪲ, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=43), signalExpr=this)), ￜ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=63), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=78), mdf=CAPSULE, isLifted=false, name=Ω), name=ￜ, args=[], expression=0.0)}), ꠸=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=213), isCapability=true, isInterface=false, name=꠸, impl=[], extend=[], fields={ⴛ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=234), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=234), mdf=IMM, isLifted=false, name=ዀ), name=ⴛ)}, methods={}), ꭿֿ‏ೖ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=111), isCapability=false, isInterface=true, name=ꭿֿ‏ೖ, impl=[], extend=[], fields={}, methods={}), ኊ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=245), isCapability=true, isInterface=false, name=ኊ, impl=[], extend=[], fields={}, methods={ኀ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=266), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=273), mdf=IMM, isLifted=false, name=ὁ꧘፝ᨛ), name=ኀ, args=[], expression=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=417), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=292), name=ᥛ, args=[ᮏ, Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=305), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=312), name=կ, args=[])), DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=343), receiver=2, isLifted=false, methodName=கܲ᪘, arguments=[]), Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=356), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=363), mdf=IMM, name=ແ, value=1, boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=380), signalExpr=187.0)))]), fieldName=ዮ))})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=434), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=441), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=448), name=ꧏ២, args=[]))))
Program(classDeclarations={}, main=10)
Program(classDeclarations={}, main=13.0)
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ଡ଼ୖ꤅, args=[]))
Program(classDeclarations={ۿ᳐=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ۿ᳐, impl=[], extend=[], fields={}, methods={})}, main=5)
Program(classDeclarations={}, main=6.751508330977696E21)
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=Ξ, value=this, boundTo=௹))
Program(classDeclarations={ꮝऻ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꮝऻ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=25), signalExpr=1))
Program(classDeclarations={}, main=)
Program(classDeclarations={ຍׁൗ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ຍׁൗ, impl=[], extend=[גּ෩, ף꫶ּ], fields={}, methods={}), ៛=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=96), isCapability=false, isInterface=false, name=៛, impl=[ܐ], extend=[], fields={ᚂ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=120), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=120), mdf=CAPSULE, isLifted=false, name=Åඃ), name=ᚂ)}, methods={ￍ⁬=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=220), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=227), mdf=CAPSULE, isLifted=false, name=ꡣ꘥ࠪ), name=ￍ⁬, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=245), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=245), mdf=IMM, isLifted=true, name=ⁱ), name=ꫴ)], expression=0.0), 鼣=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=180), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=191), mdf=CAPSULE, isLifted=false, name=ແ), name=鼣, args=[], expression=true), ഽ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=137), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=144), mdf=READ, isLifted=false, name=ૐ), name=ഽ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=156), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=156), mdf=IMM, isLifted=true, name=ϗ), name=ꫝ᷄)], expression=𞹝\b)}), ർ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=37), isCapability=false, isInterface=true, name=ർ, impl=[], extend=[ￃೀᝲ], fields={}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=277), name=יִ, args=[this]))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=600)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=11), signalExpr=true), tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=30), mdf=CAPSULE, name=ະ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=51), mdf=IMM, name=ຜ᪓ೊ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=60), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=67), signalExpr=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=94), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=74), signalExpr=false), fieldName=ꨝ३, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=99), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=116), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=106)), isLifted=false, methodName=ⷙ᪇, arguments=[]))))), boundTo=389), boundTo=this)))
Program(classDeclarations={ͼ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ͼ, impl=[ῃᜓ], extend=[], fields={}, methods={ℂ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=36), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=43), mdf=IMM, isLifted=false, name=ⳳ), name=ℂ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=50), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=50), mdf=IMM, isLifted=false, name=छࣝ), name=Βൗ)], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=63), signalExpr=43685.0))}), ൎ꯭=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=92), isCapability=false, isInterface=false, name=ൎ꯭, impl=[], extend=[], fields={ꣻ꠆݂᪇=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=103), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=103), mdf=CAPSULE, isLifted=false, name=ᬥै༡઼), name=ꣻ꠆݂᪇), ꧼ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=125), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=125), mdf=IMM, isLifted=false, name=Ԏ), name=ꧼ)}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=147), head=᚝, tail=this))
Program(classDeclarations={ꥠ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꥠ, impl=[], extend=[ꣳొ, ܐ], fields={}, methods={})}, main=3)
Program(classDeclarations={Բ҃ᤦᩞ࡚ਿ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=Բ҃ᤦᩞ࡚ਿ, impl=[], extend=[ࠤૻ], fields={}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=74), head=694.0, tail=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=99), receiver=゗, fieldName=ៜܲ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=104), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=108)), tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=118), head=this, tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=130), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=137), signalExpr=this)))))))
Program(classDeclarations={ꪢ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=69), isCapability=false, isInterface=false, name=ꪢ, impl=[], extend=[], fields={}, methods={ꬒ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=79), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=90), mdf=READ, isLifted=false, name=ゃ), name=ꬒ, args=[], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=107)))}), ה=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=121), isCapability=true, isInterface=false, name=ה, impl=[], extend=[], fields={ￜ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=142), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=142), mdf=CAPSULE, isLifted=false, name=ૹ), name=ￜ)}, methods={ඞ⵿=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=158), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=169), mdf=IMM, isLifted=false, name=ￎ), name=ඞ⵿, args=[], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=182)))}), Ꙛ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=Ꙛ, impl=[], extend=[], fields={だ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=10), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, isLifted=true, name=ᮯ), name=だ)}, methods={ᚫ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=20), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=27), mdf=IMM, isLifted=true, name=ጔ᥌२), name=ᚫ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=38), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=38), mdf=IMM, isLifted=true, name=ঽᯮ), name=Ꮑ)], expression=9506.0)})}, main=\5\f)
Program(classDeclarations={}, main=5)
Program(classDeclarations={먶=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=186), isCapability=true, isInterface=false, name=먶, impl=[], extend=[], fields={}, methods={ᱝೕ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=244), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=259), mdf=IMM, isLifted=true, name=Ⴧ), name=ᱝೕ, args=[], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=274))), ਫ਼=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=207), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=218), mdf=IMM, isLifted=false, name=﹩), name=ਫ਼, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=225), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=225), mdf=IMM, isLifted=true, name=ە), name=ថ)], expression=æ)}), ꬩ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=288), isCapability=true, isInterface=false, name=ꬩ, impl=[ڱ, ସ॓], extend=[], fields={}, methods={ᲆ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=328), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=335), mdf=IMM, isLifted=true, name=ᳵ), name=ᲆ, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=349), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=353), mdf=IMM, name=ૡ, value=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=372), receiver=0.0, isLifted=false, methodName=ㇳ, arguments=[Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=376), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=380), head=this, tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=392))), tail=)]), boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=421), mdf=IMM, name=ະ࡙, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=431), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=438), head=0, tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=447)))), boundTo=н)), tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=474), signalExpr=8)))}), වؗၟ፟ઃꪲௗ᳘၄ୂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=වؗၟ፟ઃꪲௗ᳘၄ୂ, impl=[], extend=[ꘝ॒], fields={}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=508)))
Program(classDeclarations={ࠨ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ࠨ, impl=[], extend=[], fields={}, methods={ꢨ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=51), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=63), mdf=IMM, isLifted=false, name=ᮯ), name=ꢨ, args=[], expression=144.03125), ݭ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=10), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=25), mdf=IMM, isLifted=true, name=ᭇ᜴᳭ັ), name=ݭ, args=[], expression=this)})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=101), mdf=READ, name=ᅑ, value=, boundTo=this))
Program(classDeclarations={}, main=1921)
Program(classDeclarations={}, main=)
Program(classDeclarations={ℶ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ℶ, impl=[], extend=[], fields={ደ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=10), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, isLifted=true, name=ఛꩌෲ), name=ደ), ˈꚟ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=30), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=30), mdf=IMM, isLifted=true, name=ㆱ), name=ˈꚟ), ኹ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=41), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=41), mdf=IMM, isLifted=false, name=ꛩ), name=ኹ), ꠎ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=22), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=22), mdf=IMM, isLifted=false, name=Ό), name=ꠎ)}, methods={})}, main=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=76), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=59), signalExpr=0), fieldName=নె਼೭၆༤, value=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=97), receiver=0.237, isLifted=false, methodName=ஹ⃥ꧥꪾ, arguments=[Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=104), head=ந, tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=113), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=117), signalExpr=\u8aAE\uud97a\uDDa1𑈿), tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=154))))])))
Program(classDeclarations={ˆࠗ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=31), isCapability=false, isInterface=false, name=ˆࠗ, impl=[], extend=[], fields={ᡲஂ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=55), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=55), mdf=IMM, isLifted=false, name=땴), name=ᡲஂ), òᯱ್=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=42), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=42), mdf=IMM, isLifted=true, name=ௐ᧒), name=òᯱ್)}, methods={ᠦᨙ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=166), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=173), mdf=IMM, isLifted=true, name=Ό), name=ᠦᨙ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=183), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=183), mdf=IMM, isLifted=true, name=ὒ), name=＿꙼ᨚꥊ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=196), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=196), mdf=MUT, isLifted=false, name=ⸯੁׇ), name=ጝ᭲ၣੁ)], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=216), name=ຄ൫ூଃׁ, args=[])), ৠꠥꫫູ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=101), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=112), mdf=IMM, isLifted=true, name=ⷔ၃), name=ৠꠥꫫູ, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=130), mdf=IMM, name=ຽঃꠋ᠍ᤤ߭ᬄ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=146)), boundTo=⶷)), ਫ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=64), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=79), mdf=IMM, isLifted=false, name=Ͷ9), name=ਫ, args=[], expression=49), ኵৣ꯭ᳳ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=236), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=248), mdf=IMM, isLifted=true, name=ᠳ), name=ኵৣ꯭ᳳ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=261), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=261), mdf=IMM, isLifted=true, name=ਸꤨ᭐ׂ३ꣁ), name=ࡓ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=276), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=276), mdf=IMM, isLifted=true, name=ঔꢁׇ), name=ఽ࠭େ)], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=293), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=300), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=307), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=311), head=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=352), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=315), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=322), mdf=IMM, name=⁀, value=this, boundTo=1)), fieldName=ຊ, value=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=367), receiver=false, isLifted=true, methodName=Ϳ૫, arguments=[Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=374)), this, , Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=398)), Expression.LetExpr(pos=ProgramNode.Position(line=1, col=408), mdf=IMM, name=Ὶেೖ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=419), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=423), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=427)), tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=437), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=441), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=448), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=455), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=462))))), tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=484), mdf=IMM, name=૱, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=493), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=500), signalExpr=ㄪූ)), boundTo=0.5))), tail=0.308), boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=558)))])), tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=575), mdf=MUT, name=ͽౖؗၱ, value=\f, boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=597), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=601), mdf=IMM, name=ꟷ, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=612), signalExpr=this), boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=631), signalExpr=true)), tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=652), signalExpr=false)))), tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=682), mdf=IMM, name=ఽ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=693), signalExpr=false), boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=713), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=720), mdf=IMM, name=ৎ, value=888.0, boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=743), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=750))))))))))}), ಐ႔=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=947), isCapability=false, isInterface=true, name=ಐ႔, impl=[], extend=[], fields={}, methods={}), সೌິ᠋ׂۢꪰૈ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=788), isCapability=false, isInterface=true, name=সೌິ᠋ׂۢꪰૈ, impl=[], extend=[], fields={}, methods={}), ኖ࡚=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=870), isCapability=false, isInterface=true, name=ኖ࡚, impl=[], extend=[], fields={}, methods={}), ౘ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=841), isCapability=false, isInterface=true, name=ౘ, impl=[], extend=[攔ை], fields={}, methods={}), ￍ්ૻ༤=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=982), isCapability=true, isInterface=false, name=ￍ්ૻ༤, impl=[ଲᢆ, ଚ, ꚕ, ֏], extend=[], fields={}, methods={៛ၠ১ۧ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=1033), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1040), mdf=READ, isLifted=false, name=ⲋ), name=៛ၠ১ۧ, args=[], expression=)}), ﬧૌꩃు=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ﬧૌꩃు, impl=[], extend=[ྈ], fields={}, methods={}), ῼ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=965), isCapability=false, isInterface=true, name=ῼ, impl=[], extend=[], fields={}, methods={}), ⱏ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=912), isCapability=false, isInterface=true, name=ⱏ, impl=[], extend=[ૡ゚゙໊, ῶ], fields={}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=1077)))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={}, main=this)
Program(classDeclarations={ᝆꢀ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ᝆꢀ, impl=[], extend=[], fields={}, methods={ຫฺੇ꪿ஂᢩೆ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=22), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=33), mdf=IMM, isLifted=false, name=ₑ), name=ຫฺੇ꪿ஂᢩೆ, args=[], expression=𑜰\001\uuuuuB88C\\), ჯັ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=355), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=370), mdf=IMM, isLifted=true, name=ὕꦂඃ഻୬), name=ჯັ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=384), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=384), mdf=IMM, isLifted=true, name=ዂ꛰؁), name=ٸꠋ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=397), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=397), mdf=IMM, isLifted=true, name=ቚ೮᷿), name=〸ᷞ)], expression=false), ۦ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=193), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=200), mdf=IMM, isLifted=true, name=ￋ), name=ۦ, args=[], expression=ೠ), ዀ၈=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=152), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=163), mdf=CAPSULE, isLifted=false, name=ৎ), name=ዀ၈, args=[], expression=this), ₽=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=274), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=281), mdf=READ, isLifted=false, name=ⶊஂ), name=₽, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=294), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=294), mdf=CAPSULE, isLifted=false, name=ー഼), name=ە߰ᨛ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=313), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=313), mdf=IMM, isLifted=true, name=טּা꫶ۛၟٙ), name=؋ႆ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=329), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=329), mdf=READ, isLifted=false, name=௹), name=ꘪ૽)], expression=this), ʹ꧲=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=75), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=86), mdf=IMM, isLifted=false, name=Ì᳐), name=ʹ꧲, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=95), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=95), mdf=IMM, isLifted=false, name=㢗꣐꧸ꠂ), name=ꩺ۸ᢩ꯬), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=113), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=113), mdf=IMM, isLifted=false, name=Ή꤉ੵ), name=ၜ꩔)], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=127), name=ფ, args=[0.0625])), ಯ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=220), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=231), mdf=IMM, isLifted=true, name=ਸ਼), name=ಯ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=240), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=240), mdf=IMM, isLifted=true, name=﹩੬ொ), name=ጒ꣧۰), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=254), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=254), mdf=IMM, isLifted=false, name=ଽ), name=த)], expression=this)})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=433)))
Program(classDeclarations={έົۨੵି၇ៀ᱀=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=έົۨੵି၇ៀ᱀, impl=[ᢟ, ﹲ, ՙ], extend=[], fields={ꛢ᳭߂=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=51), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=51), mdf=IMM, isLifted=true, name=ਯ), name=ꛢ᳭߂), ￥=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=39), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=39), mdf=IMM, isLifted=false, name=R), name=￥), ﬕ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=88), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=88), mdf=IMM, isLifted=true, name=གྷ઼᭗᭰), name=ﬕ), ꠄ᪳=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=63), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=63), mdf=IMM, isLifted=true, name=டᮨ), name=ꠄ᪳), ພᨘ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=75), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=75), mdf=IMM, isLifted=false, name=ஃ), name=ພᨘ)}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=111), signalExpr=true))
Program(classDeclarations={ລෳᩕۭ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ລෳᩕۭ, impl=[ଡ଼, ῳ, ꪊඃ߁], extend=[], fields={ꔱ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=49), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=49), mdf=IMM, isLifted=false, name=ᰆܑ), name=ꔱ), ວ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=58), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=58), mdf=IMM, isLifted=false, name=ল), name=ວ)}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=76)))
Program(classDeclarations={ᰖ්⃕￺ေ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=115), isCapability=false, isInterface=true, name=ᰖ්⃕￺ေ, impl=[], extend=[ຄ], fields={}, methods={}), ꪻ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꪻ, impl=[], extend=[], fields={}, methods={})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=154), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=161))))
Program(classDeclarations={〵=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=〵, impl=[], extend=[], fields={ꙁ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=21), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=21), mdf=IMM, isLifted=true, name=ੳ༷), name=ꙁ)}, methods={ଡ଼=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=32), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=44), mdf=IMM, isLifted=true, name=︴), name=ଡ଼, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=58), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=65), signalExpr=)))}), ຄ࿆꣦=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=90), isCapability=false, isInterface=false, name=ຄ࿆꣦, impl=[], extend=[], fields={}, methods={ꪱ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=130), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=141), mdf=IMM, isLifted=true, name=ಀ᠋), name=ꪱ, args=[], expression=ཪ), ପ؅᠋=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=102), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=109), mdf=IMM, isLifted=false, name=យ), name=ପ؅᠋, args=[], expression=)})}, main=this)
Program(classDeclarations={ℂׂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ℂׂ, impl=[], extend=[], fields={}, methods={}), ⸯ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=73), isCapability=true, isInterface=false, name=ⸯ, impl=[], extend=[], fields={}, methods={})}, main=)
Program(classDeclarations={ꪽ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꪽ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=80), signalExpr=960.0))
Program(classDeclarations={ἲꩃিੑ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ἲꩃিੑ, impl=[], extend=[ᝤ༹݂̐, ゝꚟᝲֿ, ஐॢ, ㆠૢেഃ, 〺᳭ꩃꢀ], fields={}, methods={}), יִ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=82), isCapability=false, isInterface=false, name=יִ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={Ὸᤷꢀ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=Ὸᤷꢀ, impl=[ٯੑ], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={ﭘୌ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ﭘୌ, impl=[], extend=[ᶺᝳ], fields={}, methods={})}, main=)
Program(classDeclarations={ਐ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ਐ, impl=[], extend=[], fields={}, methods={}), ࠋ഻〫࠙ޯ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=122), isCapability=false, isInterface=false, name=ࠋ഻〫࠙ޯ, impl=[], extend=[], fields={₽=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=136), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=136), mdf=IMM, isLifted=true, name=Ὢۛຼॖ‏ꠂ), name=₽)}, methods={}), ൎ５ᝳം=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=55), isCapability=false, isInterface=true, name=ൎ５ᝳം, impl=[], extend=[ఎௗ], fields={}, methods={}), ஞ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=87), isCapability=false, isInterface=false, name=ஞ, impl=[], extend=[], fields={ഌ᱉=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=97), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=97), mdf=IMM, isLifted=true, name=ঽ), name=ഌ᱉), ຊౖ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=108), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=108), mdf=IMM, isLifted=true, name=‿), name=ຊౖ)}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=161), name=ⴅꦁ࠙ଂృ, args=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=173), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=180), mdf=IMM, name=ઇ, value=18, boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=199), head=1.4609375, tail=0))), Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=232), name=হైે, args=[]), 209]))
Program(classDeclarations={}, main=0)
Program(classDeclarations={}, main=this)
Program(classDeclarations={￠=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=￠, impl=[], extend=[], fields={}, methods={}), ퟴ﻿ా=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=176), isCapability=true, isInterface=false, name=ퟴ﻿ా, impl=[ᾅ], extend=[], fields={ℚ͏=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=226), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=226), mdf=IMM, isLifted=false, name=ใ), name=ℚ͏), ዂ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=213), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=213), mdf=READ, isLifted=false, name=ท), name=ዂ)}, methods={}), ኣꥏ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=242), isCapability=false, isInterface=false, name=ኣꥏ, impl=[], extend=[], fields={ඓఁ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=253), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=253), mdf=IMM, isLifted=false, name=Ⴭ), name=ඓఁ), ៗૄ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=262), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=262), mdf=MUT, isLifted=false, name=ᳮ), name=ៗૄ)}, methods={ዀ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=275), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=282), mdf=IMM, isLifted=true, name=ߵ), name=ዀ, args=[], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=296))), ಈ؜=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=307), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=319), mdf=READ, isLifted=false, name=ຖ), name=ಈ؜, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=332), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=332), mdf=IMM, isLifted=true, name=ྌৣ), name=vႆ౮)], expression=true)})}, main=this)
Program(classDeclarations={}, main=ౠ)
Program(classDeclarations={ꚏ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ꚏ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=20), signalExpr=11))
Program(classDeclarations={ꟻ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꟻ, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=51), name=Ａ, args=[]))
Program(classDeclarations={Όࠫ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=Όࠫ, impl=[], extend=[], fields={}, methods={})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=25), signalExpr=true))
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=22), receiver=true, isLifted=false, methodName=ℇ੪ೈஂ, arguments=[])))
Program(classDeclarations={}, main=52224.0)
Program(classDeclarations={ዀ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=200), isCapability=false, isInterface=true, name=ዀ, impl=[], extend=[￥່, ꭞ], fields={}, methods={}), ළৃ০༷ꠂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ළৃ০༷ꠂ, impl=[], extend=[], fields={A=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=14), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=14), mdf=IMM, isLifted=true, name=Ⴙౢ༹ঃൗො), name=A)}, methods={}), ቝ꙯꧓=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=69), isCapability=false, isInterface=true, name=ቝ꙯꧓, impl=[], extend=[௹᷾], fields={}, methods={}), ப=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=32), isCapability=false, isInterface=true, name=ப, impl=[], extend=[⁔, ዾ, ᦔઁ], fields={}, methods={})}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=334), receiver=3, isLifted=true, methodName=ਤᮭ, arguments=[]))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ໄ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=14)), boundTo=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=34), receiver=true, fieldName=ﬡ1)))
Program(classDeclarations={}, main=)
Program(classDeclarations={Ꮶู=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=Ꮶู, impl=[], extend=[], fields={ೡ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=33), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=33), mdf=MUT, isLifted=false, name=ꡨਿ), name=ೡ), ꪱ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=80), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=80), mdf=IMM, isLifted=false, name=ହꚞৣ̦༵), name=ꪱ), ︳ٰ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=46), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=46), mdf=IMM, isLifted=true, name=ܐ), name=︳ٰ), Ⴧีං=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=57), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=57), mdf=IMM, isLifted=true, name=ウ), name=Ⴧีං), ប=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=92), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=92), mdf=IMM, isLifted=true, name=ꧭཱུᯧ⃓ᩣ), name=ប), ﭘ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=11), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=11), mdf=IMM, isLifted=true, name=ଥ), name=ﭘ), ꠈ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=21), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=21), mdf=MUT, isLifted=false, name=y), name=ꠈ), ㄸۧ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=69), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=69), mdf=IMM, isLifted=true, name=ᳯ), name=ㄸۧ)}, methods={})}, main=this)
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ⷞ꘦ꫫ, value=ꟻ, boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=23))))
Program(classDeclarations={}, main=࿍𝋴)
Program(classDeclarations={פּ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=פּ, impl=[], extend=[], fields={}, methods={})}, main=50000.0)
Program(classDeclarations={អ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=អ, impl=[], extend=[], fields={}, methods={}), ㆺ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=17), isCapability=false, isInterface=false, name=ㆺ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=3.0)
Program(classDeclarations={ⴒ꤂ྙ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=56), isCapability=false, isInterface=true, name=ⴒ꤂ྙ, impl=[], extend=[ଽ༙౭, ລ], fields={}, methods={}), ನ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=92), isCapability=false, isInterface=true, name=ನ, impl=[], extend=[ங], fields={}, methods={}), ਪ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=32), isCapability=true, isInterface=false, name=ਪ, impl=[], extend=[], fields={}, methods={}), ͼ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ͼ, impl=[], extend=[ΐ, ຊ], fields={}, methods={}), ଢ଼=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=182), isCapability=false, isInterface=true, name=ଢ଼, impl=[], extend=[ꩨ, ₪, ⁿ, ᳫஂంꯤೆ3, ௐோꩃꥈ๗, ೡ, ᣍ᪶࠙྇߇ೃ￺, ઍ, ꣻ], fields={}, methods={})}, main=ꩣ)
Program(classDeclarations={}, main=219.0)
Program(classDeclarations={གྷ꠆=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=གྷ꠆, impl=[], extend=[], fields={}, methods={}), ＿=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=14), isCapability=false, isInterface=true, name=＿, impl=[], extend=[ￄ, ࢸꩍూ߁᥌⵿, ਏ, 〹઼ே໙ঁ๖ั], fields={}, methods={})}, main=)
Program(classDeclarations={ರ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ರ, impl=[ꮉᝒ], extend=[], fields={}, methods={})}, main=ಽ)
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=\uucA41))
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=14))))
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=勵, args=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=15), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=22)))]))
Program(classDeclarations={Ꙓೢ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=Ꙓೢ, impl=[૱ୢ, ᮯ, סּ], extend=[], fields={ഭ෮᩻=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=34), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=34), mdf=IMM, isLifted=false, name=ᢪ), name=ഭ෮᩻)}, methods={ꚇ፞᭑=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=186), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=193), mdf=IMM, isLifted=false, name=ຢ), name=ꚇ፞᭑, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=202), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=202), mdf=IMM, isLifted=false, name=ະꚞࠥꠋ៑), name=ꪭ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=214), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=214), mdf=READ, isLifted=false, name=ꩀ), name=ࠚဵ)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=231), mdf=IMM, name=ꣵ႘્, value=, boundTo=ቱ)), ꗻ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=44), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=56), mdf=IMM, isLifted=false, name=ௐ࡚), name=ꗻ, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=73), mdf=IMM, name=ℇ, value=0, boundTo=5)), ᏼ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=256), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=263), mdf=IMM, isLifted=false, name=ঽ), name=ᏼ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=270), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=270), mdf=IMM, isLifted=true, name=ൎ), name=ލ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=280), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=280), mdf=IMM, isLifted=true, name=ℜ), name=ⴧ)], expression=𑲐ഒ\"), ઇꙸୗ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=103), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=114), mdf=IMM, isLifted=true, name=ꕾ܏̬), name=ઇꙸୗ, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=132), signalExpr=this)), ᦽ૽ꨭ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=152), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=163), mdf=IMM, isLifted=false, name=ᜐ), name=ᦽ૽ꨭ, args=[], expression=true)}), ᜇ੍̓=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=307), isCapability=true, isInterface=false, name=ᜇ੍̓, impl=[Ὕ], extend=[], fields={}, methods={ૡ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=952), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=959), mdf=CAPSULE, isLifted=false, name=ⷀ⃘), name=ૡ, args=[], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=980))), ﺒ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=1300), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1307), mdf=IMM, isLifted=true, name=အ), name=ﺒ, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=1321), head=true, tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=1333), signalExpr=this))), ꬢᝓ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=991), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1006), mdf=IMM, isLifted=true, name=ܫྩ), name=ꬢᝓ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1017), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1017), mdf=IMM, isLifted=false, name=ࢭ), name=ك), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1025), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1025), mdf=IMM, isLifted=true, name=ఽ), name=ப), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1035), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1035), mdf=IMM, isLifted=true, name=ℂ), name=ਫ਼), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1045), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1045), mdf=IMM, isLifted=false, name=ຟ੪), name=ഽ)], expression=3875), µ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=1072), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1079), mdf=CAPSULE, isLifted=false, name=ࠂ), name=µ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1094), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1094), mdf=CAPSULE, isLifted=false, name=ਲ), name=ⶻ઼྆ꧥ࡚)], expression=this), ῂ༘=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=1182), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1193), mdf=IMM, isLifted=false, name=ꤻઁ), name=ῂ༘, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=1207), mdf=READ, name=ᜑ, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=1220), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=1227), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=1234), mdf=IMM, name=ຍ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=1243)), boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=1253), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=1257)), tail=169)))), boundTo=this)), ഏꢻꩍ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=1357), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1368), mdf=IMM, isLifted=true, name=ⶴ), name=ഏꢻꩍ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1379), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1379), mdf=IMM, isLifted=true, name=૱), name=ꤝ௪⃡), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1391), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1391), mdf=IMM, isLifted=true, name=ၥᰤੈ), name=ቝ۳〬)], expression=this), ॐꦽ઼=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=1417), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1432), mdf=IMM, isLifted=false, name=ᇖ), name=ॐꦽ઼, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1441), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1441), mdf=IMM, isLifted=true, name=ኽ︦), name=ᬔ︃), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1453), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1453), mdf=IMM, isLifted=false, name=ꦎ), name=ச), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1461), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1461), mdf=CAPSULE, isLifted=false, name=₷), name=ℂஂ꯬ॢ)], expression=1), ᦑൊ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=344), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=351), mdf=READ, isLifted=false, name=ຈ), name=ᦑൊ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=364), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=364), mdf=IMM, isLifted=false, name=ࡧ), name=ퟁ)], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=375), head=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=386), receiver=1, isLifted=false, methodName=Ν, arguments=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=390), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=397), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=401), name=ﾬ, args=[Expression.LetExpr(pos=ProgramNode.Position(line=1, col=409), mdf=IMM, name=ౠ಼, value=\3, boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=438), receiver=true, isLifted=false, methodName=Ᾱ, arguments=[Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=442), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=449)))]))]), tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=475), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=479), mdf=CAPSULE, name=々￻, value=7, boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=502), mdf=IMM, name=ኝ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=513), head=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=649), receiver=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=634), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=517), name=ꘫਃౢ, args=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=527), name=ಭឺ, args=[]), Expression.LetExpr(pos=ProgramNode.Position(line=1, col=543), mdf=IMM, name=ⲽ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=553), mdf=IMM, name=ෂ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=563), mdf=IMM, name=מּ, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=571), signalExpr=this), boundTo=0.0), boundTo=0.0609283447265625), boundTo=\5)]), isLifted=true, methodName=ꬣിු, arguments=[]), isLifted=true, methodName=ᢂ, arguments=[Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=655), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=662), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=666), signalExpr=), tail=3584.0)), Expression.TailExpr(pos=ProgramNode.Position(line=1, col=706), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=713), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=720), signalExpr=))), Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=745), signalExpr=5.0)]), tail=1.125), boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=783), mdf=IMM, name=ഽౕᤧ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=795), mdf=IMM, name=ᠡ, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=804), name=ኲൄ્, args=[]), boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=821))), boundTo=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=841), receiver=this, fieldName=ၒ, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=845), name=ᢉ, args=[]))))), tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=868), signalExpr=)))), Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=897), head=true, tail=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=918), receiver=false, fieldName=ｃ, value=this))]), tail=)), ﬠः=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=1126), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1137), mdf=IMM, isLifted=true, name=ꪨ), name=ﬠः, args=[], expression=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=1174), receiver=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=1168), receiver=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=1159), receiver=0.0, fieldName=ᳰ゚༵॓), fieldName=ᢥ), fieldName=ຍౌ))})}, main=0.0)
Program(classDeclarations={}, main=)
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=14), signalExpr=ᏽꣅ)))
Program(classDeclarations={ⁱ༾ె઼︮ா᪄=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ⁱ༾ె઼︮ா᪄, impl=[], extend=[], fields={ຢ়=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=16), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=16), mdf=MUT, isLifted=false, name=ൖ), name=ຢ়)}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=39), name=ॐ, args=[Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=47), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=51), head=\n, tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=63), signalExpr=false)), tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=87), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=94), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=101), mdf=IMM, name=Ὂ⃯ꢁ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=112), signalExpr=ᪧᰵৗ), boundTo=false)))), Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=153), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=157)), tail=false), Expression.TailExpr(pos=ProgramNode.Position(line=1, col=180), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=187))), true]))
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=350.0))
Program(classDeclarations={ᬆ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=44), isCapability=false, isInterface=false, name=ᬆ, impl=[Ᾱᮦ, ᥲ, ᦲ, ꬥ, ₖၞ], extend=[], fields={}, methods={ͱ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=118), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=130), mdf=IMM, isLifted=true, name=ℸ॔ⷠ⁢ັ), name=ͱ, args=[], expression=5.0E80), ꫥ୩઼=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=86), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=93), mdf=IMM, isLifted=true, name=$), name=ꫥ୩઼, args=[], expression=true)}), ቖ⃡=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=160), isCapability=false, isInterface=false, name=ቖ⃡, impl=[], extend=[], fields={ऽෲׁ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=171), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=171), mdf=IMM, isLifted=false, name=ᾢ), name=ऽෲׁ), ㄼ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=181), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=181), mdf=IMM, isLifted=true, name=า꘨ു), name=ㄼ)}, methods={}), ꜞ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ꜞ, impl=[ꪱ], extend=[], fields={}, methods={}), ｯ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=27), isCapability=false, isInterface=true, name=ｯ, impl=[], extend=[], fields={}, methods={})}, main=\b)
Program(classDeclarations={ይ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ይ, impl=[], extend=[ᬒ, ஞஂॣ], fields={}, methods={})}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=79), receiver=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=72), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=41), head=this, tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=53), name=ꪻ, args=[])), fieldName=ඳܰ), isLifted=false, methodName=₽࠭, arguments=[]))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ࡨࣕ, value=𐍻, boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=27), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=31)), tail=1.0468599035683593E287)))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=true, tail=ῥ))
Program(classDeclarations={ⴰ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=31), isCapability=false, isInterface=true, name=ⴰ, impl=[], extend=[ℎ, ग़], fields={}, methods={}), ⶵ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ⶵ, impl=[], extend=[ະੋᤢೊ], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=93), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=100), signalExpr=)))
Program(classDeclarations={ˑﬞ࡛ׄ９৬=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ˑﬞ࡛ׄ９৬, impl=[ၥ⵿ૣຸ], extend=[], fields={ઐ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=32), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=32), mdf=IMM, isLifted=false, name=ℤ), name=ઐ)}, methods={ⁿ༹꣖=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=40), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=52), mdf=IMM, isLifted=false, name=ኯ), name=ⁿ༹꣖, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=61), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=61), mdf=MUT, isLifted=false, name=ゕ), name=ﭖು)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=77), mdf=IMM, name=ꥆ̼, value=true, boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=95), name=ªׂ, args=[Expression.LetExpr(pos=ProgramNode.Position(line=1, col=104), mdf=READ, name=ᮮೣ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=121), mdf=IMM, name=ὖ, value=ힰ, boundTo=𑗞), boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=143), mdf=IMM, name=ℨ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=153)), boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=163), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=167), mdf=IMM, name=ᳮ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=175), mdf=READ, name=ಆ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=188), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=192), mdf=IMM, name=ੴ, value=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=233), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=202), name=ៗ, args=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=210), signalExpr=0)]), isLifted=false, methodName=ᤌ, arguments=[ଽ゚ᢩੑ, 40.0]), boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=261), name=ᴇ, args=[])), tail=224.0), boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=292), name=Ꞥׁ᭫, args=[])), boundTo=false), tail=0))), 13.375, Έ]))), অۚ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=1056), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1063), mdf=IMM, isLifted=true, name=த), name=অۚ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1073), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1073), mdf=CAPSULE, isLifted=false, name=ꥥ), name=ಏࠫ᱆)], expression=), ｅ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=481), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=496), mdf=IMM, isLifted=false, name=ῲ), name=ｅ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=503), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=503), mdf=IMM, isLifted=false, name=ঽ), name=ꫲꦂᤰ᭓), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=518), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=518), mdf=IMM, isLifted=true, name=ੲ෭), name=ꝑ؅), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=530), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=530), mdf=IMM, isLifted=true, name=Ᾰிో), name=ﬔ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=542), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=542), mdf=READ, isLifted=false, name=ﻬೢ), name=ᜇޯᩘ)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=561), mdf=CAPSULE, name=ՙ, value=416.0, boundTo=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=610), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=588), signalExpr=5506.0), fieldName=ﬃ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=614), mdf=IMM, name=ꡯ, value=\uccd3𐎟🧋🪃, boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=639)))))), ℌꯦી꘧ꤨ᳒ᜓ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=861), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=873), mdf=IMM, isLifted=true, name=Ⳳ), name=ℌꯦી꘧ꤨ᳒ᜓ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=888), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=888), mdf=IMM, isLifted=true, name=＿), name=ꬔ਼), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=899), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=899), mdf=IMM, isLifted=false, name=ⷞ), name=؋ۨଁ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=913), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=913), mdf=MUT, isLifted=false, name=ප), name=ؠ)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=928), mdf=IMM, name=ˬ᷃, value=this, boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=945), signalExpr=false))), ₶=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=744), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=755), mdf=MUT, isLifted=false, name=ퟗ), name=₶, args=[], expression=), ၦ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=817), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=829), mdf=IMM, isLifted=true, name=ண⵿), name=ၦ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=844), name=ৡ⃡, args=[])), ㄧ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=778), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=790), mdf=IMM, isLifted=false, name=＄), name=ㄧ, args=[], expression=𑊎\udF10𐄇), ㆥັᮀ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=436), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=443), mdf=IMM, isLifted=true, name=Ⰳྕୗ), name=ㆥັᮀ, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=461), signalExpr=#અ)), ꬤ઼=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=656), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=663), mdf=IMM, isLifted=false, name=ꪗ), name=ꬤ઼, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=680), mdf=IMM, name=ங়ࣨ, value=12, boundTo=true)), ଢ଼=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=363), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=378), mdf=CAPSULE, isLifted=false, name=ਇ), name=ଢ଼, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=393), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=393), mdf=IMM, isLifted=true, name=ྋꩍ), name=Ѐึၗ᳦࠭), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=408), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=408), mdf=MUT, isLifted=false, name=ॐꩃ), name=ߍꠧ؜ੑ)], expression=this), ᬰ້໊ႆི᪵ࠣ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=968), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=975), mdf=READ, isLifted=false, name=ᩅ᭲), name=ᬰ້໊ႆི᪵ࠣ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=994), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=994), mdf=IMM, isLifted=true, name=Ⱊ), name=ਫ਼᪻), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1005), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1005), mdf=IMM, isLifted=false, name=ힴ), name=ලംၣ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1015), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1015), mdf=IMM, isLifted=false, name=Ø), name=ː8), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1024), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1024), mdf=IMM, isLifted=false, name=ᝰ), name=ቝ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=1032), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=1032), mdf=IMM, isLifted=false, name=ꩂౖ), name=ൕ߰⃡ິ)], expression=this), ꧏ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=711), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=718), mdf=READ, isLifted=false, name=ਏ), name=ꧏ, args=[], expression=this)})}, main=15)
Program(classDeclarations={ⶳ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ⶳ, impl=[], extend=[], fields={}, methods={ᛰ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=17), mdf=CAPSULE, isLifted=false, name=ಕిั﻿ۧ), name=ᛰ, args=[], expression=אָܑᝒ᪉), ߴ̃᠓=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=50), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=61), mdf=IMM, isLifted=true, name=እౌ), name=ߴ̃᠓, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=73), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=73), mdf=IMM, isLifted=true, name=ᛶ­ᷙ), name=ఒ)], expression=this)})}, main=2186)
Program(classDeclarations={ﹲ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ﹲ, impl=[], extend=[], fields={ﷷၭ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=21), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=21), mdf=IMM, isLifted=false, name=ᢄ), name=ﷷၭ)}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=40), signalExpr=false))
Program(classDeclarations={}, main=false)
Program(classDeclarations={ᚅ༹࠙=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=36), isCapability=false, isInterface=false, name=ᚅ༹࠙, impl=[ଌ], extend=[], fields={ບ꤀ᢆઁ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=62), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=62), mdf=IMM, isLifted=false, name=ࠤ࡛ꪾ૽), name=ບ꤀ᢆઁ), ྉ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=76), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=76), mdf=IMM, isLifted=false, name=ᮮᜳྜྷᯩ), name=ྉ)}, methods={ﬦ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=87), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=94), mdf=MUT, isLifted=false, name=ᎂ), name=ﬦ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=105), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=105), mdf=IMM, isLifted=false, name=ↀꫫ), name=כּଂ)], expression=ၡ﻿ꦶꠋ), ㆊ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=127), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=134), mdf=CAPSULE, isLifted=false, name=ॳ), name=ㆊ, args=[], expression=0)}), ᝊ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ᝊ, impl=[], extend=[], fields={}, methods={})}, main=true)
Program(classDeclarations={ὒ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=108), isCapability=false, isInterface=false, name=ὒ, impl=[ヽ], extend=[], fields={}, methods={}), ច=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ច, impl=[], extend=[ኴ, ۿೕ], fields={}, methods={}), ꬅ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=68), isCapability=false, isInterface=true, name=ꬅ, impl=[], extend=[], fields={}, methods={}), ꮣౣൗ܏ꪰ‪=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=477), isCapability=true, isInterface=false, name=ꮣౣൗ܏ꪰ‪, impl=[ਉ], extend=[], fields={}, methods={}), ﹩=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=407), isCapability=true, isInterface=false, name=﹩, impl=[ᮈ], extend=[], fields={}, methods={ⁿੑ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=442), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=453), mdf=IMM, isLifted=false, name=֏ॣ), name=ⁿੑ, args=[], expression=)}), ྋ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=135), isCapability=false, isInterface=true, name=ྋ, impl=[], extend=[ŧ഼༷ೈۡඃ], fields={}, methods={})}, main=ྋ⃩)
Program(classDeclarations={ᝰ૪ઃ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=252), isCapability=false, isInterface=true, name=ᝰ૪ઃ, impl=[], extend=[], fields={}, methods={}), ਝ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ਝ, impl=[], extend=[], fields={ሽ៩ꪸे=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=10), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, isLifted=true, name=ງ), name=ሽ៩ꪸे)}, methods={ꢓ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=211), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=218), mdf=IMM, isLifted=true, name=ᛴ), name=ꢓ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=227), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=227), mdf=IMM, isLifted=true, name=ㇰ), name=Ͳ️)], expression=19), ￗୁ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=78), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=85), mdf=IMM, isLifted=true, name=סּ‭), name=ￗୁ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=96), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=96), mdf=IMM, isLifted=true, name=ࢭୋٰ༹), name=ៗꩼ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=110), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=110), mdf=IMM, isLifted=true, name=ᳵ), name=ꪱ୭)], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=124), signalExpr=false)), ᶖꙸ꫁ঃ߆ౣ़ꣃ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=23), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=34), mdf=IMM, isLifted=true, name=꠸ꩍ), name=ᶖꙸ꫁ঃ߆ౣ़ꣃ, args=[], expression=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=61), receiver=ꕣ, fieldName=ᜀ, value=0.0)), ڨ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=145), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=152), mdf=IMM, isLifted=true, name=ຈ), name=ڨ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=161), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=161), mdf=IMM, isLifted=true, name=າ), name=ⅎᰯ６ࠦື), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=175), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=175), mdf=IMM, isLifted=false, name=ၰ), name=ͷ꧶)], expression=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=195), receiver=this, fieldName=ꝯ, value=176))})}, main=ໜ)
Program(classDeclarations={ꠙ᳭=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=192), isCapability=false, isInterface=true, name=ꠙ᳭, impl=[], extend=[], fields={}, methods={}), ଲ〫፝ઃ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=76), isCapability=true, isInterface=false, name=ଲ〫፝ઃ, impl=[], extend=[], fields={ヤົ꘡ੋે߰=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=100), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=100), mdf=IMM, isLifted=false, name=ａ), name=ヤົ꘡ੋે߰)}, methods={ఽ༷=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=113), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=124), mdf=IMM, isLifted=true, name=ঞ), name=ఽ༷, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=134), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=134), mdf=IMM, isLifted=false, name=ۿ), name=ᚄ߈), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=143), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=143), mdf=CAPSULE, isLifted=false, name=µ‎ྎ᠑), name=ﰙꩽၲ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=164), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=164), mdf=IMM, isLifted=true, name=ꔯ), name=ጧൗ)], expression=54272)}), ᰢ௨҆=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=210), isCapability=true, isInterface=false, name=ᰢ௨҆, impl=[], extend=[], fields={ῷ៝=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=244), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=244), mdf=IMM, isLifted=true, name=ⴭ), name=ῷ៝), ꬃૢ߯ꚟ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=264), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=264), mdf=IMM, isLifted=false, name=וּᝲ), name=ꬃૢ߯ꚟ), ኻ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=255), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=255), mdf=IMM, isLifted=false, name=ౙ᩼), name=ኻ), ៗී=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=233), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=233), mdf=IMM, isLifted=true, name=૱), name=ៗී)}, methods={ᦝ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=280), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=287), mdf=IMM, isLifted=true, name=க), name=ᦝ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=296), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=296), mdf=MUT, isLifted=false, name=ˡ), name=ޱꠦ૭), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=310), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=310), mdf=IMM, isLifted=false, name=$ௌ⁢), name=נּꪳ)], expression=400)}), ቝ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ቝ, impl=[], extend=[ᜱ꫁, ª, ຍ༵, ὲ], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=354), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=361), name=ۻ઼ࠖ࠙ྖٰٰ, args=[Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=375), head=false, tail=true)])))
Program(classDeclarations={ၮ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ၮ, impl=[], extend=[], fields={}, methods={})}, main=0.546)
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=13), receiver=ᾟଃ, fieldName=$))
Program(classDeclarations={ଉ઼=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=159), isCapability=false, isInterface=true, name=ଉ઼, impl=[], extend=[], fields={}, methods={}), ൠꢀ3=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ൠꢀ3, impl=[], extend=[], fields={}, methods={}), ۋঁ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=128), isCapability=false, isInterface=true, name=ۋঁ, impl=[], extend=[ෆૻ܏], fields={}, methods={})}, main=31)
Program(classDeclarations={}, main=\')
Program(classDeclarations={ఊి=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=562), isCapability=false, isInterface=false, name=ఊి, impl=[], extend=[], fields={}, methods={}), ྋং=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ྋং, impl=[], extend=[], fields={}, methods={ᚲ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=22), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=34), mdf=IMM, isLifted=true, name=⁔), name=ᚲ, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=48), mdf=IMM, name=ꣻ, value=false, boundTo=\')), ͼ〪꘧೦=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=154), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=161), mdf=IMM, isLifted=true, name=ⅉ᯦ොׄ), name=ͼ〪꘧೦, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=176), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=176), mdf=IMM, isLifted=false, name=ఏ९), name=ऽ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=185), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=185), mdf=IMM, isLifted=true, name=ᮞ〪), name=ꬕ)], expression=77040.0), Ωꧥ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=79), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=86), mdf=MUT, isLifted=false, name=ಜ), name=Ωꧥ, args=[], expression=false), ऽ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=113), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=128), mdf=IMM, isLifted=false, name=ᳮ), name=ऽ, args=[], expression=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=146), receiver=0, fieldName=ଦၘ))}), ᪧ꤫=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=214), isCapability=false, isInterface=false, name=ᪧ꤫, impl=[ͳ], extend=[], fields={}, methods={ﻆ઼=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=363), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=375), mdf=IMM, isLifted=true, name=ⳬ), name=ﻆ઼, args=[], expression=false), Ꙛ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=292), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=299), mdf=CAPSULE, isLifted=false, name=ￇॣၭૢ), name=Ꙛ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=322), name=דּ, args=[DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=351), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=330), name=ቌ, args=[0]), fieldName=ൎ)])), ꣻ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=400), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=412), mdf=IMM, isLifted=true, name=ச), name=ꣻ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=421), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=421), mdf=IMM, isLifted=true, name=ᇮ꩕፝), name=য), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=433), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=433), mdf=IMM, isLifted=false, name=ۿ઼ֿࠦᰦ), name=ꚑ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=445), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=445), mdf=IMM, isLifted=true, name=ՙ), name=ꣽ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=455), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=455), mdf=IMM, isLifted=true, name=ଋং), name=Ʇ꠆ᝲܑঁ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=470), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=470), mdf=IMM, isLifted=true, name=Ʇᝒ), name=ࡉ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=481), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=481), mdf=IMM, isLifted=false, name=ବꤩꪷ), name=E), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=495), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=495), mdf=IMM, isLifted=true, name=ਸ਼઼), name=ᢦ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=506), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=506), mdf=MUT, isLifted=false, name=יִၠ), name=ﺖ౬), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=520), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=520), mdf=IMM, isLifted=false, name=మ), name=ໜֿ᳴), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=530), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=530), mdf=IMM, isLifted=false, name=ຽ︅༷), name=ၜᯫꦼެၢ)], expression=0.234375), 䪷಼=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=239), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=254), mdf=MUT, isLifted=false, name=ꩅ), name=䪷಼, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=271), signalExpr=1))})}, main=ﻣ)
Program(classDeclarations={ꜚ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꜚ, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=true)
Program(classDeclarations={ꠟ᜴᳭༙߯꫁=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꠟ᜴᳭༙߯꫁, impl=[], extend=[], fields={}, methods={})}, main=70)
Program(classDeclarations={লຼ๖ᜒ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=লຼ๖ᜒ, impl=[], extend=[ὕၘ, ৲, Ὓ, ﬀ], fields={}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=51), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=55), mdf=IMM, name=ܐ, value=this, boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=74))), tail=0.0))
Program(classDeclarations={}, main=0)
Program(classDeclarations={ٯ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ٯ, impl=[ᙵ], extend=[], fields={ઽ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=35), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=35), mdf=IMM, isLifted=false, name=Ù᮹᱆), name=ઽ)}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=55), signalExpr=this))
Program(classDeclarations={}, main=\145)
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ꞔ᷼, value=଱﩮\t, boundTo=this))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=సૣ᱃ܑ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=18), head=true, tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=30), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=37), signalExpr=15.0))), boundTo=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=76), receiver=, fieldName=Ἔ)))
Program(classDeclarations={⁔=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=46), isCapability=false, isInterface=true, name=⁔, impl=[], extend=[ὀ, ꮕੋ྇⳯, ꬪ߰, ꘪ⃑ၳؙ, ꞓ, ࠨꦸၤ, ૱], fields={}, methods={}), ℕ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ℕ, impl=[], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=114), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=118), signalExpr=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=152), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=125), signalExpr=7382.0), fieldName=ꣶၱ, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=157), name=ௐ, args=[]))), tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=178), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=185), signalExpr=0))))
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ト, args=[]))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=READ, name=ΐ༵, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=20), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=27), name=ℸឹ, args=[39, Expression.LetExpr(pos=ProgramNode.Position(line=1, col=44), mdf=IMM, name=ֆ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=56), mdf=IMM, name=Ͷ᠒, value=3.0E-79, boundTo=ºં꠆), boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=279), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=88), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=95), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=102), mdf=IMM, name=_ಿ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=115), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=119), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=123)), tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=133), head=false, tail=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=155), receiver=false, fieldName=ᢄ༹ꪰ⳱ᩝ, value=8))), tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=184), signalExpr=ղ៤੯)), boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=206), mdf=IMM, name=ꣽஂ, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=218), signalExpr=𞺋), boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=236), head=0, tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=248), name=ວ, args=[])))))), isLifted=false, methodName=ﵗ, arguments=[Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=283))])), Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=300), name=ꜟ, args=[0.75]), ])), boundTo=true))
Program(classDeclarations={ߺ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ߺ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=24), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=31), name=µೣ, args=[])))
Program(classDeclarations={ᱤ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ᱤ, impl=[], extend=[ഋ಼્ꪾั], fields={}, methods={}), ꤿܑׄⷽୣ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=51), isCapability=false, isInterface=true, name=ꤿܑׄⷽୣ, impl=[], extend=[Ⱒ଼ۣૅ], fields={}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=172)))
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ⷒ, args=[100.0, this, ]))
Program(classDeclarations={Ͷ៑=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=66), isCapability=true, isInterface=false, name=Ͷ៑, impl=[], extend=[], fields={}, methods={Ά=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=88), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=95), mdf=IMM, isLifted=false, name=ఉ), name=Ά, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=102), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=102), mdf=IMM, isLifted=false, name=ਲॕ), name=ￒ­), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=112), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=112), mdf=IMM, isLifted=true, name=Ά༙ᮂ٩ۖ௫), name=ⅱృᜓ)], expression=true), લు=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=141), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=148), mdf=IMM, isLifted=true, name=ଽೕׁ), name=લు, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=160), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=160), mdf=IMM, isLifted=true, name=ॐ්ꠂ), name=ॲ࡚), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=173), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=173), mdf=IMM, isLifted=true, name=ࢴ᪲౨), name=ຢ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=185), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=185), mdf=IMM, isLifted=true, name=ⁿ), name=ዉ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=195), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=195), mdf=READ, isLifted=false, name=ኾ᥈), name=ዮॊ⁧), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=211), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=211), mdf=IMM, isLifted=false, name=Ῐ), name=ⸯ)], expression=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=232), receiver=0, isLifted=true, methodName=ᵱ, arguments=[]))}), み=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=み, impl=[], extend=[], fields={ⷛੑ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=53), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=53), mdf=IMM, isLifted=false, name=煮ᮂ), name=ⷛੑ), Ç­෨໌=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=18), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=18), mdf=IMM, isLifted=false, name=ᥘ᧑༿҃), name=Ç­෨໌), ۦ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=10), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, isLifted=false, name=ꬂ), name=ۦ), ῆၱ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=42), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=42), mdf=IMM, isLifted=true, name=ៗ), name=ῆၱ), Ɦ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=32), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=32), mdf=IMM, isLifted=true, name=Ⴧ), name=Ɦ)}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=256), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=263), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=267), mdf=IMM, name=﹍٨ꪳ, value=ೞం, boundTo=true), tail=this)))
Program(classDeclarations={ⅈ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=55), isCapability=false, isInterface=true, name=ⅈ, impl=[], extend=[Ｚൄ], fields={}, methods={}), ﬔ༷=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ﬔ༷, impl=[], extend=[], fields={}, methods={}), ℾ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=84), isCapability=false, isInterface=true, name=ℾ, impl=[], extend=[], fields={}, methods={})}, main=)
Program(classDeclarations={יִ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=יִ, impl=[], extend=[], fields={}, methods={}), ਸٜ꫁ୌ﻿=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=44), isCapability=true, isInterface=false, name=ਸٜ꫁ୌ﻿, impl=[〸], extend=[], fields={ຜ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=83), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=83), mdf=IMM, isLifted=false, name=ଲ), name=ຜ)}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=101), mdf=IMM, name=ꣽ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=110), mdf=IMM, name=ᤖ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=117)), boundTo=0.5), boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=141))))
Program(classDeclarations={ᡇ᠎５࡚=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ᡇ᠎５࡚, impl=[], extend=[ᇩ, יִੇੵꪳ, ਙၱਁ], fields={}, methods={})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=51), signalExpr=101))
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=14), name=ꕱ, args=[])))
Program(classDeclarations={ͱ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=173), isCapability=false, isInterface=true, name=ͱ, impl=[], extend=[], fields={}, methods={}), ℨ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=233), isCapability=false, isInterface=false, name=ℨ, impl=[ꩺ, ᾌ], extend=[], fields={}, methods={ꫂ௩ᰪࠩે༹ༀ꠆꫁ী=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=261), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=273), mdf=IMM, isLifted=true, name=ৼ), name=ꫂ௩ᰪࠩે༹ༀ꠆꫁ী, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=291), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=291), mdf=IMM, isLifted=false, name=ྋ), name=ꩭ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=299), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=299), mdf=IMM, isLifted=true, name=Ⴧꧥ), name=ﻳຼં), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=312), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=312), mdf=IMM, isLifted=true, name=ㅝ্), name=Ἕ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=323), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=323), mdf=IMM, isLifted=false, name=Ά), name=ந), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=331), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=331), mdf=IMM, isLifted=false, name=ۓ꣦), name=ªೢ)], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=344), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=348)), tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=358), name=ࡢ᳭, args=[])))}), ⷔ꣰=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ⷔ꣰, impl=[], extend=[], fields={}, methods={ⶐ゙᭰=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=77), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=84), mdf=CAPSULE, isLifted=false, name=ᎉۭෛ), name=ⶐ゙᭰, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=103), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=103), mdf=CAPSULE, isLifted=false, name=ቑ), name=ਏ)], expression=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=162), receiver=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=151), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=122), name=ஃ, args=[true, true]), isLifted=false, methodName=Ԏ, arguments=[]), fieldName=ᥴި)), ﬀࣰ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=11), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=23), mdf=IMM, isLifted=true, name=︳7), name=ﬀࣰ, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=39), head=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=52), receiver=2, fieldName=￠⳯), tail=389))})}, main=this)
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=0.021484375)
Program(classDeclarations={}, main=18)
Program(classDeclarations={ᭅ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=105), isCapability=true, isInterface=false, name=ᭅ, impl=[], extend=[], fields={ጔుࠪ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=152), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=152), mdf=IMM, isLifted=false, name=ﷂᝒ), name=ጔుࠪ), ၰൈ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=138), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=138), mdf=IMM, isLifted=true, name=እၢ〭၅), name=ၰൈ), ম=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=126), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=126), mdf=IMM, isLifted=false, name=ꫝ), name=ম)}, methods={}), Ν=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=Ν, impl=[ⶮ, ꛘ, ⵯ], extend=[], fields={}, methods={ۺ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=32), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=39), mdf=IMM, isLifted=true, name=ㇾ਼؜ꠋೢ), name=ۺ, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=57), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=64), head=true, tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=76), signalExpr=))))})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=173), signalExpr=ꩂ〪))
Program(classDeclarations={ⳳ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ⳳ, impl=[གᯬ᳛], extend=[], fields={ￖ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=56), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=56), mdf=MUT, isLifted=false, name=ℤೣ), name=ￖ), ᙻੵᜳ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=37), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=37), mdf=CAPSULE, isLifted=false, name=ཌྷᨘ), name=ᙻੵᜳ)}, methods={})}, main=)
Program(classDeclarations={Х=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=Х, impl=[], extend=[], fields={}, methods={}), ༀ೦=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=43), isCapability=false, isInterface=false, name=ༀ೦, impl=[], extend=[], fields={µ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=54), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=54), mdf=READ, isLifted=false, name=ꬋႍ⃜), name=µ), ᨊꚞ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=69), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=69), mdf=IMM, isLifted=true, name=ᱬ), name=ᨊꚞ)}, methods={ಎ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=80), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=92), mdf=CAPSULE, isLifted=false, name=ꥢ), name=ಎ, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=112), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=116), name=ꭢ, args=[]), tail=true))})}, main=false)
Program(classDeclarations={}, main=)
Program(classDeclarations={}, main=)
Program(classDeclarations={Ὕຼ᱓=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=47), isCapability=true, isInterface=false, name=Ὕຼ᱓, impl=[], extend=[], fields={ᦩ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=120), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=120), mdf=READ, isLifted=false, name=ౙ), name=ᦩ), ˋ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=70), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=70), mdf=CAPSULE, isLifted=false, name=ײꩃ᪅࿆), name=ˋ), ⴭ્ে=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=98), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=98), mdf=IMM, isLifted=true, name=ޱ්), name=ⴭ્ে), ᳮ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=89), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=89), mdf=IMM, isLifted=false, name=촄⵿), name=ᳮ), ᰏ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=111), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=111), mdf=IMM, isLifted=false, name=ৎ­), name=ᰏ)}, methods={Ⳬෲ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=133), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=145), mdf=IMM, isLifted=false, name=ઽੵॎ), name=Ⳬෲ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=155), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=155), mdf=IMM, isLifted=true, name=ও⵿ۨꠣᤲۚ೦), name=ゞꠂ੧᧒), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=174), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=174), mdf=IMM, isLifted=false, name=ܡ᠙ॣٰ), name=ⅈ)], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=192), signalExpr=)), ェ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=304), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=319), mdf=IMM, isLifted=true, name=ৰੑ), name=ェ, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=334), head=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=346), receiver=this, isLifted=true, methodName=ᥱ, arguments=[300.0, 609, Expression.TailExpr(pos=ProgramNode.Position(line=1, col=371), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=378), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=382), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=389), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=396), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=400), name=ⷞ, args=[Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=408), head=, tail=๜᪊)]), tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=435), name=ஃౣ, args=[])))), tail=4.9794186826571916E181)), Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=484), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=491)))]), tail=\f\uF19c)), ꘪ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=249), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=256), mdf=IMM, isLifted=false, name=ﹲ), name=ꘪ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=263), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=263), mdf=MUT, isLifted=false, name=ᾡ၁ั಼᪴), name=ය)], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=282), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=289)))), ⳍ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=210), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=222), mdf=IMM, isLifted=true, name=ױꩽᝳؚ), name=ⳍ, args=[], expression=false)}), Ἓ᪈ྃ︅=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=532), isCapability=false, isInterface=false, name=Ἓ᪈ྃ︅, impl=[], extend=[], fields={}, methods={}), ੳｔ໘ꥇ଼᳸ꪰᨙ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ੳｔ໘ꥇ଼᳸ꪰᨙ, impl=[ⳳ৮゚], extend=[], fields={ܨ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=33), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=33), mdf=IMM, isLifted=true, name=ꪱꪰ), name=ܨ)}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=555), name=ᴎ᭗⵿ၴ, args=[]))
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=14), name=ඹ֧, args=[])))
Program(classDeclarations={ῑऺ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ῑऺ, impl=[], extend=[ￅౄ಼, ල่], fields={}, methods={})}, main=false)
Program(classDeclarations={}, main=8)
Program(classDeclarations={}, main=true)
Program(classDeclarations={ٮ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ٮ, impl=[], extend=[සٰ], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=64), signalExpr=))
Program(classDeclarations={}, main=0.625)
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={ቝ்=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ቝ், impl=[], extend=[], fields={ⷐ￺ၢ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=33), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=33), mdf=IMM, isLifted=true, name=ݪ୬ൣꦽ), name=ⷐ￺ၢ), ਇ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=22), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=22), mdf=IMM, isLifted=true, name=ﹱ꧲), name=ਇ)}, methods={})}, main=)
Program(classDeclarations={ꬋැꪾ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ꬋැꪾ, impl=[], extend=[ﬓꦁ, Ὑ, ῲ, ൔ], fields={}, methods={})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=319), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=326))))
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=14), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=21)))))
Program(classDeclarations={ୡ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ୡ, impl=[], extend=[ꪶଃ, ྋூۨৃ੍꘧, Ꙡ], fields={}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=78), name=ㇰ, args=[]))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=248, tail=true))
Program(classDeclarations={ዅꯣ1=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ዅꯣ1, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=26), name=ᥢ, args=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=34), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=51), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=41)), isLifted=true, methodName=ည, arguments=[])), Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=68), head=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=72), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=79), mdf=IMM, name=ކၠઁᮂ, value=, boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=101)))), tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=117), name=ৡੂੑ, args=[])), Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=138), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=142), name=ఈ, args=[]), tail=this), Expression.TailExpr(pos=ProgramNode.Position(line=1, col=169), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=176), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=183), name=හ༢, args=[]))), Expression.TailExpr(pos=ProgramNode.Position(line=1, col=207), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=214), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=221))))]))
Program(classDeclarations={য=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=য, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=96), mdf=IMM, name=ኙࣦື, value=ꫂ, boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=113), head=false, tail=this)))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ι, value=this, boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=26))))
Program(classDeclarations={}, main=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=15), receiver=true, fieldName=ຽௗॢᮂ્, value=this))
Program(classDeclarations={Ⴛ᷾=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=Ⴛ᷾, impl=[ꧢ], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=0))
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=14), mdf=IMM, name=אַ, value=this, boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=31), mdf=READ, name=ᭋ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=43), mdf=IMM, name=Þ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=52)), boundTo=1), boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=71), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=78), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=82), mdf=MUT, name=ᥳ੍, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=94), mdf=IMM, name=ଢ଼, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=101), name=ኀ, args=[]), boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=116), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=120), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=127))), tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=141), signalExpr=this))), boundTo=this), tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=176))))))))
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ꦙ๘ఀ҆⁩ྗۧ, args=[ܣ, DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=35), receiver=false, isLifted=true, methodName=ၹୖ, arguments=[false]), Expression.LetExpr(pos=ProgramNode.Position(line=1, col=56), mdf=IMM, name=ඹఀ, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=67), signalExpr=false), boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=87), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=91)), tail=400044))]))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=11), head=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=29), receiver=2, fieldName=ଲഀৄꯧ꯭ႇ), tail=0), tail=this))
Program(classDeclarations={Ϳ꧀=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=Ϳ꧀, impl=[], extend=[], fields={}, methods={}), ꠃ⁫᱄ൈ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=29), isCapability=false, isInterface=true, name=ꠃ⁫᱄ൈ, impl=[], extend=[], fields={}, methods={}), ࠁ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=99), isCapability=false, isInterface=false, name=ࠁ, impl=[ⷆ, Άᬃ᪑ᬂਃ‪ූੋ, ￕ͖, ﭣ], extend=[], fields={}, methods={ஈ꣒ೈ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=284), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=291), mdf=IMM, isLifted=true, name=ὖ), name=ஈ꣒ೈ, args=[], expression=this), ᪧ༨=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=238), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=250), mdf=IMM, isLifted=false, name=ꣽໍෳ), name=ᪧ༨, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=260), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=260), mdf=IMM, isLifted=false, name=ꤵ), name=ங)], expression=this), ຫ༡=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=197), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=204), mdf=IMM, isLifted=false, name=ⁿꙷ), name=ຫ༡, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=218), signalExpr=this)), ኌ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=143), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=154), mdf=CAPSULE, isLifted=false, name=ૹ), name=ኌ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=169), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=169), mdf=IMM, isLifted=true, name=ஒ), name=ଢ଼ᬀ)], expression=22.5)}), ءઁꩃ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=14), isCapability=false, isInterface=false, name=ءઁꩃ, impl=[], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=326), head=ⷘ༢, tail=0))
Program(classDeclarations={}, main=true)
Program(classDeclarations={ⶤ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=208), isCapability=true, isInterface=false, name=ⶤ, impl=[], extend=[], fields={}, methods={}), ༀ᳭=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=32), isCapability=false, isInterface=true, name=ༀ᳭, impl=[], extend=[], fields={}, methods={}), ￍິૣ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=175), isCapability=false, isInterface=true, name=ￍິૣ, impl=[], extend=[థᮁ‮۟], fields={}, methods={}), ᝏ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ᝏ, impl=[], extend=[ቒ, ଭ], fields={}, methods={}), ͺ࡙=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=86), isCapability=false, isInterface=true, name=ͺ࡙, impl=[], extend=[], fields={}, methods={})}, main=6)
Program(classDeclarations={}, main=ῄౢ)
Program(classDeclarations={}, main=14.3125)
Program(classDeclarations={ஜ᤻꫁=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=13), isCapability=true, isInterface=false, name=ஜ᤻꫁, impl=[ⵂ, ҷ], extend=[], fields={⁀=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=86), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=86), mdf=IMM, isLifted=false, name=ㅎ৯), name=⁀), ᩃ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=75), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=75), mdf=IMM, isLifted=false, name=ቓꙶ᪗ׇ), name=ᩃ), ৼ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=64), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=64), mdf=IMM, isLifted=true, name=ὓ႙), name=ৼ), ℿ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=54), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=54), mdf=IMM, isLifted=true, name=ꪽ), name=ℿ)}, methods={ᴑᤲ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=95), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=106), mdf=CAPSULE, isLifted=false, name=ⴲ꤫ෳᝓ), name=ᴑᤲ, args=[], expression=this), ꩺ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=139), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=154), mdf=MUT, isLifted=false, name=Ἑᤨ), name=ꩺ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=166), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=166), mdf=IMM, isLifted=true, name=ୠ઼), name=L), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=177), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=177), mdf=IMM, isLifted=true, name=ᎏᝓᝲ), name=ᜉ)], expression=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=202), receiver=0, isLifted=false, methodName=ꤷِ᪽, arguments=[]))}), پ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=پ, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=226), name=ⶏୣ, args=[]))
Program(classDeclarations={}, main=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=15), receiver=true, fieldName=Ῑ, value=404))
Program(classDeclarations={ຄ၇=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=96), isCapability=false, isInterface=false, name=ຄ၇, impl=[ﹷ᧓, ＄, ὔ൯଼], extend=[], fields={}, methods={ࢰ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=132), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=139), mdf=IMM, isLifted=false, name=Ά᷇), name=ࢰ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=147), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=147), mdf=IMM, isLifted=false, name=ₔ), name=ল), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=155), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=155), mdf=IMM, isLifted=false, name=ℤૼৃ), name=ꪼ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=165), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=165), mdf=IMM, isLifted=false, name=ߑ), name=ⵖ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=177), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=177), mdf=READ, isLifted=false, name=Ꭰࠪ๖), name=ە), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=192), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=192), mdf=IMM, isLifted=true, name=ꭡ), name=ᳶ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=202), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=202), mdf=IMM, isLifted=true, name=ꪜ), name=ꫀෑۤ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=214), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=214), mdf=IMM, isLifted=false, name=ੜ؃), name=ℼ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=223), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=223), mdf=IMM, isLifted=true, name=ꧢ), name=ퟔ)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=236), mdf=IMM, name=Ἑၴၢꦂັ؜, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=252)), boundTo=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=262)))), ꤥ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=275), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=282), mdf=MUT, isLifted=false, name=ල༾), name=ꤥ, args=[], expression=true)}), ল᩿=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ল᩿, impl=[], extend=[], fields={}, methods={ใ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=11), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=18), mdf=IMM, isLifted=false, name=ힿો), name=ใ, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=31), signalExpr=true)), ῇ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=51), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=58), mdf=IMM, isLifted=true, name=ⸯ), name=ῇ, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=72), signalExpr=false))})}, main=7.0E-4)
Program(classDeclarations={}, main=)
Program(classDeclarations={}, main=false)
Program(classDeclarations={ଲꩌ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=15), isCapability=false, isInterface=true, name=ଲꩌ, impl=[], extend=[], fields={}, methods={}), ᚏ‌ꪲ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ᚏ‌ꪲ, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=77), name=￠︇ᩕੁ, args=[7, this, Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=102), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=106), name=ᆆࣻ꫁, args=[Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=116)), 1.7788713781538284E170]), tail=500.0)]))
Program(classDeclarations={ಀ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ಀ, impl=[], extend=[], fields={ಀ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=21), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=21), mdf=IMM, isLifted=false, name=ॠ), name=ಀ), ⰸ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=10), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, isLifted=true, name=ઑୈ), name=ⰸ)}, methods={ꗙ്=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=29), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=44), mdf=IMM, isLifted=true, name=ໆೢॊ), name=ꗙ്, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=56), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=56), mdf=IMM, isLifted=true, name=₨ꩌੌ), name=ࢽ)], expression=ᇵ), 卣᠑᳝=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=200), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=207), mdf=IMM, isLifted=true, name=ꫝᰭ), name=卣᠑᳝, args=[], expression=0), ﰈৗꠋꤨ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=77), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=88), mdf=IMM, isLifted=true, name=ⴧ), name=ﰈৗꠋꤨ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=100), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=100), mdf=IMM, isLifted=true, name=ꧩೣၢ), name=ਜ਼꣮۱), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=114), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=114), mdf=IMM, isLifted=true, name=老҃), name=ㄇ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=125), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=125), mdf=IMM, isLifted=true, name=ᦉ൦), name=ߵၨ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=137), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=137), mdf=IMM, isLifted=false, name=ᢝ), name=ဿ)], expression=ଐຶ), ﵼᬃٗ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=159), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=166), mdf=IMM, isLifted=true, name=ٮꠋ), name=ﵼᬃٗ, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=183), signalExpr=סּ))})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=243), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=250), mdf=IMM, name=ဿ߫, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=263), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=267), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=271), mdf=IMM, name=ᦊᮂ꣐, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=286), head=, tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=296))), boundTo=340), tail=Ήᬃ), tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=332), signalExpr=)), boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=353), mdf=IMM, name=ՙׁ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=363), mdf=IMM, name=ᨵ, value=15, boundTo=this), boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=400), receiver=৲ۧۙ, isLifted=false, methodName=ퟄ, arguments=[])))))
Program(classDeclarations={}, main=)
Program(classDeclarations={}, main=this)
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=14), mdf=IMM, name=㪚꣐ꯧ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=25)), boundTo=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=35), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=39), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=43), mdf=IMM, name=ቘ, value=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=63), receiver=this, fieldName=শ, value=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=67), mdf=IMM, name=ᤜ, value=㫧, boundTo=true)), boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=113), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=97), name=ச᠐, args=[]), isLifted=true, methodName=ਏ, arguments=[1.0, 0.875])), tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=143))), tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=157), signalExpr=)))))
Program(classDeclarations={ဿ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ဿ, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=24)))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={}, main=)
Program(classDeclarations={}, main=5)
Program(classDeclarations={︴ၠᨘ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=92), isCapability=false, isInterface=false, name=︴ၠᨘ, impl=[બ], extend=[], fields={Ⴧ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=118), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=118), mdf=CAPSULE, isLifted=false, name=ષେۧೈ᧒), name=Ⴧ)}, methods={ਵ‪ົᤤ଼᭙=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=138), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=145), mdf=IMM, isLifted=true, name=Ꞵ), name=ਵ‪ົᤤ଼᭙, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=164), signalExpr=0.0))}), ᜠ‎ේၤஂುิ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ᜠ‎ේၤஂುิ, impl=[], extend=[ഐ឵ꦂꥍ꣄ೣ, ສ᩺, ㆣ], fields={}, methods={})}, main=true)
Program(classDeclarations={ଽ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ଽ, impl=[], extend=[], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=74), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=81), head=0.0, tail=ௐꯣ)))
Program(classDeclarations={Ӏৢၲ‮܏=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=Ӏৢၲ‮܏, impl=[], extend=[], fields={}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=94), name=ઽৌ, args=[177.0]))
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=))
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=12), receiver=ઝ, fieldName=ලੀ))
Program(classDeclarations={ᳬ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ᳬ, impl=[], extend=[יִঃ়], fields={}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=37), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=44), name=ￜ, args=[])))
Program(classDeclarations={ࢥ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ࢥ, impl=[ᜪ֡ᬂ], extend=[], fields={}, methods={ޱ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=37), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=48), mdf=IMM, isLifted=true, name=ૹ), name=ޱ, args=[], expression=1), ঐᢅೢ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=69), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=80), mdf=IMM, isLifted=false, name=ꞙ), name=ঐᢅೢ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=93), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=93), mdf=IMM, isLifted=true, name=ၺꪰ), name=ףּܻ҃), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=106), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=106), mdf=IMM, isLifted=true, name=ỽ), name=ⶭ)], expression=50)}), ਆ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=129), isCapability=true, isInterface=false, name=ਆ, impl=[], extend=[], fields={}, methods={}), ꫛ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=153), isCapability=false, isInterface=false, name=ꫛ, impl=[], extend=[], fields={}, methods={})}, main=0)
Program(classDeclarations={ꠇੵ᷾꘦=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ꠇੵ᷾꘦, impl=[], extend=[], fields={}, methods={}), ਛ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=27), isCapability=false, isInterface=true, name=ਛ, impl=[], extend=[ຖ꪿ႃ, ຊ, ﰍ1ౌ߀ེ॑ு҇, ቛ, հ, અ, ๅ], fields={}, methods={})}, main=1)
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=شܑ, args=[\f]))
Program(classDeclarations={ℤ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ℤ, impl=[], extend=[], fields={ষꪳᩕ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=50), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=50), mdf=IMM, isLifted=true, name=㽗⁫ꙴ), name=ষꪳᩕ), ῑ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=10), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=10), mdf=MUT, isLifted=false, name=ೡ), name=ῑ), ۯ᭔̴=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=64), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=64), mdf=IMM, isLifted=true, name=朗ଁୈꪰ), name=ۯ᭔̴), ᳵ꙯ꢀܑ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=90), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=90), mdf=IMM, isLifted=false, name=ٯ), name=ᳵ꙯ꢀܑ), ᛶ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=38), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=38), mdf=IMM, isLifted=true, name=qꥊ๎), name=ᛶ), ວ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=79), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=79), mdf=IMM, isLifted=true, name=ମั), name=ວ), ヿ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=22), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=22), mdf=CAPSULE, isLifted=false, name=ቘ), name=ヿ), ℑੵ᪺େ៣=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=101), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=101), mdf=IMM, isLifted=true, name=ය), name=ℑੵ᪺େ៣)}, methods={ॐ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=115), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=127), mdf=IMM, isLifted=true, name=ਖ᳭௮ை), name=ॐ, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=144), signalExpr=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=222), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=151), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=158), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=165), mdf=IMM, name=ꞧ, value=true, boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=182), mdf=IMM, name=ᢧꦂௗ, value=90.0, boundTo=this)))), fieldName=ￂ))), ⴭੑ᳭=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=233), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=245), mdf=IMM, isLifted=true, name=ຈႆ), name=ⴭੑ᳭, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=262), signalExpr=true)), ۅ߉ൗ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=282), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=289), mdf=READ, isLifted=false, name=$​꛱), name=ۅ߉ൗ, args=[], expression=56028)})}, main=false)
Program(classDeclarations={ຍ፝=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=41), isCapability=false, isInterface=true, name=ຍ፝, impl=[], extend=[ঢ༹꘧, ꬑ], fields={}, methods={}), ࡥꚞꚟୢ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ࡥꚞꚟୢ, impl=[], extend=[ﶤு, ە⳱, ཁ], fields={}, methods={})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=254), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=261), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=268), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=272)), tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=282), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=289), name=ⴭ, args=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=297), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=304), signalExpr=)), DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=331), receiver=ኌ᱉, fieldName=ꣻᬶ)]))))))
Program(classDeclarations={}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=14), mdf=IMM, name=ໆ, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=24), name=ꪹ゙, args=[0.0]), boundTo=5.1062874466998867E216)))
Program(classDeclarations={؋ꩼ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=؋ꩼ, impl=[ᝍꪲଃ​ꥋଃ꣘ై᱔ؔ, ಣᢅ, ⶼ, ߺ᱘࿆܏༵ී], extend=[], fields={}, methods={})}, main=false)
Program(classDeclarations={ຫ­ၙৌ᱖៣꙯ꚞᝦ﻿=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ຫ­ၙৌ᱖៣꙯ꚞᝦ﻿, impl=[], extend=[], fields={}, methods={})}, main=1.1503324881278773E290)
Program(classDeclarations={ၡীꦃ࣫᪕=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ၡীꦃ࣫᪕, impl=[], extend=[ℇᤲ়ꙷꠋ༷], fields={}, methods={}), ՙ೮=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=124), isCapability=false, isInterface=false, name=ՙ೮, impl=[], extend=[], fields={ૠ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=146), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=146), mdf=IMM, isLifted=true, name=_), name=ૠ), ۻ၈=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=135), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=135), mdf=IMM, isLifted=false, name=ꫀ੨ܶ), name=ۻ၈)}, methods={ண=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=156), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=167), mdf=IMM, isLifted=true, name=ਅ), name=ண, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=176), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=176), mdf=IMM, isLifted=false, name=ܐ), name=ዃ᳜࡙), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=186), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=186), mdf=READ, isLifted=false, name=נּ), name=ⷅ៝ે), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=201), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=201), mdf=IMM, isLifted=false, name=ﹺꩌੵ᥇), name=ᳯੇ)], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=216))), ￎ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=227), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=234), mdf=IMM, isLifted=false, name=ͽ), name=ￎ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=245), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=245), mdf=IMM, isLifted=false, name=¢), name=ῄ)], expression=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=262), receiver=, fieldName=々, value=4))}), က໔ᩗ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=279), isCapability=true, isInterface=false, name=က໔ᩗ, impl=[ͷ⁬, ຄ, ኼ೦ඃ﻿ౢऻ౯], extend=[], fields={ℑ୫=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=331), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=331), mdf=READ, isLifted=false, name=ﺣ), name=ℑ୫)}, methods={Ὑ꧔ੵ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=453), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=460), mdf=IMM, isLifted=true, name=ࢷ), name=Ὑ꧔ੵ, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=476), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=483)))), ꮤ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=498), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=513), mdf=IMM, isLifted=true, name=ࢸ), name=ꮤ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=522), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=522), mdf=IMM, isLifted=true, name=ℊಾ༹ಂૂ၆), name=ºᤦ)], expression=3.19), ℛ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=345), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=352), mdf=MUT, isLifted=false, name=瓩ීᢆ), name=ℛ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=365), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=365), mdf=IMM, isLifted=false, name=￥ූ៦ׇꚞऻ⁪ܑৗ), name=ℨ)], expression=ᔘႆ), এ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=391), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=398), mdf=IMM, isLifted=true, name=ℂ߃), name=এ, args=[], expression=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=419), receiver=, isLifted=true, methodName=ྋ, arguments=[DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=433), receiver=this, fieldName=ႎ, value=\6)])), Ὀꪰꩍ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=556), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=563), mdf=IMM, isLifted=true, name=ቑֿ), name=Ὀꪰꩍ, args=[], expression=ᪧూ᷼)})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=598), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=605))))
Program(classDeclarations={ݖ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ݖ, impl=[ஐ], extend=[], fields={ⴭ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=52), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=52), mdf=IMM, isLifted=false, name=ߏ), name=ⴭ), ꫀႃ᠎⃡ႉ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=35), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=35), mdf=IMM, isLifted=true, name=ᱠ゚ᷪꦿ), name=ꫀႃ᠎⃡ႉ)}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=70), head=, tail=0.1201171875))
Program(classDeclarations={}, main=ᧃꫮ꯬᱓़)
Program(classDeclarations={}, main=)
Program(classDeclarations={ଢ଼=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ଢ଼, impl=[], extend=[ↇ], fields={}, methods={})}, main=this)
Program(classDeclarations={ঐ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=30), isCapability=false, isInterface=true, name=ঐ, impl=[], extend=[ᮯ‫ᩞꙻ], fields={}, methods={}), Όꢁ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=Όꢁ, impl=[], extend=[ῃၳ], fields={}, methods={})}, main=this)
Program(classDeclarations={ⸯ۟=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ⸯ۟, impl=[], extend=[ஙၣ], fields={}, methods={})}, main=3)
Program(classDeclarations={ஏᝒੱ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ஏᝒੱ, impl=[], extend=[], fields={ﶶෳ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=23), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=23), mdf=IMM, isLifted=true, name=ᝮ), name=ﶶෳ)}, methods={}), Ẩ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=37), isCapability=false, isInterface=false, name=Ẩ, impl=[￠, ປ፞꫁], extend=[], fields={ᳱྏᩫ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=67), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=67), mdf=IMM, isLifted=true, name=㰕︯), name=ᳱྏᩫ)}, methods={})}, main=205.0)
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ຊ᩿, value=31, boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=26), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=33), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=40))))))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=11), mdf=IMM, name=Ὕꨳੑၱె, value=7380, boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=38), signalExpr=this)), tail=0))
Program(classDeclarations={ⁿ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ⁿ, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=122), receiver=this, fieldName=ῃ, value=11))
Program(classDeclarations={ୡᰴ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ୡᰴ, impl=[], extend=[ৠू༷ꪰ, סּꠥ], fields={}, methods={}), ͺ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=37), isCapability=false, isInterface=false, name=ͺ, impl=[], extend=[], fields={}, methods={})}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=57), mdf=IMM, name=Ὓ, value=940.0, boundTo=this))
Program(classDeclarations={}, main=0.0020427703857421875)
Program(classDeclarations={}, main=ର)
Program(classDeclarations={ɠ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=71), isCapability=false, isInterface=false, name=ɠ, impl=[], extend=[], fields={}, methods={ᳪ᳐ၖ᮲᠎=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=240), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=247), mdf=IMM, isLifted=true, name=డ), name=ᳪ᳐ၖ᮲᠎, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=265), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=272), mdf=IMM, name=￦ꫯ, value=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=292), receiver=this, fieldName=ஏ꩐෮︨ᝒං, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=301), signalExpr=8)), boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=320), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=327), signalExpr=ꤼꪰꙹূꧥ଼ం))))), Ⴧ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=81), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=96), mdf=IMM, isLifted=true, name=ⵯ), name=Ⴧ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=105), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=105), mdf=IMM, isLifted=false, name=ㇶ), name=ⅎ)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=120), mdf=IMM, name=ꧏꫫਃெ, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=134), signalExpr=0.0), boundTo=\udCc4\\𞣗\uub261\b𐮒)), ᣀꧥ෫=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=183), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=198), mdf=IMM, isLifted=true, name=ণ), name=ᣀꧥ෫, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=209), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=209), mdf=IMM, isLifted=false, name=ꤝູ), name=Ⱇ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=218), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=218), mdf=IMM, isLifted=true, name=৻ਁୁ), name=ஃੑ)], expression=t)}), ਇ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ਇ, impl=[ﬀ, 㝣, ℨ꙯ऺ, ៗ໕ি], extend=[], fields={ຊീ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=51), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=51), mdf=CAPSULE, isLifted=false, name=µ), name=ຊീ)}, methods={})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=370), name=ర, args=[]))
Program(classDeclarations={ቓഃৢ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ቓഃৢ, impl=[], extend=[], fields={}, methods={})}, main=false)
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ળ༘, value=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=25), receiver=this, isLifted=true, methodName=ℭ, arguments=[]), boundTo=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=44), receiver=ꬆၞ, fieldName=ㆢ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=48), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=55), mdf=READ, name=ઽ಼꠆, value=\b\b\5🠐𝪠, boundTo=\364)))))
Program(classDeclarations={}, main=8.0E33)
Program(classDeclarations={ຽ４=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ຽ４, impl=[], extend=[], fields={}, methods={ୱ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=162), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=169), mdf=IMM, isLifted=true, name=ޱ७ྲྀ᳭), name=ୱ, args=[], expression=), ￔޯೣ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=22), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=29), mdf=IMM, isLifted=false, name=ஆ), name=ￔޯೣ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=47), name=ឝ, args=[])), ܣ꙽=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=63), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=78), mdf=READ, isLifted=false, name=ﶷੇॣ᳒߳ꩌె), name=ܣ꙽, args=[], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=102))), ಭ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=113), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=120), mdf=IMM, isLifted=true, name=ວ), name=ಭ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=134), name=懲⃡, args=[96, ]))})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=203), signalExpr=true))
Program(classDeclarations={ଳைౖ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ଳைౖ, impl=[], extend=[], fields={}, methods={})}, main=῵)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=11), head=666999.75, tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=31), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=35), signalExpr=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=42), mdf=IMM, name=ᜂ؂ౣ, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=52), signalExpr=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=64), receiver=ꣴ, fieldName=ˬ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=68)))), boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=84), name=Ꜽ, args=[ൡ, Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=97))]))), tail=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=118)))), tail=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=147), receiver=5.90625, isLifted=false, methodName=ઇ֫꧑, arguments=[])))
Program(classDeclarations={}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=63), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=22), receiver=true, isLifted=true, methodName=ஜܑܷ࠙꧖, arguments=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=32), name=ಽ۟⳯ූ꠆ಁ᯲᳭, args=[])])), fieldName=ழ))
Program(classDeclarations={ჳ઼ᰩ઼=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=128), isCapability=false, isInterface=false, name=ჳ઼ᰩ઼, impl=[ⸯ], extend=[], fields={}, methods={}), ဿ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ဿ, impl=[கꪾ, ⷝꫂෲ, ਹ], extend=[], fields={ၦ۵=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=46), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=46), mdf=IMM, isLifted=true, name=褐), name=ၦ۵), ꩮࠗ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=68), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=68), mdf=IMM, isLifted=true, name=ⅎ), name=ꩮࠗ), ߴֳ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=57), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=57), mdf=IMM, isLifted=false, name=¤‍ꧥ), name=ߴֳ)}, methods={ė=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=79), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=86), mdf=IMM, isLifted=true, name=ⳳ), name=ė, args=[], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=100), head=true, tail=this))})}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=313), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=165), name=ງ, args=[Expression.LetExpr(pos=ProgramNode.Position(line=1, col=173), mdf=IMM, name=ߺ᠐়⵿᭭, value=ﮜ, boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=193), mdf=IMM, name=ￓ, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=210)), boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=220), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=227), head=, tail=38)))), Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=258), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=265))), Expression.LetExpr(pos=ProgramNode.Position(line=1, col=279), mdf=IMM, name=b්ૄᮂ, value=false, boundTo=3.0)]), isLifted=false, methodName=וั້⁫௬, arguments=[]))
Program(classDeclarations={}, main=ᜇ꫁ꯥࠧၟாࣲ)
Program(classDeclarations={ဿ൧﻿﻿̱๘࠙=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=176), isCapability=false, isInterface=true, name=ဿ൧﻿﻿̱๘࠙, impl=[], extend=[], fields={}, methods={}), ᨢ᠗ꚟ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ᨢ᠗ꚟ, impl=[], extend=[], fields={}, methods={ꪵ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=87), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=98), mdf=IMM, isLifted=false, name=Δ), name=ꪵ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=105), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=105), mdf=IMM, isLifted=false, name=ᾶ), name=ࡂ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=117), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=117), mdf=IMM, isLifted=true, name=ㇻꠂ߂ᢆ), name=ⴧ۷6໕ᢩ)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=137), mdf=IMM, name=ⴧิੈં᳒྆ൣ፟, value=this, boundTo=false)), ⶺ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=23), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=30), mdf=READ, isLifted=false, name=ᮏௗᤵᩜ), name=ⶺ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=45), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=45), mdf=IMM, isLifted=true, name=ר), name=շ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=55), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=55), mdf=IMM, isLifted=true, name=ꣶ), name=Ⅎ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=65), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=65), mdf=IMM, isLifted=false, name=ଝ೫ᜒꥍ), name=₰ঁⷠ)], expression=ὖ)})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=206), head=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=210), name=ⴙ൧٣, args=[0]), tail=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=300), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=234), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=238), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=245))), tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=259), mdf=CAPSULE, name=ၡൗੁ᠘, value=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=279)), boundTo=ۦ)), isLifted=false, methodName=ˢ, arguments=[])))
Program(classDeclarations={}, main=9.7173635072E10)
Program(classDeclarations={}, main=)
Program(classDeclarations={ኰ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=180), isCapability=true, isInterface=false, name=ኰ, impl=[ꬭ഻], extend=[], fields={യోഃ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=216), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=216), mdf=CAPSULE, isLifted=false, name=ᴝ゙), name=യోഃ)}, methods={Ͷ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=235), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=250), mdf=IMM, isLifted=false, name=꠸؅০ೆ়), name=Ͷ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=261), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=261), mdf=CAPSULE, isLifted=false, name=क़ᢅॏ࡙), name=பྍꧥ᮵ᬺ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=284), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=284), mdf=IMM, isLifted=false, name=ล), name=ቘ៝)], expression=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=309), receiver=false, fieldName=ணૌ, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=314), name=ꧪ〯᭯, args=[7, , 322.0, this, Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=355), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=362), name=ⅿੑ, args=[ꬤٰ, this, Expression.TailExpr(pos=ProgramNode.Position(line=1, col=385), signalExpr=ܔ), 𞄰\4]))]))), 〡಼ࠫ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=427), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=434), mdf=IMM, isLifted=false, name=ˮ), name=〡಼ࠫ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=443), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=443), mdf=IMM, isLifted=true, name=૱), name=ਫ਼), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=453), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=453), mdf=IMM, isLifted=false, name=ค), name=$ྎ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=462), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=462), mdf=IMM, isLifted=false, name=ꞓੑୣ꣯᠖), name=مৌ઼ᝓ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=477), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=477), mdf=IMM, isLifted=true, name=ᩁ᮴), name=ࡄ่꛰)], expression=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=501), receiver=true, isLifted=false, methodName=ᢜઁึ, arguments=[]))}), ᨂ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=518), isCapability=true, isInterface=false, name=ᨂ, impl=[J, ꝕ, Ή], extend=[], fields={ꫲ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=577), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=577), mdf=IMM, isLifted=true, name=ױ), name=ꫲ), ꣳ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=587), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=587), mdf=IMM, isLifted=true, name=Ｘ), name=ꣳ), ቱຸ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=597), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=597), mdf=READ, isLifted=false, name=＿), name=ቱຸ), ざ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=561), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=561), mdf=IMM, isLifted=true, name=ൔାၠꩃୢࠥ୮), name=ざ)}, methods={এ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=611), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=618), mdf=READ, isLifted=false, name=ྌꠂெ), name=এ, args=[], expression=true)}), ۮꦀෛ৪=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ۮꦀෛ৪, impl=[ਐ๑ࠢ], extend=[], fields={}, methods={ၡ⁣=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=82), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=93), mdf=IMM, isLifted=true, name=ໜꚞ௦), name=ၡ⁣, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=110), mdf=IMM, name=〱, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=118), signalExpr=true), boundTo=14)), ͼ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=40), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=47), mdf=IMM, isLifted=true, name=ῇ᩠ৗ), name=ͼ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=58), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=58), mdf=IMM, isLifted=true, name=Ꞵ), name=₦)], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=71)))}), எ૫=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=151), isCapability=false, isInterface=false, name=எ૫, impl=[﹩ੑ], extend=[], fields={}, methods={}), ஞ۬=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=649), isCapability=false, isInterface=false, name=ஞ۬, impl=[], extend=[], fields={}, methods={})}, main=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=686), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=670), signalExpr=ൔ), fieldName=ة))
Program(classDeclarations={}, main=0)
Program(classDeclarations={}, main=this)
Program(classDeclarations={Ｈ꩘ైೈ꙯༡ෲ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=Ｈ꩘ైೈ꙯༡ෲ, impl=[], extend=[], fields={ঐ‌=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=16), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=16), mdf=IMM, isLifted=true, name=ೞ), name=ঐ‌)}, methods={_ؑ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=110), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=117), mdf=IMM, isLifted=true, name=ӻ᳐), name=_ؑ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=128), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=128), mdf=IMM, isLifted=false, name=ꠇᰧ), name=ⁱ)], expression=ꠉ), ൎో᠍⃛=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=27), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=34), mdf=IMM, isLifted=false, name=સෙ), name=ൎో᠍⃛, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=45), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=45), mdf=MUT, isLifted=false, name=列፝ັ෦ౖ), name=ౚ)], expression=false), ﺴ᳴=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=74), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=81), mdf=READ, isLifted=false, name=︳ੵઁ⁧ᮂ), name=ﺴ᳴, args=[], expression=￡ᤢ)})}, main=true)
Program(classDeclarations={}, main=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=103), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=11), mdf=MUT, name=ᮯ­, value=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=29), name=ꕜ, args=[this]), boundTo=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=50), mdf=IMM, name=ℂૉ಼ൗ, value=true, boundTo=364.7373046875)), tail=0), isLifted=true, methodName=ⶪ༷ꚞ, arguments=[]))
Program(classDeclarations={அ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=அ, impl=[ⴧ, ண], extend=[], fields={ㄪ‭=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=39), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=39), mdf=IMM, isLifted=false, name=ˮ੮), name=ㄪ‭)}, methods={})}, main=𝔋\32\t\uu8BdE)
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=￦))
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=0))
Program(classDeclarations={ᮙູ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ᮙູ, impl=[], extend=[], fields={}, methods={})}, main=7405)
Program(classDeclarations={}, main=1764)
Program(classDeclarations={}, main=this)
Program(classDeclarations={ⴧ⃒ੇੀ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ⴧ⃒ੇੀ, impl=[], extend=[], fields={}, methods={}), 횤꫁=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=145), isCapability=true, isInterface=false, name=횤꫁, impl=[], extend=[], fields={}, methods={ױ໔=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=208), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=215), mdf=IMM, isLifted=false, name=ⶶ), name=ױ໔, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=228), signalExpr=this)), Ϫଃ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=167), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=174), mdf=IMM, isLifted=true, name=ẕ꩖), name=Ϫଃ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=185), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=185), mdf=IMM, isLifted=false, name=ৎ੩), name=ಀ)], expression=173.0)}), ὶ͔=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=74), isCapability=false, isInterface=true, name=ὶ͔, impl=[], extend=[], fields={}, methods={})}, main=this)
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ٯ᰷, value=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=17), signalExpr=0.0), boundTo=true))
Program(classDeclarations={ྊ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ྊ, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=130)))
Program(classDeclarations={}, main=18)
Program(classDeclarations={ঽ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ঽ, impl=[], extend=[], fields={}, methods={})}, main=)
Program(classDeclarations={લ഼=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=લ഼, impl=[], extend=[], fields={}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=25)))
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={}, main=ఽྗ۠)
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ዀ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=16), head=ܞ, tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=25), signalExpr=2)), boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=49), signalExpr=)))
Program(classDeclarations={}, main=)
Program(classDeclarations={}, main=true)
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ℕ, value=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=45), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=16), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=23), signalExpr=ࢶ᠌ꦀ)), isLifted=false, methodName=ஙౕ, arguments=[Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=50), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=67), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=57)), isLifted=true, methodName=ଶ, arguments=[Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=73)), Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=83))]))]), boundTo=Ὴᢆ))
Program(classDeclarations={}, main=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=7), mdf=IMM, name=ไ꫁, value=1, boundTo=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=24), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=38), receiver=800.0, isLifted=true, methodName=ᱛ଼, arguments=[Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=45), name=ૐ, args=[\5\3]), Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=68), signalExpr=40000.0), Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=88)), Expression.LetExpr(pos=ProgramNode.Position(line=1, col=98), mdf=MUT, name=ʹ႐፟, value=0.0, boundTo=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=120), name=ⁱꥊ១, args=[]))]))))
Program(classDeclarations={ޢ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ޢ, impl=[ẏ꯭ꙹႂ], extend=[], fields={Ή༵ૢᢩ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=38), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=38), mdf=IMM, isLifted=false, name=ⴭ፝ઁಃ), name=Ή༵ૢᢩ)}, methods={Ἑା=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=52), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=59), mdf=IMM, isLifted=false, name=હ፝), name=Ἑା, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=68), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=68), mdf=IMM, isLifted=false, name=殺), name=ࡃ᳭), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=81), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=81), mdf=IMM, isLifted=true, name=ண꠆), name=ਲဴ)], expression=256.0), Ｙ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=109), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=116), mdf=MUT, isLifted=false, name=ꩢ), name=Ｙ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=127), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=127), mdf=IMM, isLifted=true, name=եꢁ), name=ᱎꢁ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=139), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=139), mdf=IMM, isLifted=true, name=⁀), name=ࢫಃ)], expression=this)}), ︴ั=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=209), isCapability=false, isInterface=false, name=︴ั, impl=[ຽ൬, ۿ, অ༩, Ὰ], extend=[], fields={}, methods={}), ꁷꧥ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=165), isCapability=false, isInterface=true, name=ꁷꧥ, impl=[], extend=[], fields={}, methods={})}, main=ꩁ꙯)
Program(classDeclarations={}, main=0.0)
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=11), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=15)), tail=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=25), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=29), mdf=IMM, name=﹎, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=40), head=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=44), mdf=IMM, name=ⶒ, value=, boundTo=ˮ᱂ꩃັ᩷ꙹ), tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=73), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=80), signalExpr=50))), boundTo=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=107), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=114)))), tail=3)), tail=9.859375))
Program(classDeclarations={ꪱ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ꪱ, impl=[], extend=[], fields={ͽ᮹=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=21), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=21), mdf=READ, isLifted=false, name=ꓞ), name=ͽ᮹)}, methods={})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=45), signalExpr=this))
Program(classDeclarations={}, main=false)
Program(classDeclarations={}, main=true)
Program(classDeclarations={ਖ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ਖ, impl=[ඳ￺], extend=[], fields={}, methods={})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=35), head=8.0E79, tail=30))
Program(classDeclarations={ೱ〪=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ೱ〪, impl=[ꪱ୩], extend=[], fields={ᨊ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=37), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=37), mdf=MUT, isLifted=false, name=ৡ), name=ᨊ), ꩺ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=69), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=69), mdf=IMM, isLifted=false, name=؋), name=ꩺ), ꩂୋ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=49), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=49), mdf=IMM, isLifted=false, name=ꥨৗ꯭ඃ), name=ꩂୋ), મ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=61), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=61), mdf=IMM, isLifted=false, name=‿), name=મ)}, methods={ꭤ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=81), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=88), mdf=IMM, isLifted=false, name=ኲ), name=ꭤ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=95), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=95), mdf=IMM, isLifted=true, name=Ⳳׁ), name=ꞓ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=106), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=106), mdf=IMM, isLifted=true, name=Ό᮵), name=ₔ)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=120), mdf=READ, name=ꧬౢ, value=true, boundTo=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=152), receiver=91.0, fieldName=ድ, value=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=166), receiver=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=156)), isLifted=false, methodName=ቖ໘, arguments=[Expression.TailExpr(pos=ProgramNode.Position(line=1, col=171), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=178), name=ၡ, args=[DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=205), receiver=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=186), name=হ४ܹ﻿߈, args=[]), fieldName=푷゚꤬, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=211), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=215), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=222), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=229), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=236), name=Å, args=[])))), tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=263), signalExpr=true)))]))])))), ਹ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=305), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=320), mdf=IMM, isLifted=false, name=יִꥍੑ), name=ਹ, args=[], expression=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=348), receiver=2.5803824424981994E20, fieldName=ᰠ, value=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=352), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=356), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=363), signalExpr=\uu4828෦)), tail=3847.0)))})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=422), head=0, tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=432), mdf=IMM, name=ӏ, value=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=452), receiver=false, isLifted=false, methodName=ఽ, arguments=[Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=456))]), boundTo=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=516), receiver=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=471), head=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=475), signalExpr=), tail=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=492), signalExpr=0)), fieldName=ꭏ))))
Program(classDeclarations={ᨴ‮࿆ຼ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=312), isCapability=false, isInterface=true, name=ᨴ‮࿆ຼ, impl=[], extend=[], fields={}, methods={}), ൺ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ൺ, impl=[ඊ, ச], extend=[], fields={ؿ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=39), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=39), mdf=IMM, isLifted=false, name=Ｕ), name=ؿ)}, methods={ඔ᮴=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=201), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=208), mdf=CAPSULE, isLifted=false, name=ጔು), name=ඔ᮴, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=225), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=225), mdf=IMM, isLifted=true, name=µ୍), name=ꪱ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=236), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=236), mdf=IMM, isLifted=true, name=ἤ), name=ೲୖ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=247), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=247), mdf=IMM, isLifted=true, name=ೱ), name=ສ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=257), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=257), mdf=IMM, isLifted=false, name=ຫ໔), name=৻), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=270), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=270), mdf=CAPSULE, isLifted=false, name=ㇱ꫁), name=ኢࠜ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=288), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=288), mdf=IMM, isLifted=true, name=ⶅ), name=ῲଁ)], expression=), ⶢ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=47), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=54), mdf=CAPSULE, isLifted=false, name=ਔৗு), name=ⶢ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=71), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=71), mdf=IMM, isLifted=true, name=ꬓ), name=ਖ᳤਼), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=82), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=82), mdf=READ, isLifted=false, name=מּ), name=ퟓު)], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=99))), Ⴋ꛰=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=110), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=117), mdf=IMM, isLifted=true, name=ଳ), name=Ⴋ꛰, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=127), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=127), mdf=IMM, isLifted=false, name=ዀ҇), name=ೲ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=136), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=136), mdf=IMM, isLifted=true, name=Ⳮ︯ާꠦై), name=ࠚ︆꫁), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=152), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=152), mdf=IMM, isLifted=true, name=ਐꧥ), name=Ό), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=163), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=163), mdf=IMM, isLifted=false, name=ၐ꣓), name=ᨍಁే), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=174), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=174), mdf=IMM, isLifted=true, name=ܐ), name=ᳱ)], expression=9.527906273786277E39)})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=339), signalExpr=0.0))
Program(classDeclarations={ดꢀ８=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ดꢀ８, impl=[], extend=[], fields={}, methods={})}, main=אַᢩ੮९ᬁ࡛)
Program(classDeclarations={බؗ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=222), isCapability=false, isInterface=true, name=බؗ, impl=[], extend=[Ⴭꪳ, ᝮ], fields={}, methods={}), ᦝ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ᦝ, impl=[], extend=[], fields={ব⳱=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=10), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, isLifted=true, name=ࠤꙷึ), name=ব⳱)}, methods={ꩵ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=129), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=141), mdf=IMM, isLifted=true, name=ກ), name=ꩵ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=150), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=150), mdf=IMM, isLifted=true, name=ኧ), name=ቔ)], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=163), signalExpr=4)), Ὑۙ꫁߅=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=82), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=89), mdf=READ, isLifted=false, name=ᢚꫯ), name=Ὑۙ꫁߅, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=105), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=105), mdf=IMM, isLifted=true, name=Ⅎ⁮), name=ಀ)], expression=false), ຍ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=23), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=34), mdf=IMM, isLifted=true, name=ຍං), name=ຍ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=44), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=44), mdf=IMM, isLifted=false, name=c), name=אּૉ)], expression=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=62), receiver=ⶴ୪, fieldName=Ⰸ꩖, value=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=73), receiver=ￖୗ, fieldName=懲))), ᬭऺ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=183), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=195), mdf=IMM, isLifted=true, name=ﷻ), name=ᬭऺ, args=[], expression=true)})}, main=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=516), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=523), name=ℂ‪ၖଂ, args=[])))
Program(classDeclarations={}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=7), name=ଽ, args=[Expression.LetExpr(pos=ProgramNode.Position(line=1, col=15), mdf=IMM, name=ꧼꦺ, value=0.0, boundTo=)]))
Program(classDeclarations={ไോ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ไോ, impl=[ꫴ], extend=[], fields={ಉ٥༤=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=36), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=36), mdf=IMM, isLifted=false, name=ˤ), name=ಉ٥༤)}, methods={})}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=56)))
Program(classDeclarations={}, main=true)
Program(classDeclarations={ኛ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ኛ, impl=[], extend=[], fields={}, methods={})}, main=2)
Program(classDeclarations={ࡋ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ࡋ, impl=[ᴿ], extend=[], fields={}, methods={ᏻ᭫=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=35), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=46), mdf=IMM, isLifted=true, name=ၿ9), name=ᏻ᭫, args=[], expression=294656.0), Ⴭ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=75), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=82), mdf=IMM, isLifted=true, name=ଋౢ), name=Ⴭ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=92), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=92), mdf=IMM, isLifted=true, name=ഽ), name=ဿ￹꛱), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=104), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=104), mdf=MUT, isLifted=false, name=ꪶ), name=ল), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=116), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=116), mdf=IMM, isLifted=true, name=ௐ), name=ᝯ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=126), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=126), mdf=IMM, isLifted=true, name=ಲꫵୗ۱), name=Ἐ⁤්ೆ୫ேୀঃ)], expression=52)})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=168), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=175), signalExpr=໅𒑵)))
Program(classDeclarations={}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=7), signalExpr=this))
Program(classDeclarations={ຯ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ຯ, impl=[ᲇ۪, ℛ], extend=[], fields={ῶ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=29), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=29), mdf=IMM, isLifted=false, name=ꪽ), name=ῶ)}, methods={ℕઁ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=37), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=44), mdf=MUT, isLifted=false, name=ੴꢼ), name=ℕઁ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=57), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=57), mdf=CAPSULE, isLifted=false, name=ଡ଼), name=ၡ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=73), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=73), mdf=MUT, isLifted=false, name=ꬡ‭), name=ୠෳ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=87), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=87), mdf=IMM, isLifted=false, name=ꠄ), name=ᳵ7್᭔ℂ᠎)], expression=ᳪ౪)})}, main=꠸ۧ᳛െ᳹)
Program(classDeclarations={}, main=154)
Program(classDeclarations={}, main=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=7)))
Program(classDeclarations={ꡯಾ⁡ࠩ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=318), isCapability=false, isInterface=false, name=ꡯಾ⁡ࠩ, impl=[ষꠂ́ၤ, ኲ༾᳑, ຄۭᨚ഻༹], extend=[], fields={}, methods={ꣵ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=362), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=373), mdf=IMM, isLifted=true, name=ᝮ), name=ꣵ, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=387), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=394), signalExpr=))), ኽ᳤=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=416), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=423), mdf=IMM, isLifted=true, name=ꜜꠋॢ᧑), name=ኽ᳤, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=436), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=436), mdf=READ, isLifted=false, name=ଳ), name=ৡ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=449), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=449), mdf=IMM, isLifted=true, name=ｏ৯), name=ᚴ)], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=463), signalExpr=true))}), ö=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=486), isCapability=false, isInterface=true, name=ö, impl=[], extend=[], fields={}, methods={}), ସ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=290), isCapability=false, isInterface=true, name=ସ, impl=[], extend=[ఋ], fields={}, methods={}), ォ꣔ႍ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=66), isCapability=true, isInterface=false, name=ォ꣔ႍ, impl=[ﬦீุ], extend=[], fields={}, methods={Ꮆ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=105), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=120), mdf=IMM, isLifted=false, name=ಀ), name=Ꮆ, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=132), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=139), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=143), head=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=147), head=false, tail=DotExpression.FieldAssignExpr(pos=ProgramNode.Position(line=1, col=202), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=160), signalExpr=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=167), head=this, tail=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=179), name=ꩄ, args=[]))), fieldName=ൎ, value=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=226), receiver=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=206), signalExpr=false), isLifted=false, methodName=Ⅺᳳਿꧥᩫၬᝒ៦, arguments=[]))), tail=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=259), receiver=false, fieldName=〆︮)), tail=this)))}), ᵘ۴=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=ᵘ۴, impl=[], extend=[], fields={}, methods={ࠉ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=11), mdf=MUT, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=22), mdf=IMM, isLifted=false, name=ૐ), name=ࠉ, args=[], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=34), mdf=IMM, name=ﵜᩢ, value=false, boundTo=false))})}, main=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=510), name=த, args=[]))
Program(classDeclarations={}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=7), head=\'\uuuuuB155\u2ace, tail=))
Program(classDeclarations={ޱ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=203), isCapability=false, isInterface=false, name=ޱ, impl=[], extend=[], fields={ㅰ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=213), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=213), mdf=CAPSULE, isLifted=false, name=ⶂ), name=ㅰ)}, methods={}), ຢ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ຢ, impl=[ꬠ], extend=[], fields={ଐ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=35), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=35), mdf=IMM, isLifted=true, name=ஆ), name=ଐ)}, methods={র=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=122), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=129), mdf=IMM, isLifted=true, name=ఫ᪇), name=র, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=144), name=ꪵ, args=[])), ੴ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=160), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=167), mdf=IMM, isLifted=false, name=〸), name=ੴ, args=[], expression=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=179), name=ຄ, args=[3])), ᦑ⃰=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=45), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=52), mdf=IMM, isLifted=false, name=ퟧܺ), name=ᦑ⃰, args=[], expression=this), ጓ࡙ೈ⁢=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=75), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=87), mdf=IMM, isLifted=true, name=ਹ), name=ጓ࡙ೈ⁢, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=99), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=99), mdf=IMM, isLifted=true, name=ኵ), name=ᭈ֨ᬿ‬)], expression=9.0)})}, main=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=239), head=ಎ, tail=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=248), mdf=MUT, name=ᢀ, value=Σ, boundTo=5950)))
Program(classDeclarations={ਰ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=704), isCapability=false, isInterface=true, name=ਰ, impl=[], extend=[], fields={}, methods={}), ⁱ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=845), isCapability=false, isInterface=true, name=ⁱ, impl=[], extend=[], fields={}, methods={}), ⸯྃ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=862), isCapability=false, isInterface=true, name=ⸯྃ, impl=[], extend=[ዴ], fields={}, methods={}), ࠚ᳒=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=827), isCapability=false, isInterface=true, name=ࠚ᳒, impl=[], extend=[], fields={}, methods={}), ꭥͪ᧒ં=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=true, isInterface=false, name=ꭥͪ᧒ં, impl=[], extend=[], fields={}, methods={ﵲ⁬=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=206), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=213), mdf=IMM, isLifted=false, name=ⶈ⃡), name=ﵲ⁬, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=227), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=234), name=ﬔଂ゙༠ీ꧵, args=[]))), ൎऺั=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=24), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=36), mdf=IMM, isLifted=false, name=ꬌஂ), name=ൎऺั, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=50), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=50), mdf=IMM, isLifted=true, name=ꦡై), name=ම), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=61), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=61), mdf=IMM, isLifted=true, name=ꩤᰪॊ߇), name=ୠ༵), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=75), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=75), mdf=READ, isLifted=false, name=ꟷ), name=ⴭ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=88), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=88), mdf=IMM, isLifted=true, name=ஐ), name=ۺ꫁)], expression=Expression.LetExpr(pos=ProgramNode.Position(line=1, col=102), mdf=IMM, name=ౠ, value=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=111), signalExpr=Expression.InstantiationExpr(pos=ProgramNode.Position(line=1, col=118), name=נ᳥꫶ּૈ, args=[Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=129), signalExpr=this)])), boundTo=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=191), receiver=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=157), signalExpr=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=164), signalExpr=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=171)))), isLifted=true, methodName=ߺິ, arguments=[]))), ℙ౫=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=300), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=307), mdf=IMM, isLifted=false, name=ᢂ༷ே), name=ℙ౫, args=[], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=326), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=341), receiver=this, isLifted=false, methodName=ⸯ, arguments=[Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=345), signalExpr=true)]))), ㇰ〬=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=259), mdf=CAPSULE, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=274), mdf=IMM, isLifted=true, name=ꪱৗ‬), name=ㇰ〬, args=[], expression=this)}), Ꭽ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=377), isCapability=false, isInterface=false, name=Ꭽ, impl=[], extend=[], fields={ᢥ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=387), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=387), mdf=CAPSULE, isLifted=false, name=ℎ), name=ᢥ)}, methods={ᥨ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=403), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=410), mdf=IMM, isLifted=true, name=ℴࠥ໓), name=ᥨ, args=[], expression=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=426), signalExpr=true)), ઊ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=446), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=453), mdf=IMM, isLifted=false, name=ଭೌ໓), name=ઊ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=462), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=462), mdf=IMM, isLifted=false, name=ႎৌ༾ૻꩃ), name=Ϳ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=474), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=474), mdf=IMM, isLifted=false, name=ਹੵ), name=ᪧ᮳￻྆௬)], expression=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=494))), ዹᢅ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=505), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=517), mdf=READ, isLifted=false, name=ⅅ້ੑ໋༹ో), name=ዹᢅ, args=[], expression=)}), ઽ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=550), isCapability=true, isInterface=false, name=ઽ, impl=[], extend=[], fields={}, methods={ௐ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=571), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=578), mdf=IMM, isLifted=false, name=ꨆꠋ߆), name=ௐ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=587), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=587), mdf=IMM, isLifted=false, name=ῄ୮), name=ꨤ)], expression=\103៞), ⱀ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=611), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=622), mdf=IMM, isLifted=true, name=ව), name=ⱀ, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=631), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=631), mdf=READ, isLifted=false, name=ￜ), name=ꪉ), ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=644), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=644), mdf=READ, isLifted=false, name=ゞ߂), name=เ্)], expression=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=662), signalExpr=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=685), receiver=𑑠𞴾𞴾࿍\u3bCC, isLifted=false, methodName=ൖ, arguments=[])))})}, main=ꬬেୈ)
Program(classDeclarations={ㅁᝲ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ㅁᝲ, impl=[], extend=[], fields={}, methods={})}, main=)
Program(classDeclarations={ᝋ᳑ꧥ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=93), isCapability=false, isInterface=true, name=ᝋ᳑ꧥ, impl=[], extend=[], fields={}, methods={}), º=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=º, impl=[], extend=[], fields={}, methods={Ό=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=57), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=69), mdf=IMM, isLifted=false, name=ﮌ), name=Ό, args=[], expression=this), ᐽᮩ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=17), mdf=MUT, isLifted=false, name=ځ), name=ᐽᮩ, args=[], expression=DotExpression.CallExpr(pos=ProgramNode.Position(line=1, col=42), receiver=this, isLifted=false, methodName=யٰ⃔؜, arguments=[]))})}, main=Expression.HeadExpr(pos=ProgramNode.Position(line=1, col=119), signalExpr=\uu3F6c\u9a49\"))
Program(classDeclarations={භ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=false, name=භ, impl=[], extend=[], fields={}, methods={ز=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=86), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=97), mdf=IMM, isLifted=false, name=ￜ), name=ز, args=[ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=104), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=104), mdf=CAPSULE, isLifted=false, name=ۦ), name=ਵ᪑)], expression=Expression.SignalConstructionExpr(pos=ProgramNode.Position(line=1, col=124), head=Expression.EmptySignalExpr(pos=ProgramNode.Position(line=1, col=128)), tail=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=138), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=145), signalExpr=Expression.TailExpr(pos=ProgramNode.Position(line=1, col=152), signalExpr=this))))), ͷ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=184), mdf=READ, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=196), mdf=MUT, isLifted=false, name=ೡᬃ็), name=ͷ, args=[], expression=true), ꪣᜓঃꠣ=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=10), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=17), mdf=IMM, isLifted=false, name=യܑ), name=ꪣᜓঃꠣ, args=[], expression=this), ໄ᳐=ProgramNode.Method(pos=ProgramNode.Position(line=1, col=46), mdf=IMM, returnType=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=53), mdf=IMM, isLifted=false, name=ળᜳ), name=ໄ᳐, args=[], expression=DotExpression.FieldAccessExpr(pos=ProgramNode.Position(line=1, col=79), receiver=0.4375, fieldName=એ))}), ٮ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=226), isCapability=false, isInterface=false, name=ٮ, impl=[], extend=[], fields={ଲᢩ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=248), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=248), mdf=CAPSULE, isLifted=false, name=ⷒ), name=ଲᢩ), Ⴧ=ProgramNode.BindingDeclaration(pos=ProgramNode.Position(line=1, col=236), type=ProgramNode.Type(pos=ProgramNode.Position(line=1, col=236), mdf=IMM, isLifted=false, name=ⷝ), name=Ⴧ)}, methods={}), ˮ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=268), isCapability=false, isInterface=true, name=ˮ, impl=[], extend=[], fields={}, methods={})}, main=false)
Program(classDeclarations={ቘ๙=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=33), isCapability=false, isInterface=true, name=ቘ๙, impl=[], extend=[ꧬ], fields={}, methods={}), ᜤ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=0), isCapability=false, isInterface=true, name=ᜤ, impl=[], extend=[ᾑ, ລ༹], fields={}, methods={}), ਈ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=152), isCapability=false, isInterface=true, name=ਈ, impl=[], extend=[Ή१᱒, ଵ, ﹍­᠍], fields={}, methods={}), ਨꪰᩚ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=220), isCapability=false, isInterface=true, name=ਨꪰᩚ, impl=[], extend=[ະ, Ⳬ‎‭, ཇᨘ], fields={}, methods={}), ଽ=ProgramNode.ClassDeclaration(pos=ProgramNode.Position(line=1, col=297), isCapability=false, isInterface=true, name=ଽ, impl=[], extend=[], fields={}, methods={})}, main=ඹ)
