main = 0.12258148193359375 ;

capability class Std  {
read method imm Number add(imm Number a, imm Number b) =
0 ;

mut method imm Float randomFloat(imm Number min, imm Number max) =
0.0 ;

read method imm Number sub(imm Number a, imm Number b) =
0 ;

mut method imm Int exit(imm Int code) =
code;

mut method mut Std print(imm String msg) =
this;

mut method mut Std println(imm String msg) =
this;

read method imm Number mul(imm Number a, imm Number b) =
0 ;

read method imm Bool gte(imm Number a, imm Number b) =
new False();

read method imm String concat(imm String a, imm String b) =
a;

read method @Bool clock(imm Int timeMs) =
@[];
}

class True implements Bool  {
imm method imm Bool not() =
new False();

imm method imm Bool or(imm Bool b) =
this;

imm method imm Bool and(imm Bool b) =
b;

imm method imm String toString() =
"true";

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2) =
f1;
}

interface String extends Literal  {

}

class False implements Bool  {
imm method imm Bool not() =
new True();

imm method imm Bool or(imm Bool b) =
b;

imm method imm Bool and(imm Bool b) =
this;

imm method imm String toString() =
"false";

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2) =
f2;
}

interface Int extends Number, Literal  {

}

interface ఎ  {
imm method imm ꩺ º഻(capsule ᙷ ퟨ, @ᛳ ൎ);

imm method @@ῇꥊ ਙࠢ();

imm method imm ᝧ ˮ(@ཆ꧳᧓ௗ࡛᳭꣥ ߴ, imm ਲ᪒꪿ ܐऻ, imm ב꯲ ῳ);
}

interface ၥ᭗ extends ஈ᳜၈ୖ᷼ꫫ, ਲ਼ंັܑ᳖۳ൢ৮ীꦾⷧⷴᜒႆ, ᜐ, ⅈᨙ꯭ۛ၁  {
mut method read ᤂ µุைꦁ(@ངா᷵ ޱ);

imm method @சྍᮀᤢꧥ ऽ(imm ⳮ ૐ়ꯪ١, imm ቫ ῗ);

imm method @@@@@@@ॽ࠘ႄົ᳑ ￍ(imm ᮙ Ｅ੧­);
}

interface Float extends Number, Literal  {

}

interface Number extends Literal  {

}

interface Bool extends Literal  {
imm method imm Bool not();

imm method imm Bool or(imm Bool b);

imm method imm Bool and(imm Bool b);

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2);
}

interface Literal  {
imm method imm String toString();
}

interface ProducerN  {
imm method imm Number get();
}

interface ೞ꘦᳡  {

}

capability class ஞ  {
@‿্࡛ ၡۨ;
imm આ້ ᚚ૧;
imm ஜ ⳬꯤ්ิ⁠ۣૈꥑ෪;
imm ਵ᱓ૢ ࢤೈ໘;
@@@ଋ ᙲ᜴;
@ʹ ⶰే;
}

