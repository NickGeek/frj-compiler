main = new ࢷ᠍();

capability class Std  {
read method imm Number add(imm Number a, imm Number b) =
0 ;

mut method imm Float randomFloat(imm Number min, imm Number max) =
0.0 ;

read method imm Number sub(imm Number a, imm Number b) =
0 ;

mut method mut Std print(imm String msg) =
this;

mut method mut Std println(imm String msg) =
this;

read method imm Number mul(imm Number a, imm Number b) =
0 ;

read method imm Bool gte(imm Number a, imm Number b) =
new False();

read method imm String concat(imm String a, imm String b) =
a;

read method @Bool clock(imm Int timeMs) =
@[];
}

class ᨇೌૈे  {
read method imm ⶆ ⴔ() =
"";
}

class True implements Bool  {
imm method imm Bool not() =
new False();

imm method imm Bool or(imm Bool b) =
this;

imm method imm Bool and(imm Bool b) =
b;

imm method imm String toString() =
"true";

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2) =
f1;
}

interface String extends Literal  {

}

class False implements Bool  {
imm method imm Bool not() =
new True();

imm method imm Bool or(imm Bool b) =
b;

imm method imm Bool and(imm Bool b) =
this;

imm method imm String toString() =
"false";

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2) =
f2;
}

interface Ⴭ  {
read method imm ꧏ ቍ꪿();

imm method @@@ᥲ ꣷ();
}

interface Int extends Number, Literal  {

}

interface Float extends Number, Literal  {

}

class ⁱ  {
imm ಜૃ۬ ℹ୍;
@ᜊ ᥐᝳ;
@@ዹ⁫ಁ 塚;imm method imm מּ ꣻັ(capsule ₕ෮ ⴧ, @ᗠ ꘛ᳭) =
ﬕᮤ;

imm method capsule ﬁ᭓ܑ ﭺ೫ꢁ︍ꚟ꧸꫶ृ() =
"".ভை = @[@[]; new ゟ()];

imm method read יִ ᢂে(imm ۥ꯸ؘ᭳ ꠜ) =
@[@[]; @য় ૐ᪗ೇ = new ன(),
Ᾰૺ꧔ಂ];
}

class ꘝꠤ implements ݺූ꘣, ૐ, ℕ  {
imm ߺᬃᬀ꩙ୢ ꩀౣ؅ீ྇߄;
}

interface Number extends Literal  {

}

interface Bool extends Literal  {
imm method imm Bool not();

imm method imm Bool or(imm Bool b);

imm method imm Bool and(imm Bool b);

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2);
}

interface Literal  {
imm method imm String toString();
}

class Ｊ᳭⃖᠌ࣣ༷ີꠦ implements ঞ  {
@@@@@@ൽ ὗ;
@@@त ꧦ;
}

interface ProducerN  {
imm method imm Number get();
}

