main = @@@ꓦ ﵮ = tail(@[@[]; this]),
ࠨ༾;

class Std  {
imm method imm Number add(imm Std this, imm Number a, imm Number b) =
0 ;

imm method imm Number sub(imm Std this, imm Number a, imm Number b) =
0 ;

imm method imm Number mul(imm Std this, imm Number a, imm Number b) =
0 ;

imm method imm Bool gte(imm Std this, imm Number a, imm Number b) =
new False();
}

capability class StdC  {
mut method imm String print(mut StdC this, imm String msg) =
msg;
}

interface ཇ  {
imm method @@@@@@ö יִ๒ꤧ(imm ཇ this, @ܓો५߀ ۺᨗ, @@@ףּ᷿ ᮇྍ഼꣐, imm ᝁ ቘ);
}

class True implements Bool  {
imm method imm Bool not(imm True this) =
new False();

imm method imm Bool or(imm True this, imm Bool b) =
this;

imm method imm Bool and(imm True this, imm Bool b) =
b;

imm method imm String toString(imm True this) =
"true";

imm method imm ProducerN thenElse(imm True this, imm ProducerN f1, imm ProducerN f2) =
f1;
}

interface String extends Literal  {

}

class False implements Bool  {
imm method imm Bool not(imm False this) =
new True();

imm method imm Bool or(imm False this, imm Bool b) =
b;

imm method imm Bool and(imm False this, imm Bool b) =
this;

imm method imm String toString(imm False this) =
"false";

imm method imm ProducerN thenElse(imm False this, imm ProducerN f1, imm ProducerN f2) =
f2;
}

interface Int extends Number, Literal  {

}

interface Ί᷈  {
imm method read ⸯꨪ૪ ຂ(imm Ί᷈ this);

imm method @@த Ά(imm Ί᷈ this);
}

interface Float extends Number, Literal  {

}

interface Number extends Literal  {

}

interface Bool extends Literal  {
imm method imm Bool not(imm Bool this);

imm method imm Bool or(imm Bool this, imm Bool b);

imm method imm Bool and(imm Bool this, imm Bool b);

imm method imm ProducerN thenElse(imm Bool this, imm ProducerN f1, imm ProducerN f2);
}

interface Literal  {
imm method imm String toString(imm Literal this);
}

class ᬝ᠕  {
@@@@ເেၫ ଽྗꩃఁ઼ꫬ;capsule method imm ଡ଼꘠ؐ ລᢩ(capsule ᬝ᠕ this, imm ż ﷼) =
@[tail(head(@[])); 4.163336342344337E-17 ].@ஓꙸ(this, @[96 ; new ߘ()]);

imm method imm Ꭸᤱ ﬕุ(imm ᬝ᠕ this, imm ꨜ਼ฺ ﹎༵ාಂၢ) =
tail(ຕᯱꙴ);
}

interface ProducerN  {
imm method imm Number get(imm ProducerN this);
}

