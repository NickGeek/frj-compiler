main = 4.7 ;

capability class Std  {
read method imm Number add(imm Number a, imm Number b) =
0 ;

mut method imm Float randomFloat(imm Number min, imm Number max) =
0.0 ;

read method imm Number sub(imm Number a, imm Number b) =
0 ;

mut method mut Std print(imm String msg) =
this;

read method imm Number mul(imm Number a, imm Number b) =
0 ;

read method imm Bool gte(imm Number a, imm Number b) =
new False();

read method imm String concat(imm String a, imm String b) =
a;

read method @Bool clock(imm Int timeMs) =
@[];
}

class True implements Bool  {
imm method imm Bool not() =
new False();

imm method imm Bool or(imm Bool b) =
this;

imm method imm Bool and(imm Bool b) =
b;

imm method imm String toString() =
"true";

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2) =
f1;
}

interface String extends Literal  {

}

class False implements Bool  {
imm method imm Bool not() =
new True();

imm method imm Bool or(imm Bool b) =
b;

imm method imm Bool and(imm Bool b) =
this;

imm method imm String toString() =
"false";

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2) =
f2;
}

capability class Ⳮ  {
imm method @@@@ٯ Ύࣞ(@ꡅܑ۸ඃ ꪱ) =
7.0 ;

capsule method @꠸ൗྻೣ꠆ ꘔ(imm Όꯪ߫ ꦬ, @ࢧ ഴ) =
@[new ఽ(@[]._ = "\uud3C4዗"); tail(@[10.0 ; @[]])];

imm method imm ﴂ 〸() =
@[head(@[শ; @[this; new ຽ(@ៜ් ߺꥐꫫ = this,
this)]]); @@@ⷊี਼ ጽ = tail(@[]),
1 ].ｈᨛۧ꧶;

mut method @@@@@ℕ ꧏऺﬞ() =
"";
}

interface Int extends Number, Literal  {

}

interface Float extends Number, Literal  {

}

interface Number extends Literal  {

}

interface ה extends ꩄ᥊଼ྃ, അྦೊٰৌൈ⃑, ꘪ  {

}

interface Bool extends Literal  {
imm method imm Bool not();

imm method imm Bool or(imm Bool b);

imm method imm Bool and(imm Bool b);

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2);
}

interface Literal  {
imm method imm String toString();
}

interface ἡ꩔  {
imm method @હ ⳬꠋৗ্꣖߮(@௹ אַົ);

imm method imm ᚐެꩽ ઑ();

imm method imm ꫢ᠋් ꂵೢ(@ਲ਼ ⅅੑ, imm gౌ ၒೀ, @ꭢᤴ Ὲ઼‎ୣ, @@@ꢊ ᲁཻ);
}

interface ProducerN  {
imm method imm Number get();
}

