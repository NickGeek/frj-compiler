main = @ஐ᧗୮ ⳳ꙯ె = new º᳭ੇ፝֯(),
@[];

interface Float extends Number, Literal  {

}

capability class Std  {
read method imm Number add(read Std this, imm Number a, imm Number b) =
0 ;

mut method imm Float randomFloat(mut Std this, imm Number min, imm Number max) =
0.0 ;

mut method @Bool sleep(mut Std this, imm Int timeMs) =
@[];

read method imm Number sub(read Std this, imm Number a, imm Number b) =
0 ;

mut method imm String print(mut Std this, imm String msg) =
msg;

read method imm Number mul(read Std this, imm Number a, imm Number b) =
0 ;

read method imm Bool gte(read Std this, imm Number a, imm Number b) =
new False();
}

interface Number extends Literal  {

}

interface Bool extends Literal  {
imm method imm Bool not(imm Bool this);

imm method imm Bool or(imm Bool this, imm Bool b);

imm method imm Bool and(imm Bool this, imm Bool b);

imm method imm ProducerN thenElse(imm Bool this, imm ProducerN f1, imm ProducerN f2);
}

interface Literal  {
imm method imm String toString(imm Literal this);
}

class True implements Bool  {
imm method imm Bool not(imm True this) =
new False();

imm method imm Bool or(imm True this, imm Bool b) =
this;

imm method imm Bool and(imm True this, imm Bool b) =
b;

imm method imm String toString(imm True this) =
"true";

imm method imm ProducerN thenElse(imm True this, imm ProducerN f1, imm ProducerN f2) =
f1;
}

interface ڰ៓્ꦷ꣢ৌ  {
read method capsule ៗⷸۛ ณ්(read ڰ៓્ꦷ꣢ৌ this, mut ˠ டྐׇ, @ꩂꪲ ࠨ, imm ⲹ ﹲ);

imm method imm ퟓऻ᳴ ꨨ(imm ڰ៓્ꦷ꣢ৌ this);

imm method read ఏ⳰ ࠉ(imm ڰ៓્ꦷ꣢ৌ this);
}

interface String extends Literal  {

}

class False implements Bool  {
imm method imm Bool not(imm False this) =
new True();

imm method imm Bool or(imm False this, imm Bool b) =
b;

imm method imm Bool and(imm False this, imm Bool b) =
this;

imm method imm String toString(imm False this) =
"false";

imm method imm ProducerN thenElse(imm False this, imm ProducerN f1, imm ProducerN f2) =
f2;
}

interface ProducerN  {
imm method imm Number get(imm ProducerN this);
}

class ﹍ implements ꪄಁིᤦꪷ༥, ੳা௨, ᛸ꯭  {
imm ᜉ ⴧ;
@@@ୟ᪔꣒ ୡඃ಼;
@ヽ ᝰꩍ;
@@ᏼັ Ἕᩴᜒ়༷ᢩࠞ;imm method read ಀಾ Çࠡ᠘(imm ﹍ this, @@ఎౌ ൎꢺ, @ꨡ ⁿ) =
2 .ኍ(this, "\r\0");
}

interface Int extends Number, Literal  {

}

