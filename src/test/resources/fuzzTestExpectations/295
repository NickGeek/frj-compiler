main = ꬂ;

class Std  {
imm method imm Number add(imm Std this, imm Number a, imm Number b) =
0 ;

imm method imm Number sub(imm Std this, imm Number a, imm Number b) =
0 ;

imm method imm Number mul(imm Std this, imm Number a, imm Number b) =
0 ;

imm method imm Bool gte(imm Std this, imm Number a, imm Number b) =
new False();
}

capability class StdC  {
mut method imm String print(mut StdC this, imm String msg) =
msg;
}

capability class ۼ༷᳹  {
imm Ʇີ ଭꠂ;
}

class True implements Bool  {
imm method imm Bool not(imm True this) =
new False();

imm method imm Bool or(imm True this, imm Bool b) =
this;

imm method imm Bool and(imm True this, imm Bool b) =
b;

imm method imm String toString(imm True this) =
"true";

imm method imm ProducerN thenElse(imm True this, imm ProducerN f1, imm ProducerN f2) =
f1;
}

interface String extends Literal  {

}

class False implements Bool  {
imm method imm Bool not(imm False this) =
new True();

imm method imm Bool or(imm False this, imm Bool b) =
b;

imm method imm Bool and(imm False this, imm Bool b) =
this;

imm method imm String toString(imm False this) =
"false";

imm method imm ProducerN thenElse(imm False this, imm ProducerN f1, imm ProducerN f2) =
f2;
}

interface Int extends Number, Literal  {

}

class ଐ implements ߴౌꩃ᳸, ꘫ  {
imm method capsule ர ᢀ(imm ଐ this) =
head(@ૡ ퟤ꤂ = new ኺ￻(),
this);

imm method @@ڋૢ᳭ ꩈ(imm ଐ this, @ൕ۴ ኆ) =
this;

mut method read ℇ ࠆှ(mut ଐ this, capsule ᾇᮁ़ ೡ) =
60 ;

imm method mut ᝮ ዀ᪘֪(imm ଐ this, imm ঽ ራ, @@ᨏ ݦ) =
@[].ங;
}

interface Float extends Number, Literal  {

}

interface Number extends Literal  {

}

interface Bool extends Literal  {
imm method imm Bool not(imm Bool this);

imm method imm Bool or(imm Bool this, imm Bool b);

imm method imm Bool and(imm Bool this, imm Bool b);

imm method imm ProducerN thenElse(imm Bool this, imm ProducerN f1, imm ProducerN f2);
}

interface Literal  {
imm method imm String toString(imm Literal this);
}

interface ProducerN  {
imm method imm Number get(imm ProducerN this);
}

class ꟿ implements ঌ, ︳ָ᷄  {
imm ₽ য়꘠ﬞﬞ;imm method @@ℵ སܾꧥ(imm ꟿ this) =
new 暑();
}

