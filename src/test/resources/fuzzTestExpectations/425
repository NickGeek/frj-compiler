main = new ꭟீ("⻴", @[tail(head(imm ꠸ ⶑ = ﹍꧑ఃꪴ,
"")); 2 ]);

interface Float extends Number, Literal  {

}

capability class Std  {
read method imm Number add(imm Number a, imm Number b) =
0 ;

mut method imm Float randomFloat(imm Number min, imm Number max) =
0.0 ;

read method imm Number sub(imm Number a, imm Number b) =
0 ;

mut method imm Int exit(imm Int code) =
code;

mut method mut Std print(imm String msg) =
this;

mut method mut Std println(imm String msg) =
this;

read method imm Number mul(imm Number a, imm Number b) =
0 ;

read method imm Bool gte(imm Number a, imm Number b) =
new False();

read method imm String concat(imm String a, imm String b) =
a;

read method @Bool clock(imm Int timeMs) =
@[];
}

interface Number extends Literal  {

}

interface Bool extends Literal  {
imm method imm Bool not();

imm method imm Bool or(imm Bool b);

imm method imm Bool and(imm Bool b);

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2);
}

interface Literal  {
imm method imm String toString();
}

class True implements Bool  {
imm method imm Bool not() =
new False();

imm method imm Bool or(imm Bool b) =
this;

imm method imm Bool and(imm Bool b) =
b;

imm method imm String toString() =
"true";

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2) =
f1;
}

interface String extends Literal  {

}

class False implements Bool  {
imm method imm Bool not() =
new True();

imm method imm Bool or(imm Bool b) =
b;

imm method imm Bool and(imm Bool b) =
this;

imm method imm String toString() =
"false";

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2) =
f2;
}

interface ProducerN  {
imm method imm Number get();
}

class ঽ implements ੴ, ᳵٚᯰऻ, יִࠗ‭ꢹ, ຳ, ቋ9, ª  {
imm ݴঁ᷼ꠂᜒ ઓ;
@₰꯳ූᬃ ぇꙹ;
mut ᝯ ꩉᤫຼ݅ৈ;read method @ߺ ૹ࠭৮(capsule າ ꣻඃ୮) =
29 ;

capsule method @@@@@ᲇᤥၧ᷿ פּ(imm ꧏ ꓭ) =
@[tail(@[tail(this); @[tail(new த҅ਃ().Ꞵ(this, tail(new ឃ()))); tail(@[])]]); @[head(mut ᮯ $۳ၴ = @[],
@ꪽꪳ ᱏ = ຢ,
this); head(@[])]];

capsule method @ບൈౢ ª() =
0.484375 ;

read method mut ⱁ៝၇ ౡ਼(mut Րୌ ཇ) =
tail(head(10 ));
}

interface Int extends Number, Literal  {

}

