main = head(imm ꍄਃ￹ ຂﬞ = @[],
this);

interface ມ extends ۦ, ߵ᪶  {
imm method @ந಼ ۮ゚ႛী９();

capsule method @@@@ퟓৣ ՙ؃();
}

capability class Std  {
read method imm Number add(imm Number a, imm Number b) =
0 ;

mut method imm Float randomFloat(imm Number min, imm Number max) =
0.0 ;

read method imm Number sub(imm Number a, imm Number b) =
0 ;

mut method mut Std print(imm String msg) =
this;

read method imm Number mul(imm Number a, imm Number b) =
0 ;

read method imm Bool gte(imm Number a, imm Number b) =
new False();

read method imm String concat(imm String a, imm String b) =
a;

read method @Bool clock(imm Int timeMs) =
@[];
}

class True implements Bool  {
imm method imm Bool not() =
new False();

imm method imm Bool or(imm Bool b) =
this;

imm method imm Bool and(imm Bool b) =
b;

imm method imm String toString() =
"true";

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2) =
f1;
}

interface String extends Literal  {

}

class False implements Bool  {
imm method imm Bool not() =
new True();

imm method imm Bool or(imm Bool b) =
b;

imm method imm Bool and(imm Bool b) =
this;

imm method imm String toString() =
"false";

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2) =
f2;
}

interface Int extends Number, Literal  {

}

interface Float extends Number, Literal  {

}

interface Number extends Literal  {

}

interface Bool extends Literal  {
imm method imm Bool not();

imm method imm Bool or(imm Bool b);

imm method imm Bool and(imm Bool b);

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2);
}

interface Literal  {
imm method imm String toString();
}

interface ⷌೋ  {
mut method @@ධ꫁۫֫꫁ ᢪ॑();
}

interface ProducerN  {
imm method imm Number get();
}

class ⁱᷱ᥆ؚွှ᱕ implements ᪧ, ﬕෲ꣑  {
imm method @@@ᨐ ఐఁৗꚞ() =
new ᜩੑ(new ढ(capsule ꤝੇ Ώࠖ܏ퟄׂ = 20 ,
@ൡ ֏๔ = capsule Ϳࠬ Eஂꧥ = 2.0 ,
new ଳׂ꛰࠭ෳ(imm ൕ ꬄ = @@@@@@ዋ᷽ ꫲꠤੑ = tail(new ଽ‫()),
mut ￠ ﾕ௯ = "",
tail("\'").@ಀࠧ(this, head(ꞵ), ॐ.ൎെͥัྐ = tail(this), new Ὓ("῵", 0.0 )),
this, 0 ),
@["𞀈"; @[head(this); tail(3 )]]));
}

