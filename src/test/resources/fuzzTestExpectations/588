main = @[];

interface Float extends Number, Literal  {

}

capability class Std  {
read method imm Number add(imm Number a, imm Number b) =
0 ;

mut method imm Float randomFloat(imm Number min, imm Number max) =
0.0 ;

read method imm Number sub(imm Number a, imm Number b) =
0 ;

mut method mut Std print(imm String msg) =
this;

read method imm Number mul(imm Number a, imm Number b) =
0 ;

read method imm Bool gte(imm Number a, imm Number b) =
new False();

read method imm String concat(imm String a, imm String b) =
a;

read method @Bool clock(imm Int timeMs) =
@[];
}

interface Number extends Literal  {

}

interface Bool extends Literal  {
imm method imm Bool not();

imm method imm Bool or(imm Bool b);

imm method imm Bool and(imm Bool b);

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2);
}

interface Literal  {
imm method imm String toString();
}

class True implements Bool  {
imm method imm Bool not() =
new False();

imm method imm Bool or(imm Bool b) =
this;

imm method imm Bool and(imm Bool b) =
b;

imm method imm String toString() =
"true";

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2) =
f1;
}

interface String extends Literal  {

}

class False implements Bool  {
imm method imm Bool not() =
new True();

imm method imm Bool or(imm Bool b) =
b;

imm method imm Bool and(imm Bool b) =
this;

imm method imm String toString() =
"false";

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2) =
f2;
}

interface ProducerN  {
imm method imm Number get();
}

class ؋ާ  {
@@@ॼ় ಀ;
@@@ꩺ ＿႑ꨭ;imm method mut ܓ‌୍ൈ଼ ꩫֿ() =
tail(new ޔ໐꤆૿());

read method @@@@ఽ ຂ(@ౠ ףּ￹, @ᲆਁꩌꧥ᤹ අੌୗ­, @ጋ ꫜ, imm ⷒ ꜘ, imm ᜄ ᢋ, read ౙ￻ ꫴᮡ) =
new ቘ().יִ(this);

read method @@@Å ꕪᮁ() =
mut ఛ ᭉ = tail(this),
this;

imm method @ৡٰ፟ั༙᠍ 〸ᳳ᪐­() =
@[];

imm method @@@@ஶັ ສ꠆ਿ() =
0 ;

capsule method @@@@@@ส᷿ ཋ(imm ꣽ꠆ কၗ) =
this;

read method @@@@ⁱ ㆯ(imm ൕ ゝ, imm ᱍ Ꭼ༦) =
90.0 ;

read method imm ೱ ﹰ(@@@ℕ ᪧ) =
this;

mut method mut ꮛ ଯྡྷ(@@ၑ᪄ྷ ꞵ) =
this;

imm method @ತ ߺꠂ܏() =
"";

imm method @ꤣઁ ᪧ༾᜔(@ਰᰫ ဟ᳴᩷, capsule এ Ὑ᳭, @₸ֿ߰ ꠄ, capsule ⵯ௬፞ ꫛ, imm ꟹ ଐᮀ, read Ώ ꫂꪸ) =
head(ঐഀ);

mut method imm ᝋ ൽ(@µ ງ) =
0 ;

imm method @ꡂ॓ ᬪె(imm ቍꝢ ⶻਁ) =
head(ῴౕ).ࡡ = @ଽ ສ = @ຯ ઞ = 〴.ஐ(this),
10 ,
2442 .ꘪ = @ⶥ੍ൗ Ήٰ = 5 ,
@ῑ ಶ = tail(this),
3.814697265625E-5 ;
}

interface Int extends Number, Literal  {

}

