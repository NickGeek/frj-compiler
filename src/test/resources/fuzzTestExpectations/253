main = this;

interface ಡ  {

}

capability class Std  {
read method imm Number add(read Std this, imm Number a, imm Number b) =
0 ;

mut method imm Float randomFloat(mut Std this, imm Number min, imm Number max) =
0.0 ;

mut method @Bool sleep(mut Std this, imm Int timeMs) =
@[];

read method imm Number sub(read Std this, imm Number a, imm Number b) =
0 ;

mut method mut Std print(mut Std this, imm String msg) =
this;

read method imm Number mul(read Std this, imm Number a, imm Number b) =
0 ;

read method imm Bool gte(read Std this, imm Number a, imm Number b) =
new False();

read method imm String concat(read Std this, imm String a, imm String b) =
a;
}

capability class $꘨༷  {
imm method imm ꧻ⁣్ ౡ࿆(imm $꘨༷ this) =
ˮꤨ᳭ᨗࠗ;

imm method imm ᎍ᮸ී ৎ(imm $꘨༷ this) =
@[];
}

class True implements Bool  {
imm method imm Bool not(imm True this) =
new False();

imm method imm Bool or(imm True this, imm Bool b) =
this;

imm method imm Bool and(imm True this, imm Bool b) =
b;

imm method imm String toString(imm True this) =
"true";

imm method imm ProducerN thenElse(imm True this, imm ProducerN f1, imm ProducerN f2) =
f1;
}

interface ຊ extends ᥝஂႚ, ൾຼ்ୗ, ꝫ  {
mut method read ຟූેٰ〯 ˬ(mut ຊ this, imm ၑ๋ ꥧ, imm ꠛ᪘ੋ লୄꢁᤪ);
}

interface String extends Literal  {

}

class False implements Bool  {
imm method imm Bool not(imm False this) =
new True();

imm method imm Bool or(imm False this, imm Bool b) =
b;

imm method imm Bool and(imm False this, imm Bool b) =
this;

imm method imm String toString(imm False this) =
"false";

imm method imm ProducerN thenElse(imm False this, imm ProducerN f1, imm ProducerN f2) =
f2;
}

interface Int extends Number, Literal  {

}

interface Float extends Number, Literal  {

}

interface Number extends Literal  {

}

interface Bool extends Literal  {
imm method imm Bool not(imm Bool this);

imm method imm Bool or(imm Bool this, imm Bool b);

imm method imm Bool and(imm Bool this, imm Bool b);

imm method imm ProducerN thenElse(imm Bool this, imm ProducerN f1, imm ProducerN f2);
}

interface Literal  {
imm method imm String toString(imm Literal this);
}

class ૹ  {
imm હ় ཇ⃒;
imm ႎ༹ ⷈൌׇᳳ࿆᳒᳐ৗ;
capsule ¥ॏ ᢪ;imm method imm దඃಁ ୱ(imm ૹ this) =
tail(new ງ‪()).ꩆٰ;

imm method capsule ዀ২܏ొ ඇ(imm ૹ this, @@ಀ ℳୁ၈༹) =
tail(this);

imm method imm লᮁ ࡪ(imm ૹ this) =
tail(this);

read method capsule ඔ ᳶࠢ(read ૹ this) =
0 ;
}

interface ProducerN  {
imm method imm Number get(imm ProducerN this);
}

