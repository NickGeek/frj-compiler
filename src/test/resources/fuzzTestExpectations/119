main = tail(this);

class য়༿ implements ˮ꣡ೌঁ, ˋ, ஞ, ꭡᢩ, ۿం  {
mut ꎰ྇ꪷ ᪧ࿆;
@@@@ᮮ ନᨗ៣ꨯ࠘;
@@@ভꪷ ι;imm method @@ኻ Բ() =
0.078125 ;

capsule method imm ହ ኁۧ() =
new ใ(tail(@[read ॴ ߗௗ્ = @[ৎꠣ; this],
"".Ȱ౩١﻿; 172 ]));

imm method @ਸⷵૢ ਸ਼() =
tail(tail(head(@ㆯ ퟥᭁ༹ = tail(new ꧡ꫶⵿ᨙ૾᭕᭔ੵෲಃ(0.5 , ۯ୮ᰵ)).ⅎ = @[],
4 ).ˣ.ㄫ)).@Ⴭ(this, "");
}

capability class Std  {
read method imm Number add(imm Number a, imm Number b) =
0 ;

mut method imm Float randomFloat(imm Number min, imm Number max) =
0.0 ;

read method imm Number sub(imm Number a, imm Number b) =
0 ;

mut method mut Std print(imm String msg) =
this;

read method imm Number mul(imm Number a, imm Number b) =
0 ;

read method imm Bool gte(imm Number a, imm Number b) =
new False();

read method imm String concat(imm String a, imm String b) =
a;

read method @Bool clock(imm Int timeMs) =
@[];
}

class True implements Bool  {
imm method imm Bool not() =
new False();

imm method imm Bool or(imm Bool b) =
this;

imm method imm Bool and(imm Bool b) =
b;

imm method imm String toString() =
"true";

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2) =
f1;
}

interface String extends Literal  {

}

class False implements Bool  {
imm method imm Bool not() =
new True();

imm method imm Bool or(imm Bool b) =
b;

imm method imm Bool and(imm Bool b) =
this;

imm method imm String toString() =
"false";

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2) =
f2;
}

class ᬍ implements ⶆ  {
@@ⅇົ ࠨ;
imm ঽ ॶ;
}

interface Int extends Number, Literal  {

}

interface Float extends Number, Literal  {

}

interface Number extends Literal  {

}

capability class ஏ૩ᝒ  {
imm method @@చృ ᎇ࡚ꠂ(imm £ ਸᬻ) =
ଊ꧔;

mut method imm ࠚ࡙᠌ ᢱꩌ() =
@@@ວ ￆ = new ኲ(),
"";

imm method @@@@ⱼ᜴ ꣻ(@@ᮯ⵿９౨ מ) =
new অ();

imm method imm ͼ Ꮧ꯭꫶ׄ᮳() =
"";
}

interface Bool extends Literal  {
imm method imm Bool not();

imm method imm Bool or(imm Bool b);

imm method imm Bool and(imm Bool b);

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2);
}

interface Literal  {
imm method imm String toString();
}

interface ProducerN  {
imm method imm Number get();
}

capability class ٮ۫ implements ໜ  {
@ೡᯭ ޱุ͛໙ᩗ;imm method imm ਵᤫ ำ(imm ᳵׇꠋ כּ, capsule યೌ ⅎ) =
tail(@[@[]; tail(0 )]);

imm method @@@ⴚ༹ ＿(read אַ ꘫ, imm ฏௗ ᢄ, imm ܯ ꩩ, read ᦙ ᨁுௗੱ, imm ؋ Ω, mut ਪ ድ) =
ℝꪾৗ;
}

