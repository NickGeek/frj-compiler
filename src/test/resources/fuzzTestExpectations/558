main = 0.84 ;

class ᒐؓ implements ߵ, ቍ  {

}

capability class Std  {
read method imm Number add(imm Number a, imm Number b) =
0 ;

mut method imm Float randomFloat(imm Number min, imm Number max) =
0.0 ;

read method imm Number sub(imm Number a, imm Number b) =
0 ;

mut method imm Int exit(imm Int code) =
code;

mut method mut Std print(imm String msg) =
this;

mut method mut Std println(imm String msg) =
this;

read method imm Number mul(imm Number a, imm Number b) =
0 ;

read method imm Bool gte(imm Number a, imm Number b) =
new False();

read method imm String concat(imm String a, imm String b) =
a;

read method @Bool clock(imm Int timeMs) =
@[];
}

class True implements Bool  {
imm method imm Bool not() =
new False();

imm method imm Bool or(imm Bool b) =
this;

imm method imm Bool and(imm Bool b) =
b;

imm method imm String toString() =
"true";

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2) =
f1;
}

interface String extends Literal  {

}

class False implements Bool  {
imm method imm Bool not() =
new True();

imm method imm Bool or(imm Bool b) =
b;

imm method imm Bool and(imm Bool b) =
this;

imm method imm String toString() =
"false";

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2) =
f2;
}

interface Int extends Number, Literal  {

}

interface Float extends Number, Literal  {

}

class অ༹ೊ implements ￚ  {
@ﴟ ꩠ6;imm method @@؋ꠂৗ᠌ꩌਾۨꩻ ଓ() =
@@@@@ⸯၲ ꫢॣ = @[],
read ᙻ１ౖ॒ ꫂܴ = new ၮ(tail(head(head(6.0 ))), "\'", tail(0.0 )),
7.5 .ॳᩢ = this;
}

interface Number extends Literal  {

}

interface Bool extends Literal  {
imm method imm Bool not();

imm method imm Bool or(imm Bool b);

imm method imm Bool and(imm Bool b);

imm method imm ProducerN thenElse(imm ProducerN f1, imm ProducerN f2);
}

interface ℕ extends Ὓ, ந༵, µ  {

}

interface Literal  {
imm method imm String toString();
}

capability class ਗ  {
imm method imm ˬၪ ঢ়() =
this;
}

class ՙ implements ﬆ  {
@@@@ྈೃ ꪱ෧;capsule method mut ⷒ ῗ(imm ᛞ၆ੂ ঐ๎ׂ) =
@[ㄑ྆; 12.07421875 ];
}

interface ProducerN  {
imm method imm Number get();
}

interface ଡ଼  {

}

