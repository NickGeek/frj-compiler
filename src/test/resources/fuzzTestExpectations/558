main = 0.84 ;

class ᒐؓ implements ߵ, ቍ  {

}

capability class Std  {
read method imm Number add(read Std this, imm Number a, imm Number b) =
0 ;

read method imm Number sub(read Std this, imm Number a, imm Number b) =
0 ;

mut method imm String print(mut Std this, imm String msg) =
msg;

read method imm Number mul(read Std this, imm Number a, imm Number b) =
0 ;

read method imm Bool gte(read Std this, imm Number a, imm Number b) =
new False();
}

class True implements Bool  {
imm method imm Bool not(imm True this) =
new False();

imm method imm Bool or(imm True this, imm Bool b) =
this;

imm method imm Bool and(imm True this, imm Bool b) =
b;

imm method imm String toString(imm True this) =
"true";

imm method imm ProducerN thenElse(imm True this, imm ProducerN f1, imm ProducerN f2) =
f1;
}

interface String extends Literal  {

}

class False implements Bool  {
imm method imm Bool not(imm False this) =
new True();

imm method imm Bool or(imm False this, imm Bool b) =
b;

imm method imm Bool and(imm False this, imm Bool b) =
this;

imm method imm String toString(imm False this) =
"false";

imm method imm ProducerN thenElse(imm False this, imm ProducerN f1, imm ProducerN f2) =
f2;
}

interface Int extends Number, Literal  {

}

interface Float extends Number, Literal  {

}

class অ༹ೊ implements ￚ  {
@ﴟ ꩠ6;imm method @@؋ꠂৗ᠌ꩌਾۨꩻ ଓ(imm অ༹ೊ this) =
@@@@@ⸯၲ ꫢॣ = @[],
read ᙻ１ౖ॒ ꫂܴ = new ၮ(tail(head(head(6.0 ))), "\'", tail(0.0 )),
7.5 .ॳᩢ = this;
}

interface Number extends Literal  {

}

interface Bool extends Literal  {
imm method imm Bool not(imm Bool this);

imm method imm Bool or(imm Bool this, imm Bool b);

imm method imm Bool and(imm Bool this, imm Bool b);

imm method imm ProducerN thenElse(imm Bool this, imm ProducerN f1, imm ProducerN f2);
}

interface ℕ extends Ὓ, ந༵, µ  {

}

interface Literal  {
imm method imm String toString(imm Literal this);
}

capability class ਗ  {
imm method imm ˬၪ ঢ়(imm ਗ this) =
this;
}

class ՙ implements ﬆ  {
@@@@ྈೃ ꪱ෧;capsule method mut ⷒ ῗ(capsule ՙ this, imm ᛞ၆ੂ ঐ๎ׂ) =
@[ㄑ྆; 12.07421875 ];
}

interface ProducerN  {
imm method imm Number get(imm ProducerN this);
}

interface ଡ଼  {

}

