main = @[];

class Std  {
imm method imm Number add(imm Std this, imm Number a, imm Number b) =
0 ;

imm method imm Number sub(imm Std this, imm Number a, imm Number b) =
0 ;

imm method imm Number mul(imm Std this, imm Number a, imm Number b) =
0 ;

imm method imm Bool gte(imm Std this, imm Number a, imm Number b) =
new False();
}

capability class ᝦ҆  {
imm method @@ₛ꩓ ª᪃഼۪⃗(imm ᝦ҆ this, imm ᡀ ℤ, imm Ὕ୧ ￏꨵ, imm ퟍၘ ꯙᭁ) =
head(Infinity );

imm method @@ᅮ ೞઃ(imm ᝦ҆ this) =
head(29 );
}

capability class ⶤ  {
imm method imm ᾬ￻ ꛅ֭(imm ⶤ this) =
ḿ;
}

capability class StdC  {
mut method imm String print(mut StdC this, imm String msg) =
msg;
}

class True implements Bool  {
imm method imm Bool not(imm True this) =
new False();

imm method imm Bool or(imm True this, imm Bool b) =
this;

imm method imm Bool and(imm True this, imm Bool b) =
b;

imm method imm String toString(imm True this) =
"true";

imm method imm ProducerN thenElse(imm True this, imm ProducerN f1, imm ProducerN f2) =
f1;
}

interface String extends Literal  {

}

class False implements Bool  {
imm method imm Bool not(imm False this) =
new True();

imm method imm Bool or(imm False this, imm Bool b) =
b;

imm method imm Bool and(imm False this, imm Bool b) =
this;

imm method imm String toString(imm False this) =
"false";

imm method imm ProducerN thenElse(imm False this, imm ProducerN f1, imm ProducerN f2) =
f2;
}

interface Int extends Number, Literal  {

}

interface Float extends Number, Literal  {

}

capability class ᙼ᠍  {
imm ꡪ ଲ;
imm ₡ ⁿ;imm method imm ײ ꚃ᪐ֿࠥ֟(imm ᙼ᠍ this) =
@ⵒୢ༙ꫵଁ ጧ = tail(head(@[])),
@[];

capsule method @གྷ໒ ஜ꧓ͅ(capsule ᙼ᠍ this, @@ಀ ᴶ) =
920.0 ;
}

interface Number extends Literal  {

}

interface Bool extends Literal  {
imm method imm Bool not(imm Bool this);

imm method imm Bool or(imm Bool this, imm Bool b);

imm method imm Bool and(imm Bool this, imm Bool b);

imm method imm ProducerN thenElse(imm Bool this, imm ProducerN f1, imm ProducerN f2);
}

class ጓ૯ᨘ implements ᅑᝳ୧  {

}

interface Literal  {
imm method imm String toString(imm Literal this);
}

interface ProducerN  {
imm method imm Number get(imm ProducerN this);
}

capability class ﳌׁꪸ implements ઽ  {

}

